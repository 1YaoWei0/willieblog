{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","path":"js/sidebar.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_drafts/xpp-export-to-excel.md","hash":"de2d5f384888068258c97ed6f6eeb9bf5488acdc","modified":1736061308366},{"_id":"source/_drafts/xpp-open-onhandlist.md","hash":"0df24524b396efb3606b37bdea3f37d775864864","modified":1736061308366},{"_id":"source/about/index.md","hash":"66b5532340da6443e77647c1814c1ad09c4c9be2","modified":1740402589410},{"_id":"source/_posts/ai-plateform-flask.md","hash":"a253d964e4776643253186fec8c8b603c9630e7c","modified":1740316023167},{"_id":"source/_posts/commerce-cache.md","hash":"8a1a6cbb8b56cfc8f92b5303a96a41ad07ad4afa","modified":1740316149318},{"_id":"source/_posts/commerce-use-languageId.md","hash":"b0a58438e80ecb159b6ffb1983fd86bbab7a48f0","modified":1737213558391},{"_id":"source/_posts/flask-tutorial.md","hash":"aea91cf30361ef55b567cb2903531bc359eef165","modified":1740315988079},{"_id":"source/_posts/flask-tutorial-2.md","hash":"c2187db339220b517539a3111566451d812c76c2","modified":1740315944105},{"_id":"source/_posts/hello-world.md","hash":"d8483013947e3770fbe4120a37a947c3e37dbccd","modified":1737211598269},{"_id":"source/_posts/mssql-clear-log.md","hash":"eebb03a9eaf010b67e4a9f1876f7f6751f782dca","modified":1737213596217},{"_id":"source/_posts/xpp-api-list.md","hash":"5b3fe8516a390b705d01283a08c0c2e545833308","modified":1740316122189},{"_id":"source/_posts/xpp-debug-configuration.md","hash":"aadd74654ca977d983c036b744bb4ce7647a2051","modified":1740314589275},{"_id":"source/_posts/xpp-invoice-purchase-order.md","hash":"cecd09d47d298b43e9ecc5817495a42afdd2f2b2","modified":1740315570833},{"_id":"source/_posts/xpp-merge-ledger-account.md","hash":"705cdedef6997c4942c005a57959bdd94cd06cb8","modified":1740316073979},{"_id":"source/_posts/xpp-open-in-office.md","hash":"7caaf2ba325af2b4c197bd7d115b50e67a2fb2cb","modified":1740315910128},{"_id":"source/categories/index.md","hash":"1fbe8d38cefcf04714bc5c04d710d5e761495926","modified":1734858760993},{"_id":"source/tags/index.md","hash":"3b5504f2981723b4eed22bb43840bdeeb011644b","modified":1734858784628},{"_id":"source/_posts/commerce-cache/commerce-cache-example.png","hash":"373b25eb3f107582c3eecdea1209473ebae568ee","modified":1734843078320},{"_id":"source/_posts/ai-plateform-flask/image.png","hash":"715ef9e63db901a9157d5be93ba6bb9a18810805","modified":1736251052629},{"_id":"source/_posts/mssql-clear-log/mssql-clear-log.png","hash":"6d6f92e238a5d60b3aa370640dede1dc58eed509","modified":1736061308366},{"_id":"source/_posts/xpp-api-list/xpp-api-list-recordinsertlist.png","hash":"6b0ec9fa8ce8c1b94ea0d400e25d964a86a2f048","modified":1734959583864},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office.png","hash":"e5597ae72ec0f393eefdba5b392300a018ad3a67","modified":1737209971519},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office2.png","hash":"d34920c5e53717299fbae46a4382ed2373ea5c07","modified":1737209977914},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office3.png","hash":"35a5d7ece7eef51acd7d862a869a63a47492fb64","modified":1737209983787},{"_id":"source/_posts/xpp-debug-configuration/xpp-debug-configuration.png","hash":"f613c9fc9f3dd1eb3a5b54aa158cde9224f0cc9e","modified":1740314448733},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1734961724634},{"_id":"node_modules/hexo-theme-next/README.md","hash":"20d3aab17b7d9b7ab537800a5ee932af8438664a","modified":1734961724680},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"ed5cfe3ecb64bbecacd553e7c41eb5a545c4b548","modified":1734961725713},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"df15ee5204757684b0c22877d3cf4e8ba7d3686d","modified":1734961725700},{"_id":"node_modules/hexo-theme-next/package.json","hash":"e54aaf72003fd90c13b8dd538f3a0e5cdf88a34f","modified":1734961724581},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1734961725699},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1734961724598},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1734961724610},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1734961724663},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1734961725715},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"564bed75da6e05b11dce6164508f97a15e2fb6c2","modified":1734961725718},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1734961725722},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1734961725724},{"_id":"node_modules/hexo-theme-next/languages/eo.yml","hash":"e34bb33ae827bf2f0727088599a73bc64bdad1b0","modified":1734961725733},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"8ac44e58f71a38b7697a2f7f98a6971ed818cb5b","modified":1734961725747},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1734961725750},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1734961725734},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1734961725739},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1734961725752},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1734961725754},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1734961725756},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1734961725766},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"b62faaa767a45a613dd042b5f1903675eb5a8cf9","modified":1734961725783},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1734961725772},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1734961725796},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1734961725788},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1734961725813},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1734961725805},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1734961725823},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1734961725824},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1734961725830},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1734961725832},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"8eb6a9f231ce1bfa54cc54418ccf14f01dcc9a31","modified":1734961725839},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"5c0f00cdac3f4727b880dd223f622a535736fa8e","modified":1734961725842},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1734961724695},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1734961724762},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1734961724724},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"af6d7570621be760536c216a56d74e40a1cceae2","modified":1734961724996},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1734961725043},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1734961724913},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1734961725074},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"0be2d7a75ffc3d9a963cf89a13bd1b50579f8304","modified":1734961724647},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1734961724630},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"12a6631617695504d5cf2a94b57d87bd331bef6f","modified":1734961724624},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"287f57dbdfd23341800a0ff310f3474272b9dcc8","modified":1734961724653},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1734961724786},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"fbf8232cacf0df87e88e74860be66c9f86018302","modified":1734961724804},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1734961724923},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"d83fb59f02c5e6630a7770401a05c02f6f07358b","modified":1734961725096},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1734961725002},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"313637fe3569f98fd926e8cd0fcc75d098eb6e6e","modified":1734961725022},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"952449064fcb6a5cefc281b585f9149809f857f1","modified":1734961725042},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1734961725056},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1734961724706},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1734961724797},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"dfd7cdd6ba89f8c3deabc27726c7a350cadafd11","modified":1734961724873},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1734961724983},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1734961725048},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"51704a2eadb0d363762ebf2e44994696e0843e40","modified":1734961724866},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1734961725093},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"ebfe0954e3931431f46f913abe08d0212e06e7c2","modified":1734961725111},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"bbeae369eaba9a2565fc359a5b79184d21bdd167","modified":1734961725180},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1734961725513},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1734961725534},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1734961725097},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1734961722292},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1734961725098},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1734961725106},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"a38c6d92b368bfc42c72ad799ad03f3274957065","modified":1734961725684},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1734961725687},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"9ba4cceafd12c6d5ba8a6b986a046ef8319a7811","modified":1734961723296},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1734961723647},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1734961723696},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1734961723788},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"3864e56a829b698b98ec8d93b8916271ba6fd015","modified":1734961724407},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"8e2d589585f5270ee90285d3e65b69923c7629d8","modified":1734961724439},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"0996078604f356a4f6692b9b0838038b3b10aa8a","modified":1734961724491},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1734961724510},{"_id":"node_modules/hexo-theme-next/source/js/sidebar.js","hash":"2ee359ae48273b01ba1e0768704524e08702c7eb","modified":1734961724514},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"b2c0fd95770e58c25c9f99e1d66fe0e625e3cdab","modified":1734961724538},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1734961724189},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1734961723838},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1734961724339},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"2063aaa1db448ebcf7b0fdbbc54d3991a368bbd3","modified":1734961724395},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1734961724495},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"049b1a0b66563e39f68710bb576a8c7342ae749c","modified":1734961723924},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1734961724020},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1734961724434},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"25bb3ec3c7c456aa1d1650eb139605b7df7394eb","modified":1734961724447},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1734961724450},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"6281d47c1de98eb38f3aa0f6df29bbb19d412173","modified":1734961724454},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"af3946a595f997eb43d9af87428e4898c9acbc82","modified":1734961724467},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1734961723380},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1734961723422},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1734961723475},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"f57f7e09eb6220f681fa8385082b0960502ce5c4","modified":1734961724121},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1734961724201},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1734961724278},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"7d7bbc4a9970bd4c5449bc71b94364a8ec61e5d2","modified":1734961724362},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1734961724298},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1734961724471},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1734961724484},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1734961724523},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1734961724562},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1734961724573},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"93c1d103d9d16581c944c51f3d0638f57c80ee41","modified":1734961724822},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1734961724834},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1734961724742},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1734961724838},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1734961724952},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1734961724954},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1734961725067},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1734961724747},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1734961724985},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1734961724759},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1734961725052},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1734961725077},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1734961725034},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"bfff923526d6800218f08dba6ce0bbf5c17755fd","modified":1734961725025},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1734961725027},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1734961725035},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"16696990e4ce65fc8db18c4635082a5d5d06ff07","modified":1734961725037},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"6ad43135bd3aecf933ffdd750763e27ade36f97c","modified":1734961724854},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"bc5708e38b6070dff0cab6bf9480971017ce4dda","modified":1734961725065},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1734961724783},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1734961724731},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1734961724808},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1734961724870},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1734961724816},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1734961724937},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1734961725036},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1734961724974},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1734961725016},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1734961725090},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1734961724776},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1734961725088},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1734961724766},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1734961724788},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1734961724790},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1734961724806},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1734961724918},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1734961724933},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1734961725092},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1734961724888},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1734961724921},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1734961724936},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"41b28f05e6233fb37700f7151f55868be10a0965","modified":1734961724713},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1734961724934},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"55c2468b2b7f035881d494085527d6554f37b556","modified":1734961724751},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1734961724799},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1734961724904},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1734961724930},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1734961725011},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1734961725093},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1734961724966},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"2c800eaab6c613e5d091be2111aaa786641aa0c2","modified":1734961725526},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1734961725303},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"879b49f693af0c04c285b2dd0c9cccaf77347b7c","modified":1734961725529},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"20d5c6aa136bbb55e03906d98ee90ad3fbaa80a7","modified":1734961725555},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"e814de4dab6aee6153d0a46438c231f94ed05e73","modified":1734961725238},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1734961722550},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"819f382c561fe5ec23c67cc5fabd63dd1cc22dc1","modified":1734961723933},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1734961724474},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1734961724503},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"8a8f752260be5b8098393f9879b61ffe904465e8","modified":1734961724156},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1734961723765},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1734961724213},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"5942feb3f31ed3480bf50b0f5a4a305b5bdca3d6","modified":1734961724529},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1734961724428},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"e2b4a9d6b08155735ec336eedc506763d5671821","modified":1734961724556},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1734961723531},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1734961723853},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1734961723726},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1734961723805},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1734961723886},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1734961724068},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1734961724224},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1734961724304},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1734961724541},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"b8445c828d78a38e2de50bdc86b3bff66285ea0f","modified":1734961725230},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1734961725326},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1734961725614},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1734961725453},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"1dbf2c339adcd27026c3a2ded32ee91ce08cea26","modified":1734961725528},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d137b54b6f5fae958e9724cdee8584745a41f07a","modified":1734961725236},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1734961725264},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1734961725269},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1734961725473},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1734961725531},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1734961725545},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1734961725668},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"69c66aab4651e2e7ae9e65f08600144970648c60","modified":1734961725674},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1734961725493},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1734961725126},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1734961725144},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"f23c53e32d140091b819be2603d1afbbb5d66933","modified":1734961725158},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1734961725187},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1734961725493},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"dc03835e42d82eaf2633cf3b627990ad3e1f5967","modified":1734961725139},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"a92c4eb16bdb7806079467eb022ccf193bb0f794","modified":1734961725157},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"549541d3a62d296427426fde8976289cb7ee2cc4","modified":1734961725173},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bc0b1b8312ec2e076c802419d603e382a1c32232","modified":1734961725213},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1734961725219},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1734961725499},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1734961725129},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1734961725145},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"e31f6adbb22a451f07e4661cff9a2f12e4e99a36","modified":1734961725165},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"c29a827e82d2820ed8977c92994da73721200fac","modified":1734961725198},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1734961725217},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1734961725498},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1734961723197},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"def07bcc7c17d8a0caad177fb1dd2f3a5e5b3536","modified":1734961724105},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1734961724136},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1734961724355},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1734961723585},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1734961723871},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1734961723904},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1734961724087},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1734961724232},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1734961724318},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1734961724545},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1734961723624},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1734961724259},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1734961724527},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"1d1b6d847215b16f26b230859d7e16501190ecc0","modified":1734961724380},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1734961724344},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1734961724487},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1734961724579},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"111f60e26b82b4d5be4357737e9273617778c9a9","modified":1734961722999},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4262628e173b16c4c6c18f817173dd103fb9e9a8","modified":1734961724325},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1734961724008},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1734961724285},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1734961725263},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1734961725337},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"51a97a33879289904cb523ddc2d88b5b0c60fa72","modified":1734961725265},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1734961725672},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1734961725630},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"56d5b7ff73f466c9ae54f7204ae899281295d749","modified":1734961725566},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1734961725380},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"809bab3414b1eb1ae44444eb821126868f764414","modified":1734961725569},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1734961725580},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1734961725572},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1734961725582},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"1191f1bfa5c43e54be8e5b3cc0d802984e161747","modified":1734961725587},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1734961725594},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"b47fb36915962309553ff7fb1782341585ed2b76","modified":1734961725596},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1734961725602},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1734961725306},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1734961725290},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1734961725516},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"be60b8dacd4dc9d2b1b68982dc4f0c5325b9a315","modified":1734961725635},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"54d12e2c5d9982f7b9e5b23be5133954a8514e9d","modified":1734961725398},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1734961725675},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1734961725447},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1734961725254},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1734961725313},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1734961725450},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"a3dd3edea9c01b66b28a8367185269b9dcc3bdee","modified":1734961725519},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1734961725660},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1734961725659},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"0944dc38b11e89b472a17607ef049393f2a0439f","modified":1734961725466},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1734961725621},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"0847400d8579b0a2dd1bf662c78954c10adf2680","modified":1734961725637},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"46eece42510c2c89bb9209afb0262ad76a4b0b36","modified":1734961725647},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1734961725639},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1734961725651},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1734961725645},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"741566d6ac5f852b5c8dee6a8996b65e48e7c97f","modified":1734961725657},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1734961725661},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1734961725656},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f634f94828620e88c3f5a8db56f7944f6ba232b0","modified":1734961725279},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/fold.styl","hash":"42a0b65491ad85438596b3fe0b7f23973e4cef34","modified":1734961725299},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"138f78147bc6bd6005f329ada34dc79b7625542d","modified":1734961725472},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1734961725247},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1734961725320},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1734961725480},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1734961725501},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1734961725509},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1734961725519},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"8213015d9cae45d2c9945f8aba9d8db39c734efc","modified":1734961725536},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1734961725552},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"33dd6ad015dde65fd46f34961655442e8e82b52e","modified":1734961725668},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1734961725676},{"_id":"public/about/index.html","hash":"20c0cc7ae430e61ad35b35a63a4ce20a86710454","modified":1740402599102},{"_id":"public/categories/index.html","hash":"73b02476e1deac65a80550570527cd1b725e6757","modified":1740402599102},{"_id":"public/tags/index.html","hash":"43f8ad393ce8da92e55dfec8ca3ecf14907e1740","modified":1740402599102},{"_id":"public/2025/02/23/xpp-invoice-purchase-order/index.html","hash":"43291969b79afec44c26a0b324af8e8922e3199b","modified":1740402599102},{"_id":"public/2025/02/23/xpp-debug-configuration/index.html","hash":"546060418aa750453cbff593e6330ac02767ac9d","modified":1740402599102},{"_id":"public/2025/01/18/xpp-open-in-office/index.html","hash":"db363a814f626abfd80dbe896d873373e86be08d","modified":1740402599102},{"_id":"public/2025/01/09/flask-tutorial-2/index.html","hash":"5315dce002eb907532e6fea8d4ee212d43f2ba0b","modified":1740402599102},{"_id":"public/2025/01/08/flask-tutorial/index.html","hash":"175c96ddda4cd4cb620ff1480458e4576bef55e3","modified":1740402599102},{"_id":"public/2025/01/07/ai-plateform-flask/index.html","hash":"6bd65a07fda3c8f3c4f5a563e0fb3e4e89dfb69f","modified":1740402599102},{"_id":"public/2024/12/23/mssql-clear-log/index.html","hash":"07929b3367321abec684c2b9f9033e4058f6b86a","modified":1740402599102},{"_id":"public/2024/12/23/xpp-merge-ledger-account/index.html","hash":"af3378eb99c50bec96cd75b555d98bd552e624d2","modified":1740402599102},{"_id":"public/2024/12/23/xpp-api-list/index.html","hash":"8948835613a9d6e0dc4b3ee4d4d6b27baa2d7d2c","modified":1740402599102},{"_id":"public/2024/12/23/commerce-use-languageId/index.html","hash":"1997f81c98ca7f8214ea308da58cda6e0aad01ea","modified":1740402599102},{"_id":"public/2024/12/22/commerce-cache/index.html","hash":"255665b69028e0c6a0c058016df889583f596458","modified":1740402599102},{"_id":"public/2024/12/21/hello-world/index.html","hash":"0a28869bf782590ed9cf70ad210824274e5447e1","modified":1740402599102},{"_id":"public/archives/index.html","hash":"71e7ec5a37c5d00d57c78d98924db5adfcd162d0","modified":1740402599102},{"_id":"public/archives/page/2/index.html","hash":"208cf2cf677efc360734f841903df0a3e76e52f5","modified":1740402599102},{"_id":"public/archives/2024/index.html","hash":"360493a920aeb2be208160b2e1381663aa4c4260","modified":1740402599102},{"_id":"public/archives/2024/12/index.html","hash":"269f88ea3023ebc618ad6645004efb978a8eb139","modified":1740402599102},{"_id":"public/archives/2025/index.html","hash":"174a5e1aba303b5e65fcb7c2c40610bc95b957d6","modified":1740402599102},{"_id":"public/archives/2025/01/index.html","hash":"bd7cdde76c93d28c23f411687804061ad7354489","modified":1740402599102},{"_id":"public/archives/2025/02/index.html","hash":"85fe6fcbe54d1937d9d16777f9ba2ff442f62cd7","modified":1740402599102},{"_id":"public/categories/d365/index.html","hash":"5dcd357928f3509e27b980fd5aac2bd231325333","modified":1740402599102},{"_id":"public/categories/Retail-Commerce/index.html","hash":"0d7b13757ffc21fce0f0a120666d19351c84c2f8","modified":1740402599102},{"_id":"public/categories/d365/x/index.html","hash":"d4f44396780b7efa79f555d646f3e04c8dbea550","modified":1740402599102},{"_id":"public/categories/X/index.html","hash":"3fea0df3b885a9f540d68edd706f53538033c709","modified":1740402599102},{"_id":"public/index.html","hash":"8984f4a037466ff5bc67bfc584fc7c433362c358","modified":1740402599102},{"_id":"public/page/2/index.html","hash":"8c2a446118fe59fd2a7adb59ed132e20380f40fd","modified":1740402599102},{"_id":"public/tags/Retail-Commerce/index.html","hash":"dc3c3ddea099029201bb71d755c30c5feda4d129","modified":1740402599102},{"_id":"public/tags/X/index.html","hash":"e6f74cb28aed87cbed15f452959af4f95c416919","modified":1740402599102},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1740402599102},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1740402599102},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1740402599102},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1740402599102},{"_id":"public/2025/01/07/ai-plateform-flask/image.png","hash":"715ef9e63db901a9157d5be93ba6bb9a18810805","modified":1740402599102},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1740402599102},{"_id":"public/2024/12/23/xpp-api-list/xpp-api-list-recordinsertlist.png","hash":"6b0ec9fa8ce8c1b94ea0d400e25d964a86a2f048","modified":1740402599102},{"_id":"public/2024/12/23/mssql-clear-log/mssql-clear-log.png","hash":"6d6f92e238a5d60b3aa370640dede1dc58eed509","modified":1740402599102},{"_id":"public/2024/12/22/commerce-cache/commerce-cache-example.png","hash":"373b25eb3f107582c3eecdea1209473ebae568ee","modified":1740402599102},{"_id":"public/2025/01/18/xpp-open-in-office/xpp-open-in-office.png","hash":"e5597ae72ec0f393eefdba5b392300a018ad3a67","modified":1740402599102},{"_id":"public/2025/01/18/xpp-open-in-office/xpp-open-in-office2.png","hash":"d34920c5e53717299fbae46a4382ed2373ea5c07","modified":1740402599102},{"_id":"public/2025/01/18/xpp-open-in-office/xpp-open-in-office3.png","hash":"35a5d7ece7eef51acd7d862a869a63a47492fb64","modified":1740402599102},{"_id":"public/css/main.css","hash":"a6b3edfaef2ca803ee965edae8e82a57e7c9739b","modified":1740402599102},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1740402599102},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1740402599102},{"_id":"public/js/bookmark.js","hash":"9ba4cceafd12c6d5ba8a6b986a046ef8319a7811","modified":1740402599102},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1740402599102},{"_id":"public/js/next-boot.js","hash":"8e2d589585f5270ee90285d3e65b69923c7629d8","modified":1740402599102},{"_id":"public/js/motion.js","hash":"3864e56a829b698b98ec8d93b8916271ba6fd015","modified":1740402599102},{"_id":"public/js/sidebar.js","hash":"2ee359ae48273b01ba1e0768704524e08702c7eb","modified":1740402599102},{"_id":"public/js/utils.js","hash":"b2c0fd95770e58c25c9f99e1d66fe0e625e3cdab","modified":1740402599102},{"_id":"public/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1740402599102},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1740402599102},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1740402599102},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1740402599102},{"_id":"public/2025/02/23/xpp-debug-configuration/xpp-debug-configuration.png","hash":"f613c9fc9f3dd1eb3a5b54aa158cde9224f0cc9e","modified":1740402599102}],"Category":[{"name":"d365","_id":"cm7j2rscb0007qguga9ii2chz"},{"name":"Retail Commerce","_id":"cm7j2rscg000fqgug95fq6gip"},{"name":"x++","parent":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsch000kqgug6l2fh9u1"},{"name":"X++","_id":"cm7j2rsck000yqgugcmfd0x16"}],"Data":[],"Page":[{"title":"about","date":"2024-12-22T14:10:18.000Z","type":"about","comments":0,"_content":"\nI am a Dynamics 365 F&O developer. I want to be an AI + ERP integrated solution architect.","source":"about/index.md","raw":"---\ntitle: about\ndate: 2024-12-22 22:10:18\ntype: \"about\"\ncomments: false\n---\n\nI am a Dynamics 365 F&O developer. I want to be an AI + ERP integrated solution architect.","updated":"2025-02-24T13:09:49.410Z","path":"about/index.html","layout":"page","_id":"cm7j2rsc50000qgug8ml8gr9q","content":"<p>I am a Dynamics 365 F&amp;O developer. I want to be an AI + ERP integrated solution architect.</p>\n","excerpt":"","more":"<p>I am a Dynamics 365 F&amp;O developer. I want to be an AI + ERP integrated solution architect.</p>\n"},{"title":"categories","date":"2024-12-22T09:12:29.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-12-22 17:12:29\ntype: \"categories\"\n---\n","updated":"2024-12-22T09:12:40.993Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm7j2rsc80002qguga1xk43nm","content":"","excerpt":"","more":""},{"title":"tags","date":"2024-12-22T09:12:48.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-12-22 17:12:48\ntype: \"tags\"\n---\n","updated":"2024-12-22T09:13:04.628Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm7j2rsca0004qgug9p7xgd3v","content":"","excerpt":"","more":""}],"Post":[{"title":"How To Call A Form Using X++","comments":1,"date":"2024-12-23T14:23:46.000Z","description":"This article describes the way to Call A Form Using X++","_content":"\n[How To Call A Form Using X++](https://dynamics365musings.com/call-a-form-using-xpp/)","source":"_drafts/xpp-open-onhandlist.md","raw":"---\ntitle: How To Call A Form Using X++\ncomments: true\ndate: 2024-12-23 22:23:46\ntags:\ncategories:\n - X++\ndescription: This article describes the way to Call A Form Using X++\n---\n\n[How To Call A Form Using X++](https://dynamics365musings.com/call-a-form-using-xpp/)","slug":"xpp-open-onhandlist","published":0,"updated":"2025-01-05T07:15:08.366Z","layout":"post","photos":[],"_id":"cm7j2rsc70001qgug5kzu8wee","content":"<p><a href=\"https://dynamics365musings.com/call-a-form-using-xpp/\">How To Call A Form Using X++</a></p>\n","excerpt":"","more":"<p><a href=\"https://dynamics365musings.com/call-a-form-using-xpp/\">How To Call A Form Using X++</a></p>\n"},{"title":"Export to excel","comments":1,"date":"2024-12-23T14:20:30.000Z","description":"This article describes the way to export to excel","_content":"\n### Example Code\n\n```c#\nusing System.IO;\nusing OfficeOpenXml;\nusing OfficeOpenXml.Style;\nusing OfficeOpenXml.Table;\nusing OfficeOpenXml.Style.ExcelFillStyle;\nusing System.Drawing;\nclass LMSMidStatesPullService extends SysOperationServiceBase\n{\n    public date                     gFromDate;\n    public date                     gToDate;\n    public boolean                  hasheader = false;\n    public EcoResCategoryId         gCategory;\n    public LMSCateGoryTable         gCategoryTable;\n    public EcoResCategory           gEcoCategoryTable;\n    RetailReportSessionIdentifier   gsessionId = guid2Str(newGuid());\n\n    /// <summary>\n    /// LMS_SUN-029403_EXT-00015 Load to Truck Validation\n    /// Lance Shi - 7/17/2024\n    /// Process\n    /// </summary>\n    /// <param name = \"_contract\">LMSCleanUpLoadedLPTableContract</param>\n    public void process(LMSMidStatesPullContract _contract)\n    {\n        gFromDate           = _contract.parmFromDate();\n        gToDate             = _contract.parmToDate();\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin\n\n        gCategory           = _contract.parmCategory();\n        gEcoCategoryTable   = EcoResCategory::find(gCategory);\n\n        select firstonly RecId from gCategoryTable\n            where gCategoryTable.EcoResCategory     == gEcoCategoryTable.RecId\n              && gCategoryTable.SessionId           == gsessionId;\n\n        if(!gCategoryTable.RecId)\n        {\n            gCategoryTable.EcoResCategory   = gEcoCategoryTable.RecId;\n            gCategoryTable.SessionId        = gsessionId;\n            gCategoryTable.insert();\n        }\n\n        ttsbegin;\n        this.getAllCategory(gEcoCategoryTable.RecId);\n        this.createtab(_contract);\n\n        delete_from gCategoryTable\n            where gCategoryTable.SessionId == gsessionId;\n        ttscommit;\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Create tab.\n    /// </summary>\n    /// <param name = \"_contract\">LMSMidStatesPullContract</param>\n    public void createtab(LMSMidStatesPullContract _contract)\n    {\n        QueryRun                        queryRun    = new QueryRun(_contract.getQuery());\n        LMSSalesHistoryView             historyView;\n        container                       itemIdCon   = conNull();\n        System.IO.Stream                stream;\n        ExcelSpreadsheetName            sheet;\n        MemoryStream                    memoryStream = new MemoryStream();\n\n        using (var package = new ExcelPackage(memoryStream))\n        {\n            var currentRow = 1;\n\n            var                             worksheets          = package.get_Workbook().get_Worksheets();\n            OfficeOpenXml.ExcelWorksheet    SupplierWorksheet   = worksheets.Add(\"@LMS:LMSSupplierInformation\");\n            OfficeOpenXml.ExcelWorksheet    SalesDataWorksheet  = worksheets.Add(\"@LMS:LMSSalesData\");\n\n            itemIdCon = this.generateSalesData(SalesDataWorksheet, _contract);\n\n            if(itemIdCon)\n            {\n                this.generateSupplier(itemIdCon, SupplierWorksheet);\n        \n            }\n\n            package.Save();\n            file::SendFileToUser(memoryStream, \"@LMS:LMSMidStatsPullExcel\");\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get query for range.\n    /// </summary>\n    /// <param name = \"_query\">Query</param>\n    /// <returns>Query</returns>\n    public Query  getQueryForRange(Query _query)\n    {\n        Query                   query = _query;\n        QueryBuildDataSource    qbds = _query.dataSourceTable(tableNum(LMSSalesHistorySummaryView)).addDataSource(tableNum(LMSSalesHistoryView));\n\n        qbds.joinMode(JoinMode::ExistsJoin);\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, ProductNumber), fieldNum(LMSSalesHistoryView, ProductNumber));\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Color), fieldNum(LMSSalesHistoryView, Color));\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Size), fieldNum(LMSSalesHistoryView, Size));\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end\n\n        qbds.addRange(fieldNum(LMSSalesHistoryView, SalesHistoryDate)).value(SysQueryRangeUtil::dateRange(gFromDate, gToDate));\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin\n        if(gCategory)\n        {\n            EcoResCategoryNamedHierarchyRole    hierarchyId             = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail).NamedCategoryHierarchyRole;\n            QueryBuildDataSource                qbdsCategoryExpanded    = _query.dataSourceTable(tableNum(LMSSalesHistoryView)).addDataSource(tableNum(EcoResProductCategoryExpanded));\n\n            qbdsCategoryExpanded.joinMode(JoinMode::ExistsJoin);\n            qbdsCategoryExpanded.addLink(fieldNum(LMSSalesHistoryView, ProductNumber), fieldNum(EcoResProductCategoryExpanded, ItemId));\n            qbdsCategoryExpanded.addRange(fieldNum(EcoResProductCategoryExpanded, NamedCategoryHierarchyRole)).value(queryValue(hierarchyId));\n\n            QueryBuildDataSource    qbdsCategoryTable     = _query.dataSourceTable(tableNum(EcoResProductCategoryExpanded)).addDataSource(tableNum(LMSCateGoryTable));\n            qbdsCategoryTable.joinMode(JoinMode::ExistsJoin);\n            qbdsCategoryTable.addLink(fieldNum(EcoResProductCategoryExpanded, RecIdCategory), fieldNum(LMSCateGoryTable, EcoResCategory));\n            qbdsCategoryTable.addRange(fieldNum(LMSCateGoryTable, SessionId)).value(queryValue(gsessionId));\n        }\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end\n        return query;\n\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate sales data.\n    /// </summary>\n    /// <param name = \"_SalesDataWorksheet\">ExcelWorksheet</param>\n    /// <param name = \"_contract\">Contract</param>\n    /// <returns>container</returns>\n    public container generateSalesData(OfficeOpenXml.ExcelWorksheet _SalesDataWorksheet, LMSMidStatesPullContract _contract)\n    {\n        var                             SalesDatacells      = _SalesDataWorksheet.get_Cells();\n        Map                             map                 = new Map(Types::String, Types::Container);\n        int                             row                 = 1;\n        QueryRun                        queryRun            = new QueryRun(this.getQueryForRange(_contract.getQuery()));\n        LMSSalesHistorySummaryView      historyView;\n        LMSSalesHistoryView             historyViewRecord;\n        container                       supplerRow          = conNull();\n        container                       itemIdCon           = conNull();\n\n        OfficeOpenXml.ExcelRange cell = SalesDatacells.get_Item(1, 1);\n        cell.set_Value(\"@LMS:LMSMemberName\");\n\n        cell = SalesDatacells.get_Item(1, 2);\n        cell.set_Value(\"@LMS:LMSReportingVendor\");\n\n        cell = SalesDatacells.get_Item(1, 3);\n        cell.set_Value(\"@LMS:LMSItemNumber\");\n\n        cell = SalesDatacells.get_Item(1, 4);\n        cell.set_Value(\"@LMS:LMSMFGPart\");\n\n        cell = SalesDatacells.get_Item(1, 5);\n        cell.set_Value(\"@LMS:LMSItemDesc\");\n\n        cell = SalesDatacells.get_Item(1, 6);\n        cell.set_Value(\"@LMS:LMSUPC\");\n\n        cell = SalesDatacells.get_Item(1, 7);\n        cell.set_Value(\"@SYS850\");\n\n        cell = SalesDatacells.get_Item(1, 8);\n        cell.set_Value(\"@LMS:LMSClassLine\");\n\n        cell = SalesDatacells.get_Item(1, 9);\n        cell.set_Value(\"@LMS:LMSSubClassFineLine\");\n\n        int currentRow = 9;\n\n        container con = this.generateMonthColumn();\n\n        if(con)\n        {\n            for(int i = 1; i <= conlen(con); i ++)\n            {\n                currentRow ++;\n                cell = SalesDatacells.get_Item(1, currentRow);\n                cell.set_Value(conpeek(con, i));\n            }\n        }\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSTotalMonthSales\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSRepalcementCost\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSCompanyOnHand\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSSystemRetail\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSAverageUnitRetail\");\n\n        currentRow = 2;\n        container alldateCollection = this.getAlldateCollection();\n\n        while(queryRun.next())\n        {\n            historyView                 = queryRun.get(tableNum(LMSSalesHistorySummaryView));\n\n            container   itemIdDim       = this.getItemId(historyView);\n            ItemId      itemId          = conPeek(itemIdDim, 1);\n            InventDimId inventdIm       = conPeek(itemIdDim, 2);\n            str         description     = conPeek(itemIdDim, 3);\n            int         currentColumn   ;\n\n            InventTable inventTable;\n\n            select firstonly PrimaryVendorId from inventTable\n                where inventTable.ItemId == itemId;\n\n            VendTable   vendTable;\n\n            select firstonly Party from vendTable\n                where vendTable.AccountNum == inventTable.PrimaryVendorId;\n\n            if(itemIdCon == conNull())\n            {\n                itemIdCon += itemId;\n            }\n            else\n            {\n                if(!conFind(itemIdCon, itemId))\n                {\n                    itemIdCon += itemId;\n                }\n            }\n\n            cell = SalesDatacells.get_Item(currentRow, 1);\n            cell.set_Value(\"@LMS:LMSLMSupply\");\n\n            cell = SalesDatacells.get_Item(currentRow, 2);\n            cell.set_Value(vendTable.vendorName());\n\n            cell = SalesDatacells.get_Item(currentRow, 3);\n            cell.set_Value(historyView.ProductNumber);\n\n            cell = SalesDatacells.get_Item(currentRow, 4);\n            cell.set_Value(CustVendExternalItem::find(ModuleInventPurchSalesVendCustGroup::Vend, itemId, inventdIm, inventTable.PrimaryVendorId).ExternalItemId);\n\n            cell = SalesDatacells.get_Item(currentRow, 5);\n            cell.set_Value(description);\n\n            cell = SalesDatacells.get_Item(currentRow, 6);\n            cell.set_Value(this.getItemBarcode(itemId, inventdIm));\n\n            container conCate = this.getCategory(itemId);\n\n            cell = SalesDatacells.get_Item(currentRow, 7);\n            cell.set_Value(conPeek(conCate, 1));\n\n            cell = SalesDatacells.get_Item(currentRow, 8);\n            cell.set_Value(conPeek(conCate, 2));\n\n            cell = SalesDatacells.get_Item(currentRow, 9);\n            cell.set_Value(conPeek(conCate, 3));\n\n            for(currentColumn  = 10; currentColumn <= conLen(alldateCollection) + 9; currentColumn++)\n            {\n                container   conLine = conPeek(alldateCollection, currentColumn - 9);\n\n                select sum(Quantity) from historyViewRecord\n                    where historyViewRecord.ProductNumber       == historyView.ProductNumber\n                       && historyViewRecord.SalesHistoryDate    >= conPeek(conLine, 1)\n                       && historyViewRecord.SalesHistoryDate    <= conPeek(conLine, 2);\n\n                cell = SalesDatacells.get_Item(currentRow, currentColumn);\n                cell.set_Value(strFmt(\"%1\", historyViewRecord.Quantity));\n            \n            }\n\n            select sum(Quantity),sum(Amount) from historyViewRecord\n                    where historyViewRecord.ProductNumber       == historyView.ProductNumber\n                       && historyViewRecord.SalesHistoryDate    >= gFromDate\n                       && historyViewRecord.SalesHistoryDate    <= gToDate;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", historyViewRecord.Quantity));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", InventTableModule::find(itemId, ModuleInventPurchSales::Purch).price));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(this.getinventOnhand(itemId, inventdIm));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", InventTableModule::find(itemId, ModuleInventPurchSales::Sales).price));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", historyViewRecord.Amount));\n\n            currentRow ++;\n        }\n\n        return itemIdCon;\n    }\n\n    /// <summary>\n    /// BAB_EXT-0002 – Dynamic Seasonality Coefficients\n    /// Bruce Niu 11/14/2024\n    /// getAllCategory\n    /// </summary>\n    public void getAllCategory(RecId _parentRecId)\n    {\n        EcoResCategory  cate;\n\n        while select RecId from cate\n            where cate.ParentCategory == _parentRecId\n        {\n            select firstonly RecId from gCategoryTable\n                where gCategoryTable.EcoResCategory     == cate.RecId\n                  && gCategoryTable.SessionId           == gsessionId;\n\n            if(!gCategoryTable)\n            {\n                gCategoryTable.EcoResCategory   = cate.RecId;\n                gCategoryTable.SessionId        = gsessionId;\n                gCategoryTable.insert();\n\n                this.getAllCategory(cate.recid);\n            }\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get invent on hand.\n    /// </summary>\n    /// <param name = \"_itemId\">Item Id</param>\n    /// <param name = \"_inventdIm\">Invent Dim</param>\n    /// <returns>the string of inventOnhand</returns>\n    public str getinventOnhand(str _itemId, str _inventdIm)\n    {\n        InventDimParm         dimParm;\n        InventOnhand          onhand;\n        InventDim             inventDimNew;\n\n        inventDimNew = InventDim::find(_inventdIm);\n\n        dimParm.initFromInventDim(inventDimNew);\n\n        onhand      = InventOnhand::newItemDim(_itemId, inventDimNew, dimParm);\n\n        return strFmt(\"%1\", onhand.physicalInvent());\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get category.\n    /// </summary>\n    /// <param name = \"_itemId\">Item Id</param>\n    /// <returns>container</returns>\n    public container  getCategory(str _itemId)\n    {\n        EcoResCategory          c1,c2,c3;\n        EcoResProductCategory   ecoResProductCate   = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Retail);\n\n        c1 = EcoResCategory::find(ecoResProductCate.Category);\n        c2 = EcoResCategory::find(c1.ParentCategory);\n        c3 = EcoResCategory::find(c2.ParentCategory);\n        \n        return [c3.Name, c2.Name, c1.Name];\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get Item Barcode\n    /// </summary>\n    /// <param name = \"_itemid\">Item Id</param>\n    /// <param name = \"_inventDimId\">Invent dim id</param>\n    /// <returns>ItemBarcode</returns>\n    public str getItemBarcode(str _itemid, str _inventDimId)\n    {\n        InventItemBarcode barcode;\n\n        select firstonly itemBarCode from barcode\n            where barcode.barcodeSetupId    == '@LMS:LMSUPC'\n               && barcode.inventDimId       == _inventDimId\n               && barcode.itemId            == _itemid;\n\n        return barcode.itemBarCode;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get all date collection.\n    /// </summary>\n    /// <returns>container</returns>\n    public container getAlldateCollection()\n    {\n        container con = conNull();\n        date        fD, tD;\n        \n        fD = gFromDate;\n        tD = endMth(fd);\n        \n        while(tD <= gToDate)\n        {\n            con += [[fD, td]];\n\n            fD = nextMth(fD);\n            fD = fD - (dayOfMth(fd) - 1);\n            tD = endMth(fd);\n        }\n\n        if(tD > gToDate && fD <= gToDate)\n        {\n            con += [[fD, gToDate]];\n        }\n\n        return con;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate month column.\n    /// </summary>\n    /// <returns>container</returns>\n    public container generateMonthColumn()\n    {\n        container   con = conNull();\n        date        fd  = gFromDate;\n        date        Td  = endMth(gToDate);\n\n        if(gFromDate && gToDate)\n        {\n            while(fd <= Td)\n            {\n                con += strFmt(\"@LMS:LMSSalesUnits\", this.getMthName(mthOfYr(fd)), year(fd) mod 1000);\n\n                fd      = nextMth(fd);\n            }\n        }\n\n        return con;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get month name.\n    /// </summary>\n    /// <param name = \"_number\">number</param>\n    /// <returns>month name string</returns>\n    public str getMthName(int _number)\n    {\n        str mth = '';\n\n        switch(_number)\n        {\n            case 1:\n                mth = '@LMS:LMSJan';\n                break;\n            case 2:\n                mth = '@LMS:LMSFeb';\n                break;\n            case 3:\n                mth = '@LMS:LMSMar';\n                break;\n            case 4:\n                mth = '@LMS:LMSApr';\n                break;\n            case 5:\n                mth = '@LMS:LMSMay';\n                break;\n            case 6:\n                mth = '@LMS:LMSJun';\n                break;\n            case 7:\n                mth = '@LMS:LMSJul';\n                break;\n            case 8:\n                mth = '@LMS:LMSAug';\n                break;\n            case 9:\n                mth = '@LMS:LMSSep';\n                break;\n            case 10:\n                mth = '@LMS:LMSOct';\n                break;\n            case 11:\n                mth = '@LMS:LMSNov';\n                break;\n            case 12:\n                mth = '@LMS:LMSDec';\n                break;\n        \n        }\n\n        return mth;\n    \n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate Supplier\n    /// </summary>\n    /// <param name = \"_con\">container</param>\n    /// <param name = \"_SupplierWorksheet\">ExcelWorksheet</param>\n    public void generateSupplier(container _con,  OfficeOpenXml.ExcelWorksheet    _SupplierWorksheet)\n    {\n        var         Suppliercells       = _SupplierWorksheet.get_Cells();\n        Map         map                 = new Map(Types::String, Types::Container);\n        int         currentColumn       = 1;\n        container   vendorCon           = conNull();\n        InventTable inventtable;\n\n        OfficeOpenXml.ExcelRange cell = Suppliercells.get_Item(1, 1);\n        cell.set_Value(\"@LMS:LMSItemCategory\");\n\n        cell = Suppliercells.get_Item(2, 1);\n        cell.set_Value(\"@LMS:LMSSupplierVendorName\");\n\n        cell = Suppliercells.get_Item(3, 1);\n        cell.set_Value(\"@LMS:LMSPaymentTermsDays\");\n\n        cell = Suppliercells.get_Item(4, 1);\n        cell.set_Value(\"@LMS:LMSFreightTerms\");\n\n        cell = Suppliercells.get_Item(5, 1);\n        cell.set_Value(\"@LMS:LMSFOBOriginPoint\");\n\n        cell = Suppliercells.get_Item(6, 1);\n        cell.set_Value(\"@LMS:LMSDelveryMethod\");\n\n        cell = Suppliercells.get_Item(7, 1);\n        cell.set_Value(\"@LMS:LMSMinimumOrder\");\n\n        cell = Suppliercells.get_Item(8, 1);\n        cell.set_Value(\"@LMS:LMSMinimumOrderAmount\");\n\n        cell = Suppliercells.get_Item(9, 1);\n        cell.set_Value(\"@LMS:LMSMidStates\");\n\n        cell = Suppliercells.get_Item(10, 1);\n        cell.set_Value(\"@LMS:LMSInitialStoreAllowance\");\n\n\n        cell = Suppliercells.get_Item(11, 1);\n        cell.set_Value(\"@LMS:LMSDefetiveAllowance\");\n\n\n        cell = Suppliercells.get_Item(12, 1);\n        cell.set_Value(\"@LMS:LMSCoopMarketingAllowance\");\n\n        cell = Suppliercells.get_Item(13, 1);\n        cell.set_Value(\"@LMS:LMSVolumeRebateAllowance\");\n\n        cell = Suppliercells.get_Item(14, 1);\n        cell.set_Value(\"@LMS:LMSOtherDiscounts\");\n\n        cell = Suppliercells.get_Item(15, 1);\n        cell.set_Value(\"@LMS:LMSReplacementCost\");\n\n        cell = Suppliercells.get_Item(16, 1);\n        cell.set_Value('@LMS:LMSReplacementCostInclude');\n\n        cell = Suppliercells.get_Item(17, 1);\n        cell.set_Value(\"@LMS:LMSComments\");\n\n        for(int i = 1; i<= conLen(_con); i++)\n        {\n            select firstonly PrimaryVendorId from inventtable\n                where inventtable.ItemId    == conPeek(_con, i);\n\n            if(inventtable.PrimaryVendorId && !conFind(vendorCon, inventtable.PrimaryVendorId))\n            {\n                vendorCon += inventtable.PrimaryVendorId;\n            }\n        }\n\n        for(int j = 1; j <= conLen(vendorCon); j++)\n        {\n            currentColumn ++;\n\n            if(currentColumn == 2)\n            {\n                cell = Suppliercells.get_Item(1, currentColumn);\n                cell.set_Value(\"@LMS:LMSCurrentSupplier\");\n            }\n            else\n            {\n                cell = Suppliercells.get_Item(1, currentColumn);\n                cell.set_Value(strFmt(\"@LMS:LMSSupplier\", currentColumn - 1));\n            }\n\n            VendTable   vendTable = VendTable::find(conPeek(vendorCon, j));\n\n            if(vendTable)\n            {\n                cell = Suppliercells.get_Item(2, currentColumn);\n                cell.set_Value(vendTable.name());\n\n                cell = Suppliercells.get_Item(3, currentColumn);\n                cell.set_Value(this.getPaymentTerms(vendTable.CashDisc, vendTable.PaymTermId));\n\n                cell = Suppliercells.get_Item(4, currentColumn);\n                cell.set_Value(this.getFreightTerms(vendTable.DlvTerm));\n\n                cell = Suppliercells.get_Item(5, currentColumn);\n                cell.set_Value(this.getFOBOriginPoint(vendTable.Party));\n                //6\n                cell = Suppliercells.get_Item(7, currentColumn);\n                cell.set_Value(int2Str(VendTable.LMSMinDollarOrder));\n\n                cell = Suppliercells.get_Item(8, currentColumn);\n                cell.set_Value(int2Str(VendTable.LMSMinUnitFreight) + \" \" + \"@SYS314952\");\n\n                cell = Suppliercells.get_Item(9, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSCBA\"));\n\n                //10\n\n                cell = Suppliercells.get_Item(11, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSDefective\"));\n\n                cell = Suppliercells.get_Item(12, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSCoop\"));\n\n                // 13 14 15 16 17 \n            }\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get auto Charge Line\n    /// </summary>\n    /// <param name = \"_account\">Account</param>\n    /// <param name = \"_markupcode\">markup code</param>\n    /// <returns>str</returns>\n    public str getautoChargeLine(str _account, str _markupcode)\n    {\n        MarkupAutoTable autoTable;\n        MarkupAutoLine  autoLine;\n\n        select firstonly Value from autoLine\n            where autoLine.MarkupCode           == _markupcode\n            exists join autoTable\n                where autoTable.ModuleType      == MarkupModuleType::Vend\n                   && autoTable.AccountCode     == TableGroupAll::Table\n                   && autoTable.AccountRelation == _account\n                   && autoTable.ModuleCategory  == HeadingLine::Heading\n                    && autoTable.ItemCode       == TableGroupAll::All\n                   && autoTable.RecId           == autoLine.TableRecId\n                   && autoTable.TableId         == autoLine.TableTableId;\n\n        if(autoLine)\n        {\n            return strFmt(\"%1 %\", autoLine.Value);\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get fob origin point.\n    /// </summary>\n    /// <param name = \"_party\">Int64</param>\n    /// <returns>str</returns>\n    public str getFOBOriginPoint(Int64 _party)\n    {\n        LogisticsPostalAddress  address     = DirParty::primaryPostalAddress(_party);\n        str                     originPoint = \"\";\n        container               con         = conNull();\n\n        con += address.City;\n        con += address.State;\n\n        return con2Str(con);\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get freight terms.\n    /// </summary>\n    /// <param name = \"_dlvTerm\">dlvTerm</param>\n    /// <returns>FreightTerms str</returns>\n    public str getFreightTerms(str _dlvTerm)\n    {\n        container con = ['@LMS:LMSFFAFOBD', '@LMS:LMSFFAFOBO', '@LMS:LMSPPAFOBD', '@LMS:LMSPPAFOBO', '@LMS:LMSPPDFOBD', '@LMS:LMSPPDFOBO'];\n\n        if(conFind(con, _dlvTerm))\n        {\n            return 'Yes';\n        }\n        else\n        {\n            return 'No';\n        }\n    \n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get Payment Terms\n    /// </summary>\n    /// <param name = \"_CashDisc\">CashDisc</param>\n    /// <param name = \"_PaymTermId\">PaymTermId</param>\n    /// <returns>str</returns>\n    public str getPaymentTerms(str _CashDisc, str _PaymTermId)\n    {\n        CashDisc    cd  = CashDisc::find(_CashDisc);\n        container   con = conNull();\n        PaymTerm    pt  = PaymTerm::find(_PaymTermId);\n\n        if(cd.NumOfDays)\n        {\n            con += int2Str(cd.NumOfDays);\n        }\n\n        if(pt.PaymMethod)\n        {\n            con += enum2Str(pt.PaymMethod);\n        }\n\n        if(pt.NumOfDays)\n        {\n            con += int2Str(pt.NumOfDays);\n        }\n\n        if(conLen(con) > 0)\n        {\n            return con2Str(con, \" \");\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get item id.\n    /// </summary>\n    /// <param name = \"_displayProductNumber\">DisplayProductNumber</param>\n    /// <returns>container</returns>\n    public container getItemId(LMSSalesHistorySummaryView _summaryView)\n    {\n        InventTable             inventtable;\n        InventDimCombination    inventDimCombination;\n        EcoResProduct           ecoResProduct;\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin\n        InventDim               inventDimLoc;\n\n        select firstonly ItemId, InventDimId, RetailVariantId, DistinctProductVariant from inventDimCombination\n            where inventDimCombination.ItemId       == _summaryView.ProductNumber\n            exists join inventDimLoc\n                where inventDimLoc.inventDimId      == inventDimCombination.InventDimId\n                    && inventDimLoc.InventColorId   == _summaryView.Color\n                    && inventDimLoc.InventSizeId    == _summaryView.Size;\n        \n        if(inventDimCombination.ItemId)\n        {\n            return [inventDimCombination.ItemId,inventDimCombination.InventDimId, inventDimCombination.productDescription(\"en-us\")];\n        }\n        else\n        {\n            select firstonly ItemId, Product from inventtable\n                exists join ecoResProduct\n                    where ecoResProduct.RecId                   == inventtable.Product\n                       && ecoResProduct.DisplayProductNumber    == _summaryView.ProductNumber;\n\n            return [inventtable.ItemId, InventDim::inventDimIdBlank(), inventtable.productDescription(\"en-us\")];\n        }\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end\n    }\n}\n```","source":"_drafts/xpp-export-to-excel.md","raw":"---\ntitle: Export to excel\ncomments: true\ndate: 2024-12-23 22:20:30\ntags:\ncategories:\n - X++\ndescription: This article describes the way to export to excel\n---\n\n### Example Code\n\n```c#\nusing System.IO;\nusing OfficeOpenXml;\nusing OfficeOpenXml.Style;\nusing OfficeOpenXml.Table;\nusing OfficeOpenXml.Style.ExcelFillStyle;\nusing System.Drawing;\nclass LMSMidStatesPullService extends SysOperationServiceBase\n{\n    public date                     gFromDate;\n    public date                     gToDate;\n    public boolean                  hasheader = false;\n    public EcoResCategoryId         gCategory;\n    public LMSCateGoryTable         gCategoryTable;\n    public EcoResCategory           gEcoCategoryTable;\n    RetailReportSessionIdentifier   gsessionId = guid2Str(newGuid());\n\n    /// <summary>\n    /// LMS_SUN-029403_EXT-00015 Load to Truck Validation\n    /// Lance Shi - 7/17/2024\n    /// Process\n    /// </summary>\n    /// <param name = \"_contract\">LMSCleanUpLoadedLPTableContract</param>\n    public void process(LMSMidStatesPullContract _contract)\n    {\n        gFromDate           = _contract.parmFromDate();\n        gToDate             = _contract.parmToDate();\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin\n\n        gCategory           = _contract.parmCategory();\n        gEcoCategoryTable   = EcoResCategory::find(gCategory);\n\n        select firstonly RecId from gCategoryTable\n            where gCategoryTable.EcoResCategory     == gEcoCategoryTable.RecId\n              && gCategoryTable.SessionId           == gsessionId;\n\n        if(!gCategoryTable.RecId)\n        {\n            gCategoryTable.EcoResCategory   = gEcoCategoryTable.RecId;\n            gCategoryTable.SessionId        = gsessionId;\n            gCategoryTable.insert();\n        }\n\n        ttsbegin;\n        this.getAllCategory(gEcoCategoryTable.RecId);\n        this.createtab(_contract);\n\n        delete_from gCategoryTable\n            where gCategoryTable.SessionId == gsessionId;\n        ttscommit;\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Create tab.\n    /// </summary>\n    /// <param name = \"_contract\">LMSMidStatesPullContract</param>\n    public void createtab(LMSMidStatesPullContract _contract)\n    {\n        QueryRun                        queryRun    = new QueryRun(_contract.getQuery());\n        LMSSalesHistoryView             historyView;\n        container                       itemIdCon   = conNull();\n        System.IO.Stream                stream;\n        ExcelSpreadsheetName            sheet;\n        MemoryStream                    memoryStream = new MemoryStream();\n\n        using (var package = new ExcelPackage(memoryStream))\n        {\n            var currentRow = 1;\n\n            var                             worksheets          = package.get_Workbook().get_Worksheets();\n            OfficeOpenXml.ExcelWorksheet    SupplierWorksheet   = worksheets.Add(\"@LMS:LMSSupplierInformation\");\n            OfficeOpenXml.ExcelWorksheet    SalesDataWorksheet  = worksheets.Add(\"@LMS:LMSSalesData\");\n\n            itemIdCon = this.generateSalesData(SalesDataWorksheet, _contract);\n\n            if(itemIdCon)\n            {\n                this.generateSupplier(itemIdCon, SupplierWorksheet);\n        \n            }\n\n            package.Save();\n            file::SendFileToUser(memoryStream, \"@LMS:LMSMidStatsPullExcel\");\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get query for range.\n    /// </summary>\n    /// <param name = \"_query\">Query</param>\n    /// <returns>Query</returns>\n    public Query  getQueryForRange(Query _query)\n    {\n        Query                   query = _query;\n        QueryBuildDataSource    qbds = _query.dataSourceTable(tableNum(LMSSalesHistorySummaryView)).addDataSource(tableNum(LMSSalesHistoryView));\n\n        qbds.joinMode(JoinMode::ExistsJoin);\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, ProductNumber), fieldNum(LMSSalesHistoryView, ProductNumber));\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Color), fieldNum(LMSSalesHistoryView, Color));\n        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Size), fieldNum(LMSSalesHistoryView, Size));\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end\n\n        qbds.addRange(fieldNum(LMSSalesHistoryView, SalesHistoryDate)).value(SysQueryRangeUtil::dateRange(gFromDate, gToDate));\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin\n        if(gCategory)\n        {\n            EcoResCategoryNamedHierarchyRole    hierarchyId             = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail).NamedCategoryHierarchyRole;\n            QueryBuildDataSource                qbdsCategoryExpanded    = _query.dataSourceTable(tableNum(LMSSalesHistoryView)).addDataSource(tableNum(EcoResProductCategoryExpanded));\n\n            qbdsCategoryExpanded.joinMode(JoinMode::ExistsJoin);\n            qbdsCategoryExpanded.addLink(fieldNum(LMSSalesHistoryView, ProductNumber), fieldNum(EcoResProductCategoryExpanded, ItemId));\n            qbdsCategoryExpanded.addRange(fieldNum(EcoResProductCategoryExpanded, NamedCategoryHierarchyRole)).value(queryValue(hierarchyId));\n\n            QueryBuildDataSource    qbdsCategoryTable     = _query.dataSourceTable(tableNum(EcoResProductCategoryExpanded)).addDataSource(tableNum(LMSCateGoryTable));\n            qbdsCategoryTable.joinMode(JoinMode::ExistsJoin);\n            qbdsCategoryTable.addLink(fieldNum(EcoResProductCategoryExpanded, RecIdCategory), fieldNum(LMSCateGoryTable, EcoResCategory));\n            qbdsCategoryTable.addRange(fieldNum(LMSCateGoryTable, SessionId)).value(queryValue(gsessionId));\n        }\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end\n        return query;\n\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate sales data.\n    /// </summary>\n    /// <param name = \"_SalesDataWorksheet\">ExcelWorksheet</param>\n    /// <param name = \"_contract\">Contract</param>\n    /// <returns>container</returns>\n    public container generateSalesData(OfficeOpenXml.ExcelWorksheet _SalesDataWorksheet, LMSMidStatesPullContract _contract)\n    {\n        var                             SalesDatacells      = _SalesDataWorksheet.get_Cells();\n        Map                             map                 = new Map(Types::String, Types::Container);\n        int                             row                 = 1;\n        QueryRun                        queryRun            = new QueryRun(this.getQueryForRange(_contract.getQuery()));\n        LMSSalesHistorySummaryView      historyView;\n        LMSSalesHistoryView             historyViewRecord;\n        container                       supplerRow          = conNull();\n        container                       itemIdCon           = conNull();\n\n        OfficeOpenXml.ExcelRange cell = SalesDatacells.get_Item(1, 1);\n        cell.set_Value(\"@LMS:LMSMemberName\");\n\n        cell = SalesDatacells.get_Item(1, 2);\n        cell.set_Value(\"@LMS:LMSReportingVendor\");\n\n        cell = SalesDatacells.get_Item(1, 3);\n        cell.set_Value(\"@LMS:LMSItemNumber\");\n\n        cell = SalesDatacells.get_Item(1, 4);\n        cell.set_Value(\"@LMS:LMSMFGPart\");\n\n        cell = SalesDatacells.get_Item(1, 5);\n        cell.set_Value(\"@LMS:LMSItemDesc\");\n\n        cell = SalesDatacells.get_Item(1, 6);\n        cell.set_Value(\"@LMS:LMSUPC\");\n\n        cell = SalesDatacells.get_Item(1, 7);\n        cell.set_Value(\"@SYS850\");\n\n        cell = SalesDatacells.get_Item(1, 8);\n        cell.set_Value(\"@LMS:LMSClassLine\");\n\n        cell = SalesDatacells.get_Item(1, 9);\n        cell.set_Value(\"@LMS:LMSSubClassFineLine\");\n\n        int currentRow = 9;\n\n        container con = this.generateMonthColumn();\n\n        if(con)\n        {\n            for(int i = 1; i <= conlen(con); i ++)\n            {\n                currentRow ++;\n                cell = SalesDatacells.get_Item(1, currentRow);\n                cell.set_Value(conpeek(con, i));\n            }\n        }\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSTotalMonthSales\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSRepalcementCost\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSCompanyOnHand\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSSystemRetail\");\n\n        currentRow ++;\n        cell = SalesDatacells.get_Item(1, currentRow);\n        cell.set_Value(\"@LMS:LMSAverageUnitRetail\");\n\n        currentRow = 2;\n        container alldateCollection = this.getAlldateCollection();\n\n        while(queryRun.next())\n        {\n            historyView                 = queryRun.get(tableNum(LMSSalesHistorySummaryView));\n\n            container   itemIdDim       = this.getItemId(historyView);\n            ItemId      itemId          = conPeek(itemIdDim, 1);\n            InventDimId inventdIm       = conPeek(itemIdDim, 2);\n            str         description     = conPeek(itemIdDim, 3);\n            int         currentColumn   ;\n\n            InventTable inventTable;\n\n            select firstonly PrimaryVendorId from inventTable\n                where inventTable.ItemId == itemId;\n\n            VendTable   vendTable;\n\n            select firstonly Party from vendTable\n                where vendTable.AccountNum == inventTable.PrimaryVendorId;\n\n            if(itemIdCon == conNull())\n            {\n                itemIdCon += itemId;\n            }\n            else\n            {\n                if(!conFind(itemIdCon, itemId))\n                {\n                    itemIdCon += itemId;\n                }\n            }\n\n            cell = SalesDatacells.get_Item(currentRow, 1);\n            cell.set_Value(\"@LMS:LMSLMSupply\");\n\n            cell = SalesDatacells.get_Item(currentRow, 2);\n            cell.set_Value(vendTable.vendorName());\n\n            cell = SalesDatacells.get_Item(currentRow, 3);\n            cell.set_Value(historyView.ProductNumber);\n\n            cell = SalesDatacells.get_Item(currentRow, 4);\n            cell.set_Value(CustVendExternalItem::find(ModuleInventPurchSalesVendCustGroup::Vend, itemId, inventdIm, inventTable.PrimaryVendorId).ExternalItemId);\n\n            cell = SalesDatacells.get_Item(currentRow, 5);\n            cell.set_Value(description);\n\n            cell = SalesDatacells.get_Item(currentRow, 6);\n            cell.set_Value(this.getItemBarcode(itemId, inventdIm));\n\n            container conCate = this.getCategory(itemId);\n\n            cell = SalesDatacells.get_Item(currentRow, 7);\n            cell.set_Value(conPeek(conCate, 1));\n\n            cell = SalesDatacells.get_Item(currentRow, 8);\n            cell.set_Value(conPeek(conCate, 2));\n\n            cell = SalesDatacells.get_Item(currentRow, 9);\n            cell.set_Value(conPeek(conCate, 3));\n\n            for(currentColumn  = 10; currentColumn <= conLen(alldateCollection) + 9; currentColumn++)\n            {\n                container   conLine = conPeek(alldateCollection, currentColumn - 9);\n\n                select sum(Quantity) from historyViewRecord\n                    where historyViewRecord.ProductNumber       == historyView.ProductNumber\n                       && historyViewRecord.SalesHistoryDate    >= conPeek(conLine, 1)\n                       && historyViewRecord.SalesHistoryDate    <= conPeek(conLine, 2);\n\n                cell = SalesDatacells.get_Item(currentRow, currentColumn);\n                cell.set_Value(strFmt(\"%1\", historyViewRecord.Quantity));\n            \n            }\n\n            select sum(Quantity),sum(Amount) from historyViewRecord\n                    where historyViewRecord.ProductNumber       == historyView.ProductNumber\n                       && historyViewRecord.SalesHistoryDate    >= gFromDate\n                       && historyViewRecord.SalesHistoryDate    <= gToDate;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", historyViewRecord.Quantity));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", InventTableModule::find(itemId, ModuleInventPurchSales::Purch).price));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(this.getinventOnhand(itemId, inventdIm));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", InventTableModule::find(itemId, ModuleInventPurchSales::Sales).price));\n\n            currentColumn ++;\n\n            cell = SalesDatacells.get_Item(currentRow, currentColumn);\n            cell.set_Value(strFmt(\"%1\", historyViewRecord.Amount));\n\n            currentRow ++;\n        }\n\n        return itemIdCon;\n    }\n\n    /// <summary>\n    /// BAB_EXT-0002 – Dynamic Seasonality Coefficients\n    /// Bruce Niu 11/14/2024\n    /// getAllCategory\n    /// </summary>\n    public void getAllCategory(RecId _parentRecId)\n    {\n        EcoResCategory  cate;\n\n        while select RecId from cate\n            where cate.ParentCategory == _parentRecId\n        {\n            select firstonly RecId from gCategoryTable\n                where gCategoryTable.EcoResCategory     == cate.RecId\n                  && gCategoryTable.SessionId           == gsessionId;\n\n            if(!gCategoryTable)\n            {\n                gCategoryTable.EcoResCategory   = cate.RecId;\n                gCategoryTable.SessionId        = gsessionId;\n                gCategoryTable.insert();\n\n                this.getAllCategory(cate.recid);\n            }\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get invent on hand.\n    /// </summary>\n    /// <param name = \"_itemId\">Item Id</param>\n    /// <param name = \"_inventdIm\">Invent Dim</param>\n    /// <returns>the string of inventOnhand</returns>\n    public str getinventOnhand(str _itemId, str _inventdIm)\n    {\n        InventDimParm         dimParm;\n        InventOnhand          onhand;\n        InventDim             inventDimNew;\n\n        inventDimNew = InventDim::find(_inventdIm);\n\n        dimParm.initFromInventDim(inventDimNew);\n\n        onhand      = InventOnhand::newItemDim(_itemId, inventDimNew, dimParm);\n\n        return strFmt(\"%1\", onhand.physicalInvent());\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get category.\n    /// </summary>\n    /// <param name = \"_itemId\">Item Id</param>\n    /// <returns>container</returns>\n    public container  getCategory(str _itemId)\n    {\n        EcoResCategory          c1,c2,c3;\n        EcoResProductCategory   ecoResProductCate   = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Retail);\n\n        c1 = EcoResCategory::find(ecoResProductCate.Category);\n        c2 = EcoResCategory::find(c1.ParentCategory);\n        c3 = EcoResCategory::find(c2.ParentCategory);\n        \n        return [c3.Name, c2.Name, c1.Name];\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get Item Barcode\n    /// </summary>\n    /// <param name = \"_itemid\">Item Id</param>\n    /// <param name = \"_inventDimId\">Invent dim id</param>\n    /// <returns>ItemBarcode</returns>\n    public str getItemBarcode(str _itemid, str _inventDimId)\n    {\n        InventItemBarcode barcode;\n\n        select firstonly itemBarCode from barcode\n            where barcode.barcodeSetupId    == '@LMS:LMSUPC'\n               && barcode.inventDimId       == _inventDimId\n               && barcode.itemId            == _itemid;\n\n        return barcode.itemBarCode;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get all date collection.\n    /// </summary>\n    /// <returns>container</returns>\n    public container getAlldateCollection()\n    {\n        container con = conNull();\n        date        fD, tD;\n        \n        fD = gFromDate;\n        tD = endMth(fd);\n        \n        while(tD <= gToDate)\n        {\n            con += [[fD, td]];\n\n            fD = nextMth(fD);\n            fD = fD - (dayOfMth(fd) - 1);\n            tD = endMth(fd);\n        }\n\n        if(tD > gToDate && fD <= gToDate)\n        {\n            con += [[fD, gToDate]];\n        }\n\n        return con;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate month column.\n    /// </summary>\n    /// <returns>container</returns>\n    public container generateMonthColumn()\n    {\n        container   con = conNull();\n        date        fd  = gFromDate;\n        date        Td  = endMth(gToDate);\n\n        if(gFromDate && gToDate)\n        {\n            while(fd <= Td)\n            {\n                con += strFmt(\"@LMS:LMSSalesUnits\", this.getMthName(mthOfYr(fd)), year(fd) mod 1000);\n\n                fd      = nextMth(fd);\n            }\n        }\n\n        return con;\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get month name.\n    /// </summary>\n    /// <param name = \"_number\">number</param>\n    /// <returns>month name string</returns>\n    public str getMthName(int _number)\n    {\n        str mth = '';\n\n        switch(_number)\n        {\n            case 1:\n                mth = '@LMS:LMSJan';\n                break;\n            case 2:\n                mth = '@LMS:LMSFeb';\n                break;\n            case 3:\n                mth = '@LMS:LMSMar';\n                break;\n            case 4:\n                mth = '@LMS:LMSApr';\n                break;\n            case 5:\n                mth = '@LMS:LMSMay';\n                break;\n            case 6:\n                mth = '@LMS:LMSJun';\n                break;\n            case 7:\n                mth = '@LMS:LMSJul';\n                break;\n            case 8:\n                mth = '@LMS:LMSAug';\n                break;\n            case 9:\n                mth = '@LMS:LMSSep';\n                break;\n            case 10:\n                mth = '@LMS:LMSOct';\n                break;\n            case 11:\n                mth = '@LMS:LMSNov';\n                break;\n            case 12:\n                mth = '@LMS:LMSDec';\n                break;\n        \n        }\n\n        return mth;\n    \n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Generate Supplier\n    /// </summary>\n    /// <param name = \"_con\">container</param>\n    /// <param name = \"_SupplierWorksheet\">ExcelWorksheet</param>\n    public void generateSupplier(container _con,  OfficeOpenXml.ExcelWorksheet    _SupplierWorksheet)\n    {\n        var         Suppliercells       = _SupplierWorksheet.get_Cells();\n        Map         map                 = new Map(Types::String, Types::Container);\n        int         currentColumn       = 1;\n        container   vendorCon           = conNull();\n        InventTable inventtable;\n\n        OfficeOpenXml.ExcelRange cell = Suppliercells.get_Item(1, 1);\n        cell.set_Value(\"@LMS:LMSItemCategory\");\n\n        cell = Suppliercells.get_Item(2, 1);\n        cell.set_Value(\"@LMS:LMSSupplierVendorName\");\n\n        cell = Suppliercells.get_Item(3, 1);\n        cell.set_Value(\"@LMS:LMSPaymentTermsDays\");\n\n        cell = Suppliercells.get_Item(4, 1);\n        cell.set_Value(\"@LMS:LMSFreightTerms\");\n\n        cell = Suppliercells.get_Item(5, 1);\n        cell.set_Value(\"@LMS:LMSFOBOriginPoint\");\n\n        cell = Suppliercells.get_Item(6, 1);\n        cell.set_Value(\"@LMS:LMSDelveryMethod\");\n\n        cell = Suppliercells.get_Item(7, 1);\n        cell.set_Value(\"@LMS:LMSMinimumOrder\");\n\n        cell = Suppliercells.get_Item(8, 1);\n        cell.set_Value(\"@LMS:LMSMinimumOrderAmount\");\n\n        cell = Suppliercells.get_Item(9, 1);\n        cell.set_Value(\"@LMS:LMSMidStates\");\n\n        cell = Suppliercells.get_Item(10, 1);\n        cell.set_Value(\"@LMS:LMSInitialStoreAllowance\");\n\n\n        cell = Suppliercells.get_Item(11, 1);\n        cell.set_Value(\"@LMS:LMSDefetiveAllowance\");\n\n\n        cell = Suppliercells.get_Item(12, 1);\n        cell.set_Value(\"@LMS:LMSCoopMarketingAllowance\");\n\n        cell = Suppliercells.get_Item(13, 1);\n        cell.set_Value(\"@LMS:LMSVolumeRebateAllowance\");\n\n        cell = Suppliercells.get_Item(14, 1);\n        cell.set_Value(\"@LMS:LMSOtherDiscounts\");\n\n        cell = Suppliercells.get_Item(15, 1);\n        cell.set_Value(\"@LMS:LMSReplacementCost\");\n\n        cell = Suppliercells.get_Item(16, 1);\n        cell.set_Value('@LMS:LMSReplacementCostInclude');\n\n        cell = Suppliercells.get_Item(17, 1);\n        cell.set_Value(\"@LMS:LMSComments\");\n\n        for(int i = 1; i<= conLen(_con); i++)\n        {\n            select firstonly PrimaryVendorId from inventtable\n                where inventtable.ItemId    == conPeek(_con, i);\n\n            if(inventtable.PrimaryVendorId && !conFind(vendorCon, inventtable.PrimaryVendorId))\n            {\n                vendorCon += inventtable.PrimaryVendorId;\n            }\n        }\n\n        for(int j = 1; j <= conLen(vendorCon); j++)\n        {\n            currentColumn ++;\n\n            if(currentColumn == 2)\n            {\n                cell = Suppliercells.get_Item(1, currentColumn);\n                cell.set_Value(\"@LMS:LMSCurrentSupplier\");\n            }\n            else\n            {\n                cell = Suppliercells.get_Item(1, currentColumn);\n                cell.set_Value(strFmt(\"@LMS:LMSSupplier\", currentColumn - 1));\n            }\n\n            VendTable   vendTable = VendTable::find(conPeek(vendorCon, j));\n\n            if(vendTable)\n            {\n                cell = Suppliercells.get_Item(2, currentColumn);\n                cell.set_Value(vendTable.name());\n\n                cell = Suppliercells.get_Item(3, currentColumn);\n                cell.set_Value(this.getPaymentTerms(vendTable.CashDisc, vendTable.PaymTermId));\n\n                cell = Suppliercells.get_Item(4, currentColumn);\n                cell.set_Value(this.getFreightTerms(vendTable.DlvTerm));\n\n                cell = Suppliercells.get_Item(5, currentColumn);\n                cell.set_Value(this.getFOBOriginPoint(vendTable.Party));\n                //6\n                cell = Suppliercells.get_Item(7, currentColumn);\n                cell.set_Value(int2Str(VendTable.LMSMinDollarOrder));\n\n                cell = Suppliercells.get_Item(8, currentColumn);\n                cell.set_Value(int2Str(VendTable.LMSMinUnitFreight) + \" \" + \"@SYS314952\");\n\n                cell = Suppliercells.get_Item(9, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSCBA\"));\n\n                //10\n\n                cell = Suppliercells.get_Item(11, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSDefective\"));\n\n                cell = Suppliercells.get_Item(12, currentColumn);\n                cell.set_Value(this.getautoChargeLine(vendTable.accountnum, \"@LMS:LMSCoop\"));\n\n                // 13 14 15 16 17 \n            }\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get auto Charge Line\n    /// </summary>\n    /// <param name = \"_account\">Account</param>\n    /// <param name = \"_markupcode\">markup code</param>\n    /// <returns>str</returns>\n    public str getautoChargeLine(str _account, str _markupcode)\n    {\n        MarkupAutoTable autoTable;\n        MarkupAutoLine  autoLine;\n\n        select firstonly Value from autoLine\n            where autoLine.MarkupCode           == _markupcode\n            exists join autoTable\n                where autoTable.ModuleType      == MarkupModuleType::Vend\n                   && autoTable.AccountCode     == TableGroupAll::Table\n                   && autoTable.AccountRelation == _account\n                   && autoTable.ModuleCategory  == HeadingLine::Heading\n                    && autoTable.ItemCode       == TableGroupAll::All\n                   && autoTable.RecId           == autoLine.TableRecId\n                   && autoTable.TableId         == autoLine.TableTableId;\n\n        if(autoLine)\n        {\n            return strFmt(\"%1 %\", autoLine.Value);\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get fob origin point.\n    /// </summary>\n    /// <param name = \"_party\">Int64</param>\n    /// <returns>str</returns>\n    public str getFOBOriginPoint(Int64 _party)\n    {\n        LogisticsPostalAddress  address     = DirParty::primaryPostalAddress(_party);\n        str                     originPoint = \"\";\n        container               con         = conNull();\n\n        con += address.City;\n        con += address.State;\n\n        return con2Str(con);\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get freight terms.\n    /// </summary>\n    /// <param name = \"_dlvTerm\">dlvTerm</param>\n    /// <returns>FreightTerms str</returns>\n    public str getFreightTerms(str _dlvTerm)\n    {\n        container con = ['@LMS:LMSFFAFOBD', '@LMS:LMSFFAFOBO', '@LMS:LMSPPAFOBD', '@LMS:LMSPPAFOBO', '@LMS:LMSPPDFOBD', '@LMS:LMSPPDFOBO'];\n\n        if(conFind(con, _dlvTerm))\n        {\n            return 'Yes';\n        }\n        else\n        {\n            return 'No';\n        }\n    \n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get Payment Terms\n    /// </summary>\n    /// <param name = \"_CashDisc\">CashDisc</param>\n    /// <param name = \"_PaymTermId\">PaymTermId</param>\n    /// <returns>str</returns>\n    public str getPaymentTerms(str _CashDisc, str _PaymTermId)\n    {\n        CashDisc    cd  = CashDisc::find(_CashDisc);\n        container   con = conNull();\n        PaymTerm    pt  = PaymTerm::find(_PaymTermId);\n\n        if(cd.NumOfDays)\n        {\n            con += int2Str(cd.NumOfDays);\n        }\n\n        if(pt.PaymMethod)\n        {\n            con += enum2Str(pt.PaymMethod);\n        }\n\n        if(pt.NumOfDays)\n        {\n            con += int2Str(pt.NumOfDays);\n        }\n\n        if(conLen(con) > 0)\n        {\n            return con2Str(con, \" \");\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n\n    /// <summary>\n    /// LMS_SUN-030708_Mid-StatesPullReport\n    /// Bruce Niu -10/11/2024\n    /// Get item id.\n    /// </summary>\n    /// <param name = \"_displayProductNumber\">DisplayProductNumber</param>\n    /// <returns>container</returns>\n    public container getItemId(LMSSalesHistorySummaryView _summaryView)\n    {\n        InventTable             inventtable;\n        InventDimCombination    inventDimCombination;\n        EcoResProduct           ecoResProduct;\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin\n        InventDim               inventDimLoc;\n\n        select firstonly ItemId, InventDimId, RetailVariantId, DistinctProductVariant from inventDimCombination\n            where inventDimCombination.ItemId       == _summaryView.ProductNumber\n            exists join inventDimLoc\n                where inventDimLoc.inventDimId      == inventDimCombination.InventDimId\n                    && inventDimLoc.InventColorId   == _summaryView.Color\n                    && inventDimLoc.InventSizeId    == _summaryView.Size;\n        \n        if(inventDimCombination.ItemId)\n        {\n            return [inventDimCombination.ItemId,inventDimCombination.InventDimId, inventDimCombination.productDescription(\"en-us\")];\n        }\n        else\n        {\n            select firstonly ItemId, Product from inventtable\n                exists join ecoResProduct\n                    where ecoResProduct.RecId                   == inventtable.Product\n                       && ecoResProduct.DisplayProductNumber    == _summaryView.ProductNumber;\n\n            return [inventtable.ItemId, InventDim::inventDimIdBlank(), inventtable.productDescription(\"en-us\")];\n        }\n\n        // LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end\n    }\n}\n```","slug":"xpp-export-to-excel","published":0,"updated":"2025-01-05T07:15:08.366Z","layout":"post","photos":[],"_id":"cm7j2rsc90003qgug2tsw1l16","content":"<h3 id=\"Example-Code\"><a href=\"#Example-Code\" class=\"headerlink\" title=\"Example Code\"></a>Example Code</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Style;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Table;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Style.ExcelFillStyle;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Drawing;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">LMSMidStatesPullService</span> <span class=\"title\">extends</span> <span class=\"title\">SysOperationServiceBase</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> date                     gFromDate;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> date                     gToDate;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> boolean                  hasheader = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> EcoResCategoryId         gCategory;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> LMSCateGoryTable         gCategoryTable;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> EcoResCategory           gEcoCategoryTable;</span><br><span class=\"line\">    RetailReportSessionIdentifier   gsessionId = guid2Str(newGuid());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-029403_EXT-00015 Load to Truck Validation</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Lance Shi - 7/17/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Process</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>LMSCleanUpLoadedLPTableContract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span>(<span class=\"params\">LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gFromDate           = _contract.parmFromDate();</span><br><span class=\"line\">        gToDate             = _contract.parmToDate();</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin</span></span><br><span class=\"line\"></span><br><span class=\"line\">        gCategory           = _contract.parmCategory();</span><br><span class=\"line\">        gEcoCategoryTable   = EcoResCategory::find(gCategory);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> gCategoryTable</span><br><span class=\"line\">            <span class=\"keyword\">where</span> gCategoryTable.EcoResCategory     == gEcoCategoryTable.RecId</span><br><span class=\"line\">              &amp;&amp; gCategoryTable.SessionId           == gsessionId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!gCategoryTable.RecId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gCategoryTable.EcoResCategory   = gEcoCategoryTable.RecId;</span><br><span class=\"line\">            gCategoryTable.SessionId        = gsessionId;</span><br><span class=\"line\">            gCategoryTable.insert();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ttsbegin;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getAllCategory(gEcoCategoryTable.RecId);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createtab(_contract);</span><br><span class=\"line\"></span><br><span class=\"line\">        delete_from gCategoryTable</span><br><span class=\"line\">            <span class=\"keyword\">where</span> gCategoryTable.SessionId == gsessionId;</span><br><span class=\"line\">        ttscommit;</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Create tab.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>LMSMidStatesPullContract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createtab</span>(<span class=\"params\">LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        QueryRun                        queryRun    = <span class=\"keyword\">new</span> QueryRun(_contract.getQuery());</span><br><span class=\"line\">        LMSSalesHistoryView             historyView;</span><br><span class=\"line\">        container                       itemIdCon   = conNull();</span><br><span class=\"line\">        System.IO.Stream                stream;</span><br><span class=\"line\">        ExcelSpreadsheetName            sheet;</span><br><span class=\"line\">        MemoryStream                    memoryStream = <span class=\"keyword\">new</span> MemoryStream();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> package = <span class=\"keyword\">new</span> ExcelPackage(memoryStream))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> currentRow = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span>                             worksheets          = package.get_Workbook().get_Worksheets();</span><br><span class=\"line\">            OfficeOpenXml.ExcelWorksheet    SupplierWorksheet   = worksheets.Add(<span class=\"string\">&quot;@LMS:LMSSupplierInformation&quot;</span>);</span><br><span class=\"line\">            OfficeOpenXml.ExcelWorksheet    SalesDataWorksheet  = worksheets.Add(<span class=\"string\">&quot;@LMS:LMSSalesData&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            itemIdCon = <span class=\"keyword\">this</span>.generateSalesData(SalesDataWorksheet, _contract);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(itemIdCon)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.generateSupplier(itemIdCon, SupplierWorksheet);</span><br><span class=\"line\">        </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            package.Save();</span><br><span class=\"line\">            <span class=\"keyword\">file</span>::SendFileToUser(memoryStream, <span class=\"string\">&quot;@LMS:LMSMidStatsPullExcel&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get query for range.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_query&quot;&gt;</span>Query<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>Query<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Query  <span class=\"title\">getQueryForRange</span>(<span class=\"params\">Query _query</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Query                   query = _query;</span><br><span class=\"line\">        QueryBuildDataSource    qbds = _query.dataSourceTable(tableNum(LMSSalesHistorySummaryView)).addDataSource(tableNum(LMSSalesHistoryView));</span><br><span class=\"line\"></span><br><span class=\"line\">        qbds.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, ProductNumber), fieldNum(LMSSalesHistoryView, ProductNumber));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin</span></span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Color), fieldNum(LMSSalesHistoryView, Color));</span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Size), fieldNum(LMSSalesHistoryView, Size));</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        qbds.addRange(fieldNum(LMSSalesHistoryView, SalesHistoryDate)).<span class=\"keyword\">value</span>(SysQueryRangeUtil::dateRange(gFromDate, gToDate));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(gCategory)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            EcoResCategoryNamedHierarchyRole    hierarchyId             = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail).NamedCategoryHierarchyRole;</span><br><span class=\"line\">            QueryBuildDataSource                qbdsCategoryExpanded    = _query.dataSourceTable(tableNum(LMSSalesHistoryView)).addDataSource(tableNum(EcoResProductCategoryExpanded));</span><br><span class=\"line\"></span><br><span class=\"line\">            qbdsCategoryExpanded.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">            qbdsCategoryExpanded.addLink(fieldNum(LMSSalesHistoryView, ProductNumber), fieldNum(EcoResProductCategoryExpanded, ItemId));</span><br><span class=\"line\">            qbdsCategoryExpanded.addRange(fieldNum(EcoResProductCategoryExpanded, NamedCategoryHierarchyRole)).<span class=\"keyword\">value</span>(queryValue(hierarchyId));</span><br><span class=\"line\"></span><br><span class=\"line\">            QueryBuildDataSource    qbdsCategoryTable     = _query.dataSourceTable(tableNum(EcoResProductCategoryExpanded)).addDataSource(tableNum(LMSCateGoryTable));</span><br><span class=\"line\">            qbdsCategoryTable.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">            qbdsCategoryTable.addLink(fieldNum(EcoResProductCategoryExpanded, RecIdCategory), fieldNum(LMSCateGoryTable, EcoResCategory));</span><br><span class=\"line\">            qbdsCategoryTable.addRange(fieldNum(LMSCateGoryTable, SessionId)).<span class=\"keyword\">value</span>(queryValue(gsessionId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> query;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate sales data.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_SalesDataWorksheet&quot;&gt;</span>ExcelWorksheet<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>Contract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">generateSalesData</span>(<span class=\"params\">OfficeOpenXml.ExcelWorksheet _SalesDataWorksheet, LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span>                             SalesDatacells      = _SalesDataWorksheet.get_Cells();</span><br><span class=\"line\">        Map                             map                 = <span class=\"keyword\">new</span> Map(Types::String, Types::Container);</span><br><span class=\"line\">        <span class=\"built_in\">int</span>                             row                 = <span class=\"number\">1</span>;</span><br><span class=\"line\">        QueryRun                        queryRun            = <span class=\"keyword\">new</span> QueryRun(<span class=\"keyword\">this</span>.getQueryForRange(_contract.getQuery()));</span><br><span class=\"line\">        LMSSalesHistorySummaryView      historyView;</span><br><span class=\"line\">        LMSSalesHistoryView             historyViewRecord;</span><br><span class=\"line\">        container                       supplerRow          = conNull();</span><br><span class=\"line\">        container                       itemIdCon           = conNull();</span><br><span class=\"line\"></span><br><span class=\"line\">        OfficeOpenXml.ExcelRange cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMemberName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSReportingVendor&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemNumber&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMFGPart&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemDesc&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSUPC&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@SYS850&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSClassLine&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSubClassFineLine&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">int</span> currentRow = <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        container con = <span class=\"keyword\">this</span>.generateMonthColumn();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(con)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= conlen(con); i ++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                currentRow ++;</span><br><span class=\"line\">                cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">                cell.set_Value(conpeek(con, i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSTotalMonthSales&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSRepalcementCost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCompanyOnHand&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSystemRetail&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSAverageUnitRetail&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow = <span class=\"number\">2</span>;</span><br><span class=\"line\">        container alldateCollection = <span class=\"keyword\">this</span>.getAlldateCollection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(queryRun.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            historyView                 = queryRun.<span class=\"keyword\">get</span>(tableNum(LMSSalesHistorySummaryView));</span><br><span class=\"line\"></span><br><span class=\"line\">            container   itemIdDim       = <span class=\"keyword\">this</span>.getItemId(historyView);</span><br><span class=\"line\">            ItemId      itemId          = conPeek(itemIdDim, <span class=\"number\">1</span>);</span><br><span class=\"line\">            InventDimId inventdIm       = conPeek(itemIdDim, <span class=\"number\">2</span>);</span><br><span class=\"line\">            str         description     = conPeek(itemIdDim, <span class=\"number\">3</span>);</span><br><span class=\"line\">            <span class=\"built_in\">int</span>         currentColumn   ;</span><br><span class=\"line\"></span><br><span class=\"line\">            InventTable inventTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly PrimaryVendorId <span class=\"keyword\">from</span> inventTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventTable.ItemId == itemId;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendTable   vendTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly Party <span class=\"keyword\">from</span> vendTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendTable.AccountNum == inventTable.PrimaryVendorId;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(itemIdCon == conNull())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                itemIdCon += itemId;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!conFind(itemIdCon, itemId))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    itemIdCon += itemId;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">1</span>);</span><br><span class=\"line\">            cell.set_Value(<span class=\"string\">&quot;@LMS:LMSLMSupply&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">2</span>);</span><br><span class=\"line\">            cell.set_Value(vendTable.vendorName());</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">3</span>);</span><br><span class=\"line\">            cell.set_Value(historyView.ProductNumber);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">4</span>);</span><br><span class=\"line\">            cell.set_Value(CustVendExternalItem::find(ModuleInventPurchSalesVendCustGroup::Vend, itemId, inventdIm, inventTable.PrimaryVendorId).ExternalItemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">5</span>);</span><br><span class=\"line\">            cell.set_Value(description);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">6</span>);</span><br><span class=\"line\">            cell.set_Value(<span class=\"keyword\">this</span>.getItemBarcode(itemId, inventdIm));</span><br><span class=\"line\"></span><br><span class=\"line\">            container conCate = <span class=\"keyword\">this</span>.getCategory(itemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">7</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">8</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">9</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(currentColumn  = <span class=\"number\">10</span>; currentColumn &lt;= conLen(alldateCollection) + <span class=\"number\">9</span>; currentColumn++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                container   conLine = conPeek(alldateCollection, currentColumn - <span class=\"number\">9</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">select</span> <span class=\"title\">sum</span>(<span class=\"params\">Quantity</span>) <span class=\"keyword\">from</span> historyViewRecord</span></span><br><span class=\"line\"><span class=\"function\">                    <span class=\"keyword\">where</span> historyViewRecord.ProductNumber</span>       == historyView.ProductNumber</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &gt;= conPeek(conLine, <span class=\"number\">1</span>)</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &lt;= conPeek(conLine, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">                cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Quantity));</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">select</span> <span class=\"title\">sum</span>(<span class=\"params\">Quantity</span>),<span class=\"title\">sum</span>(<span class=\"params\">Amount</span>) <span class=\"keyword\">from</span> historyViewRecord</span></span><br><span class=\"line\"><span class=\"function\">                    <span class=\"keyword\">where</span> historyViewRecord.ProductNumber</span>       == historyView.ProductNumber</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &gt;= gFromDate</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &lt;= gToDate;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Quantity));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, InventTableModule::find(itemId, ModuleInventPurchSales::Purch).price));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(<span class=\"keyword\">this</span>.getinventOnhand(itemId, inventdIm));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, InventTableModule::find(itemId, ModuleInventPurchSales::Sales).price));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Amount));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentRow ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> itemIdCon;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> BAB_EXT-0002 – Dynamic Seasonality Coefficients</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu 11/14/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> getAllCategory</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getAllCategory</span>(<span class=\"params\">RecId _parentRecId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        EcoResCategory  cate;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> RecId <span class=\"keyword\">from</span> cate</span><br><span class=\"line\">            <span class=\"keyword\">where</span> cate.ParentCategory == _parentRecId</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> gCategoryTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> gCategoryTable.EcoResCategory     == cate.RecId</span><br><span class=\"line\">                  &amp;&amp; gCategoryTable.SessionId           == gsessionId;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!gCategoryTable)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gCategoryTable.EcoResCategory   = cate.RecId;</span><br><span class=\"line\">                gCategoryTable.SessionId        = gsessionId;</span><br><span class=\"line\">                gCategoryTable.insert();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.getAllCategory(cate.recid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get invent on hand.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemId&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_inventdIm&quot;&gt;</span>Invent Dim<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>the string of inventOnhand<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getinventOnhand</span>(<span class=\"params\">str _itemId, str _inventdIm</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventDimParm         dimParm;</span><br><span class=\"line\">        InventOnhand          onhand;</span><br><span class=\"line\">        InventDim             inventDimNew;</span><br><span class=\"line\"></span><br><span class=\"line\">        inventDimNew = InventDim::find(_inventdIm);</span><br><span class=\"line\"></span><br><span class=\"line\">        dimParm.initFromInventDim(inventDimNew);</span><br><span class=\"line\"></span><br><span class=\"line\">        onhand      = InventOnhand::newItemDim(_itemId, inventDimNew, dimParm);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> strFmt(<span class=\"string\">&quot;%1&quot;</span>, onhand.physicalInvent());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get category.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemId&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container  <span class=\"title\">getCategory</span>(<span class=\"params\">str _itemId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        EcoResCategory          c1,c2,c3;</span><br><span class=\"line\">        EcoResProductCategory   ecoResProductCate   = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Retail);</span><br><span class=\"line\"></span><br><span class=\"line\">        c1 = EcoResCategory::find(ecoResProductCate.Category);</span><br><span class=\"line\">        c2 = EcoResCategory::find(c1.ParentCategory);</span><br><span class=\"line\">        c3 = EcoResCategory::find(c2.ParentCategory);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> [c3.Name, c2.Name, c1.Name];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get Item Barcode</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemid&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_inventDimId&quot;&gt;</span>Invent dim id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>ItemBarcode<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getItemBarcode</span>(<span class=\"params\">str _itemid, str _inventDimId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventItemBarcode barcode;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly itemBarCode <span class=\"keyword\">from</span> barcode</span><br><span class=\"line\">            <span class=\"keyword\">where</span> barcode.barcodeSetupId    == <span class=\"string\">&#x27;@LMS:LMSUPC&#x27;</span></span><br><span class=\"line\">               &amp;&amp; barcode.inventDimId       == _inventDimId</span><br><span class=\"line\">               &amp;&amp; barcode.itemId            == _itemid;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> barcode.itemBarCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get all date collection.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">getAlldateCollection</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container con = conNull();</span><br><span class=\"line\">        date        fD, tD;</span><br><span class=\"line\">        </span><br><span class=\"line\">        fD = gFromDate;</span><br><span class=\"line\">        tD = endMth(fd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(tD &lt;= gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += [[fD, td]];</span><br><span class=\"line\"></span><br><span class=\"line\">            fD = nextMth(fD);</span><br><span class=\"line\">            fD = fD - (dayOfMth(fd) - <span class=\"number\">1</span>);</span><br><span class=\"line\">            tD = endMth(fd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tD &gt; gToDate &amp;&amp; fD &lt;= gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += [[fD, gToDate]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate month column.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">generateMonthColumn</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container   con = conNull();</span><br><span class=\"line\">        date        fd  = gFromDate;</span><br><span class=\"line\">        date        Td  = endMth(gToDate);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(gFromDate &amp;&amp; gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(fd &lt;= Td)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                con += strFmt(<span class=\"string\">&quot;@LMS:LMSSalesUnits&quot;</span>, <span class=\"keyword\">this</span>.getMthName(mthOfYr(fd)), year(fd) mod <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                fd      = nextMth(fd);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get month name.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_number&quot;&gt;</span>number<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>month name string<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getMthName</span>(<span class=\"params\"><span class=\"built_in\">int</span> _number</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str mth = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(_number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJan&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSFeb&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSMar&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSApr&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSMay&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJun&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJul&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSAug&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSSep&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">10</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSOct&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">11</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSNov&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">12</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSDec&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mth;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate Supplier</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_con&quot;&gt;</span>container<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_SupplierWorksheet&quot;&gt;</span>ExcelWorksheet<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generateSupplier</span>(<span class=\"params\">container _con,  OfficeOpenXml.ExcelWorksheet    _SupplierWorksheet</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span>         Suppliercells       = _SupplierWorksheet.get_Cells();</span><br><span class=\"line\">        Map         map                 = <span class=\"keyword\">new</span> Map(Types::String, Types::Container);</span><br><span class=\"line\">        <span class=\"built_in\">int</span>         currentColumn       = <span class=\"number\">1</span>;</span><br><span class=\"line\">        container   vendorCon           = conNull();</span><br><span class=\"line\">        InventTable inventtable;</span><br><span class=\"line\"></span><br><span class=\"line\">        OfficeOpenXml.ExcelRange cell = Suppliercells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemCategory&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSupplierVendorName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSPaymentTermsDays&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">4</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSFreightTerms&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">5</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSFOBOriginPoint&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">6</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSDelveryMethod&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">7</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMinimumOrder&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">8</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMinimumOrderAmount&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">9</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMidStates&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">10</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSInitialStoreAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">11</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSDefetiveAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">12</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCoopMarketingAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">13</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSVolumeRebateAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">14</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSOtherDiscounts&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">15</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSReplacementCost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">16</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&#x27;@LMS:LMSReplacementCostInclude&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">17</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSComments&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i&lt;= conLen(_con); i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly PrimaryVendorId <span class=\"keyword\">from</span> inventtable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventtable.ItemId    == conPeek(_con, i);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(inventtable.PrimaryVendorId &amp;&amp; !conFind(vendorCon, inventtable.PrimaryVendorId))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                vendorCon += inventtable.PrimaryVendorId;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> j = <span class=\"number\">1</span>; j &lt;= conLen(vendorCon); j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(currentColumn == <span class=\"number\">2</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">1</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCurrentSupplier&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">1</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(strFmt(<span class=\"string\">&quot;@LMS:LMSSupplier&quot;</span>, currentColumn - <span class=\"number\">1</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendTable   vendTable = VendTable::find(conPeek(vendorCon, j));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(vendTable)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">2</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(vendTable.name());</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">3</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getPaymentTerms(vendTable.CashDisc, vendTable.PaymTermId));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">4</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getFreightTerms(vendTable.DlvTerm));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">5</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getFOBOriginPoint(vendTable.Party));</span><br><span class=\"line\">                <span class=\"comment\">//6</span></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">7</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(int2Str(VendTable.LMSMinDollarOrder));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">8</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(int2Str(VendTable.LMSMinUnitFreight) + <span class=\"string\">&quot; &quot;</span> + <span class=\"string\">&quot;@SYS314952&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">9</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSCBA&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">11</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSDefective&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">12</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSCoop&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 13 14 15 16 17 </span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get auto Charge Line</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_account&quot;&gt;</span>Account<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_markupcode&quot;&gt;</span>markup code<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getautoChargeLine</span>(<span class=\"params\">str _account, str _markupcode</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MarkupAutoTable autoTable;</span><br><span class=\"line\">        MarkupAutoLine  autoLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly Value <span class=\"keyword\">from</span> autoLine</span><br><span class=\"line\">            <span class=\"keyword\">where</span> autoLine.MarkupCode           == _markupcode</span><br><span class=\"line\">            exists <span class=\"keyword\">join</span> autoTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> autoTable.ModuleType      == MarkupModuleType::Vend</span><br><span class=\"line\">                   &amp;&amp; autoTable.AccountCode     == TableGroupAll::Table</span><br><span class=\"line\">                   &amp;&amp; autoTable.AccountRelation == _account</span><br><span class=\"line\">                   &amp;&amp; autoTable.ModuleCategory  == HeadingLine::Heading</span><br><span class=\"line\">                    &amp;&amp; autoTable.ItemCode       == TableGroupAll::All</span><br><span class=\"line\">                   &amp;&amp; autoTable.RecId           == autoLine.TableRecId</span><br><span class=\"line\">                   &amp;&amp; autoTable.TableId         == autoLine.TableTableId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(autoLine)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> strFmt(<span class=\"string\">&quot;%1 %&quot;</span>, autoLine.Value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get fob origin point.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_party&quot;&gt;</span>Int64<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getFOBOriginPoint</span>(<span class=\"params\">Int64 _party</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LogisticsPostalAddress  address     = DirParty::primaryPostalAddress(_party);</span><br><span class=\"line\">        str                     originPoint = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        container               con         = conNull();</span><br><span class=\"line\"></span><br><span class=\"line\">        con += address.City;</span><br><span class=\"line\">        con += address.State;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con2Str(con);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get freight terms.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_dlvTerm&quot;&gt;</span>dlvTerm<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>FreightTerms str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getFreightTerms</span>(<span class=\"params\">str _dlvTerm</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container con = [<span class=\"string\">&#x27;@LMS:LMSFFAFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSFFAFOBO&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPAFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPAFOBO&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPDFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPDFOBO&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(conFind(con, _dlvTerm))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Yes&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;No&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get Payment Terms</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_CashDisc&quot;&gt;</span>CashDisc<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_PaymTermId&quot;&gt;</span>PaymTermId<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getPaymentTerms</span>(<span class=\"params\">str _CashDisc, str _PaymTermId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CashDisc    cd  = CashDisc::find(_CashDisc);</span><br><span class=\"line\">        container   con = conNull();</span><br><span class=\"line\">        PaymTerm    pt  = PaymTerm::find(_PaymTermId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cd.NumOfDays)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += int2Str(cd.NumOfDays);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pt.PaymMethod)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += enum2Str(pt.PaymMethod);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pt.NumOfDays)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += int2Str(pt.NumOfDays);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(conLen(con) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> con2Str(con, <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get item id.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_displayProductNumber&quot;&gt;</span>DisplayProductNumber<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">getItemId</span>(<span class=\"params\">LMSSalesHistorySummaryView _summaryView</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventTable             inventtable;</span><br><span class=\"line\">        InventDimCombination    inventDimCombination;</span><br><span class=\"line\">        EcoResProduct           ecoResProduct;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin</span></span><br><span class=\"line\">        InventDim               inventDimLoc;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly ItemId, InventDimId, RetailVariantId, DistinctProductVariant <span class=\"keyword\">from</span> inventDimCombination</span><br><span class=\"line\">            <span class=\"keyword\">where</span> inventDimCombination.ItemId       == _summaryView.ProductNumber</span><br><span class=\"line\">            exists <span class=\"keyword\">join</span> inventDimLoc</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventDimLoc.inventDimId      == inventDimCombination.InventDimId</span><br><span class=\"line\">                    &amp;&amp; inventDimLoc.InventColorId   == _summaryView.Color</span><br><span class=\"line\">                    &amp;&amp; inventDimLoc.InventSizeId    == _summaryView.Size;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(inventDimCombination.ItemId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [inventDimCombination.ItemId,inventDimCombination.InventDimId, inventDimCombination.productDescription(<span class=\"string\">&quot;en-us&quot;</span>)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly ItemId, Product <span class=\"keyword\">from</span> inventtable</span><br><span class=\"line\">                exists <span class=\"keyword\">join</span> ecoResProduct</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> ecoResProduct.RecId                   == inventtable.Product</span><br><span class=\"line\">                       &amp;&amp; ecoResProduct.DisplayProductNumber    == _summaryView.ProductNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> [inventtable.ItemId, InventDim::inventDimIdBlank(), inventtable.productDescription(<span class=\"string\">&quot;en-us&quot;</span>)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"Example-Code\"><a href=\"#Example-Code\" class=\"headerlink\" title=\"Example Code\"></a>Example Code</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.IO;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Style;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Table;</span><br><span class=\"line\"><span class=\"keyword\">using</span> OfficeOpenXml.Style.ExcelFillStyle;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Drawing;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">LMSMidStatesPullService</span> <span class=\"title\">extends</span> <span class=\"title\">SysOperationServiceBase</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> date                     gFromDate;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> date                     gToDate;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> boolean                  hasheader = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> EcoResCategoryId         gCategory;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> LMSCateGoryTable         gCategoryTable;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> EcoResCategory           gEcoCategoryTable;</span><br><span class=\"line\">    RetailReportSessionIdentifier   gsessionId = guid2Str(newGuid());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-029403_EXT-00015 Load to Truck Validation</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Lance Shi - 7/17/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Process</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>LMSCleanUpLoadedLPTableContract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">process</span>(<span class=\"params\">LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gFromDate           = _contract.parmFromDate();</span><br><span class=\"line\">        gToDate             = _contract.parmToDate();</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin</span></span><br><span class=\"line\"></span><br><span class=\"line\">        gCategory           = _contract.parmCategory();</span><br><span class=\"line\">        gEcoCategoryTable   = EcoResCategory::find(gCategory);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> gCategoryTable</span><br><span class=\"line\">            <span class=\"keyword\">where</span> gCategoryTable.EcoResCategory     == gEcoCategoryTable.RecId</span><br><span class=\"line\">              &amp;&amp; gCategoryTable.SessionId           == gsessionId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!gCategoryTable.RecId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gCategoryTable.EcoResCategory   = gEcoCategoryTable.RecId;</span><br><span class=\"line\">            gCategoryTable.SessionId        = gsessionId;</span><br><span class=\"line\">            gCategoryTable.insert();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        ttsbegin;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.getAllCategory(gEcoCategoryTable.RecId);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createtab(_contract);</span><br><span class=\"line\"></span><br><span class=\"line\">        delete_from gCategoryTable</span><br><span class=\"line\">            <span class=\"keyword\">where</span> gCategoryTable.SessionId == gsessionId;</span><br><span class=\"line\">        ttscommit;</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Create tab.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>LMSMidStatesPullContract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createtab</span>(<span class=\"params\">LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        QueryRun                        queryRun    = <span class=\"keyword\">new</span> QueryRun(_contract.getQuery());</span><br><span class=\"line\">        LMSSalesHistoryView             historyView;</span><br><span class=\"line\">        container                       itemIdCon   = conNull();</span><br><span class=\"line\">        System.IO.Stream                stream;</span><br><span class=\"line\">        ExcelSpreadsheetName            sheet;</span><br><span class=\"line\">        MemoryStream                    memoryStream = <span class=\"keyword\">new</span> MemoryStream();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">using</span> (<span class=\"keyword\">var</span> package = <span class=\"keyword\">new</span> ExcelPackage(memoryStream))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> currentRow = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span>                             worksheets          = package.get_Workbook().get_Worksheets();</span><br><span class=\"line\">            OfficeOpenXml.ExcelWorksheet    SupplierWorksheet   = worksheets.Add(<span class=\"string\">&quot;@LMS:LMSSupplierInformation&quot;</span>);</span><br><span class=\"line\">            OfficeOpenXml.ExcelWorksheet    SalesDataWorksheet  = worksheets.Add(<span class=\"string\">&quot;@LMS:LMSSalesData&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            itemIdCon = <span class=\"keyword\">this</span>.generateSalesData(SalesDataWorksheet, _contract);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(itemIdCon)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.generateSupplier(itemIdCon, SupplierWorksheet);</span><br><span class=\"line\">        </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            package.Save();</span><br><span class=\"line\">            <span class=\"keyword\">file</span>::SendFileToUser(memoryStream, <span class=\"string\">&quot;@LMS:LMSMidStatsPullExcel&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get query for range.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_query&quot;&gt;</span>Query<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>Query<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Query  <span class=\"title\">getQueryForRange</span>(<span class=\"params\">Query _query</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Query                   query = _query;</span><br><span class=\"line\">        QueryBuildDataSource    qbds = _query.dataSourceTable(tableNum(LMSSalesHistorySummaryView)).addDataSource(tableNum(LMSSalesHistoryView));</span><br><span class=\"line\"></span><br><span class=\"line\">        qbds.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, ProductNumber), fieldNum(LMSSalesHistoryView, ProductNumber));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin</span></span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Color), fieldNum(LMSSalesHistoryView, Color));</span><br><span class=\"line\">        qbds.addLink(fieldNum(LMSSalesHistorySummaryView, Size), fieldNum(LMSSalesHistoryView, Size));</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        qbds.addRange(fieldNum(LMSSalesHistoryView, SalesHistoryDate)).<span class=\"keyword\">value</span>(SysQueryRangeUtil::dateRange(gFromDate, gToDate));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 begin</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(gCategory)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            EcoResCategoryNamedHierarchyRole    hierarchyId             = EcoResCategoryHierarchyRole::getHierarchiesByRole(EcoResCategoryNamedHierarchyRole::Retail).NamedCategoryHierarchyRole;</span><br><span class=\"line\">            QueryBuildDataSource                qbdsCategoryExpanded    = _query.dataSourceTable(tableNum(LMSSalesHistoryView)).addDataSource(tableNum(EcoResProductCategoryExpanded));</span><br><span class=\"line\"></span><br><span class=\"line\">            qbdsCategoryExpanded.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">            qbdsCategoryExpanded.addLink(fieldNum(LMSSalesHistoryView, ProductNumber), fieldNum(EcoResProductCategoryExpanded, ItemId));</span><br><span class=\"line\">            qbdsCategoryExpanded.addRange(fieldNum(EcoResProductCategoryExpanded, NamedCategoryHierarchyRole)).<span class=\"keyword\">value</span>(queryValue(hierarchyId));</span><br><span class=\"line\"></span><br><span class=\"line\">            QueryBuildDataSource    qbdsCategoryTable     = _query.dataSourceTable(tableNum(EcoResProductCategoryExpanded)).addDataSource(tableNum(LMSCateGoryTable));</span><br><span class=\"line\">            qbdsCategoryTable.joinMode(JoinMode::ExistsJoin);</span><br><span class=\"line\">            qbdsCategoryTable.addLink(fieldNum(EcoResProductCategoryExpanded, RecIdCategory), fieldNum(LMSCateGoryTable, EcoResCategory));</span><br><span class=\"line\">            qbdsCategoryTable.addRange(fieldNum(LMSCateGoryTable, SessionId)).<span class=\"keyword\">value</span>(queryValue(gsessionId));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/21/2024 end</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> query;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate sales data.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_SalesDataWorksheet&quot;&gt;</span>ExcelWorksheet<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_contract&quot;&gt;</span>Contract<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">generateSalesData</span>(<span class=\"params\">OfficeOpenXml.ExcelWorksheet _SalesDataWorksheet, LMSMidStatesPullContract _contract</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span>                             SalesDatacells      = _SalesDataWorksheet.get_Cells();</span><br><span class=\"line\">        Map                             map                 = <span class=\"keyword\">new</span> Map(Types::String, Types::Container);</span><br><span class=\"line\">        <span class=\"built_in\">int</span>                             row                 = <span class=\"number\">1</span>;</span><br><span class=\"line\">        QueryRun                        queryRun            = <span class=\"keyword\">new</span> QueryRun(<span class=\"keyword\">this</span>.getQueryForRange(_contract.getQuery()));</span><br><span class=\"line\">        LMSSalesHistorySummaryView      historyView;</span><br><span class=\"line\">        LMSSalesHistoryView             historyViewRecord;</span><br><span class=\"line\">        container                       supplerRow          = conNull();</span><br><span class=\"line\">        container                       itemIdCon           = conNull();</span><br><span class=\"line\"></span><br><span class=\"line\">        OfficeOpenXml.ExcelRange cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMemberName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSReportingVendor&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemNumber&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMFGPart&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">5</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemDesc&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSUPC&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@SYS850&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSClassLine&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">9</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSubClassFineLine&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">int</span> currentRow = <span class=\"number\">9</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        container con = <span class=\"keyword\">this</span>.generateMonthColumn();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(con)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= conlen(con); i ++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                currentRow ++;</span><br><span class=\"line\">                cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">                cell.set_Value(conpeek(con, i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSTotalMonthSales&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSRepalcementCost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCompanyOnHand&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSystemRetail&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow ++;</span><br><span class=\"line\">        cell = SalesDatacells.get_Item(<span class=\"number\">1</span>, currentRow);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSAverageUnitRetail&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        currentRow = <span class=\"number\">2</span>;</span><br><span class=\"line\">        container alldateCollection = <span class=\"keyword\">this</span>.getAlldateCollection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(queryRun.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            historyView                 = queryRun.<span class=\"keyword\">get</span>(tableNum(LMSSalesHistorySummaryView));</span><br><span class=\"line\"></span><br><span class=\"line\">            container   itemIdDim       = <span class=\"keyword\">this</span>.getItemId(historyView);</span><br><span class=\"line\">            ItemId      itemId          = conPeek(itemIdDim, <span class=\"number\">1</span>);</span><br><span class=\"line\">            InventDimId inventdIm       = conPeek(itemIdDim, <span class=\"number\">2</span>);</span><br><span class=\"line\">            str         description     = conPeek(itemIdDim, <span class=\"number\">3</span>);</span><br><span class=\"line\">            <span class=\"built_in\">int</span>         currentColumn   ;</span><br><span class=\"line\"></span><br><span class=\"line\">            InventTable inventTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly PrimaryVendorId <span class=\"keyword\">from</span> inventTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventTable.ItemId == itemId;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendTable   vendTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly Party <span class=\"keyword\">from</span> vendTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendTable.AccountNum == inventTable.PrimaryVendorId;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(itemIdCon == conNull())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                itemIdCon += itemId;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!conFind(itemIdCon, itemId))</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    itemIdCon += itemId;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">1</span>);</span><br><span class=\"line\">            cell.set_Value(<span class=\"string\">&quot;@LMS:LMSLMSupply&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">2</span>);</span><br><span class=\"line\">            cell.set_Value(vendTable.vendorName());</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">3</span>);</span><br><span class=\"line\">            cell.set_Value(historyView.ProductNumber);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">4</span>);</span><br><span class=\"line\">            cell.set_Value(CustVendExternalItem::find(ModuleInventPurchSalesVendCustGroup::Vend, itemId, inventdIm, inventTable.PrimaryVendorId).ExternalItemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">5</span>);</span><br><span class=\"line\">            cell.set_Value(description);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">6</span>);</span><br><span class=\"line\">            cell.set_Value(<span class=\"keyword\">this</span>.getItemBarcode(itemId, inventdIm));</span><br><span class=\"line\"></span><br><span class=\"line\">            container conCate = <span class=\"keyword\">this</span>.getCategory(itemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">7</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">8</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">2</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, <span class=\"number\">9</span>);</span><br><span class=\"line\">            cell.set_Value(conPeek(conCate, <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(currentColumn  = <span class=\"number\">10</span>; currentColumn &lt;= conLen(alldateCollection) + <span class=\"number\">9</span>; currentColumn++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                container   conLine = conPeek(alldateCollection, currentColumn - <span class=\"number\">9</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">select</span> <span class=\"title\">sum</span>(<span class=\"params\">Quantity</span>) <span class=\"keyword\">from</span> historyViewRecord</span></span><br><span class=\"line\"><span class=\"function\">                    <span class=\"keyword\">where</span> historyViewRecord.ProductNumber</span>       == historyView.ProductNumber</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &gt;= conPeek(conLine, <span class=\"number\">1</span>)</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &lt;= conPeek(conLine, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">                cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Quantity));</span><br><span class=\"line\">            </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">select</span> <span class=\"title\">sum</span>(<span class=\"params\">Quantity</span>),<span class=\"title\">sum</span>(<span class=\"params\">Amount</span>) <span class=\"keyword\">from</span> historyViewRecord</span></span><br><span class=\"line\"><span class=\"function\">                    <span class=\"keyword\">where</span> historyViewRecord.ProductNumber</span>       == historyView.ProductNumber</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &gt;= gFromDate</span><br><span class=\"line\">                       &amp;&amp; historyViewRecord.SalesHistoryDate    &lt;= gToDate;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Quantity));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, InventTableModule::find(itemId, ModuleInventPurchSales::Purch).price));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(<span class=\"keyword\">this</span>.getinventOnhand(itemId, inventdIm));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, InventTableModule::find(itemId, ModuleInventPurchSales::Sales).price));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            cell = SalesDatacells.get_Item(currentRow, currentColumn);</span><br><span class=\"line\">            cell.set_Value(strFmt(<span class=\"string\">&quot;%1&quot;</span>, historyViewRecord.Amount));</span><br><span class=\"line\"></span><br><span class=\"line\">            currentRow ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> itemIdCon;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> BAB_EXT-0002 – Dynamic Seasonality Coefficients</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu 11/14/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> getAllCategory</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getAllCategory</span>(<span class=\"params\">RecId _parentRecId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        EcoResCategory  cate;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> RecId <span class=\"keyword\">from</span> cate</span><br><span class=\"line\">            <span class=\"keyword\">where</span> cate.ParentCategory == _parentRecId</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> gCategoryTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> gCategoryTable.EcoResCategory     == cate.RecId</span><br><span class=\"line\">                  &amp;&amp; gCategoryTable.SessionId           == gsessionId;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!gCategoryTable)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                gCategoryTable.EcoResCategory   = cate.RecId;</span><br><span class=\"line\">                gCategoryTable.SessionId        = gsessionId;</span><br><span class=\"line\">                gCategoryTable.insert();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">this</span>.getAllCategory(cate.recid);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get invent on hand.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemId&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_inventdIm&quot;&gt;</span>Invent Dim<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>the string of inventOnhand<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getinventOnhand</span>(<span class=\"params\">str _itemId, str _inventdIm</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventDimParm         dimParm;</span><br><span class=\"line\">        InventOnhand          onhand;</span><br><span class=\"line\">        InventDim             inventDimNew;</span><br><span class=\"line\"></span><br><span class=\"line\">        inventDimNew = InventDim::find(_inventdIm);</span><br><span class=\"line\"></span><br><span class=\"line\">        dimParm.initFromInventDim(inventDimNew);</span><br><span class=\"line\"></span><br><span class=\"line\">        onhand      = InventOnhand::newItemDim(_itemId, inventDimNew, dimParm);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> strFmt(<span class=\"string\">&quot;%1&quot;</span>, onhand.physicalInvent());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get category.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemId&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container  <span class=\"title\">getCategory</span>(<span class=\"params\">str _itemId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        EcoResCategory          c1,c2,c3;</span><br><span class=\"line\">        EcoResProductCategory   ecoResProductCate   = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Retail);</span><br><span class=\"line\"></span><br><span class=\"line\">        c1 = EcoResCategory::find(ecoResProductCate.Category);</span><br><span class=\"line\">        c2 = EcoResCategory::find(c1.ParentCategory);</span><br><span class=\"line\">        c3 = EcoResCategory::find(c2.ParentCategory);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> [c3.Name, c2.Name, c1.Name];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get Item Barcode</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_itemid&quot;&gt;</span>Item Id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_inventDimId&quot;&gt;</span>Invent dim id<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>ItemBarcode<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getItemBarcode</span>(<span class=\"params\">str _itemid, str _inventDimId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventItemBarcode barcode;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly itemBarCode <span class=\"keyword\">from</span> barcode</span><br><span class=\"line\">            <span class=\"keyword\">where</span> barcode.barcodeSetupId    == <span class=\"string\">&#x27;@LMS:LMSUPC&#x27;</span></span><br><span class=\"line\">               &amp;&amp; barcode.inventDimId       == _inventDimId</span><br><span class=\"line\">               &amp;&amp; barcode.itemId            == _itemid;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> barcode.itemBarCode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get all date collection.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">getAlldateCollection</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container con = conNull();</span><br><span class=\"line\">        date        fD, tD;</span><br><span class=\"line\">        </span><br><span class=\"line\">        fD = gFromDate;</span><br><span class=\"line\">        tD = endMth(fd);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span>(tD &lt;= gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += [[fD, td]];</span><br><span class=\"line\"></span><br><span class=\"line\">            fD = nextMth(fD);</span><br><span class=\"line\">            fD = fD - (dayOfMth(fd) - <span class=\"number\">1</span>);</span><br><span class=\"line\">            tD = endMth(fd);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tD &gt; gToDate &amp;&amp; fD &lt;= gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += [[fD, gToDate]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate month column.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">generateMonthColumn</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container   con = conNull();</span><br><span class=\"line\">        date        fd  = gFromDate;</span><br><span class=\"line\">        date        Td  = endMth(gToDate);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(gFromDate &amp;&amp; gToDate)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(fd &lt;= Td)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                con += strFmt(<span class=\"string\">&quot;@LMS:LMSSalesUnits&quot;</span>, <span class=\"keyword\">this</span>.getMthName(mthOfYr(fd)), year(fd) mod <span class=\"number\">1000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                fd      = nextMth(fd);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get month name.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_number&quot;&gt;</span>number<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>month name string<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getMthName</span>(<span class=\"params\"><span class=\"built_in\">int</span> _number</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        str mth = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(_number)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJan&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSFeb&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSMar&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSApr&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSMay&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJun&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSJul&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSAug&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSSep&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">10</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSOct&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">11</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSNov&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">12</span>:</span><br><span class=\"line\">                mth = <span class=\"string\">&#x27;@LMS:LMSDec&#x27;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> mth;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Generate Supplier</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_con&quot;&gt;</span>container<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_SupplierWorksheet&quot;&gt;</span>ExcelWorksheet<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generateSupplier</span>(<span class=\"params\">container _con,  OfficeOpenXml.ExcelWorksheet    _SupplierWorksheet</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span>         Suppliercells       = _SupplierWorksheet.get_Cells();</span><br><span class=\"line\">        Map         map                 = <span class=\"keyword\">new</span> Map(Types::String, Types::Container);</span><br><span class=\"line\">        <span class=\"built_in\">int</span>         currentColumn       = <span class=\"number\">1</span>;</span><br><span class=\"line\">        container   vendorCon           = conNull();</span><br><span class=\"line\">        InventTable inventtable;</span><br><span class=\"line\"></span><br><span class=\"line\">        OfficeOpenXml.ExcelRange cell = Suppliercells.get_Item(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSItemCategory&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">2</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSSupplierVendorName&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSPaymentTermsDays&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">4</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSFreightTerms&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">5</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSFOBOriginPoint&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">6</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSDelveryMethod&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">7</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMinimumOrder&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">8</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMinimumOrderAmount&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">9</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSMidStates&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">10</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSInitialStoreAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">11</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSDefetiveAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">12</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCoopMarketingAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">13</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSVolumeRebateAllowance&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">14</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSOtherDiscounts&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">15</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSReplacementCost&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">16</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&#x27;@LMS:LMSReplacementCostInclude&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        cell = Suppliercells.get_Item(<span class=\"number\">17</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cell.set_Value(<span class=\"string\">&quot;@LMS:LMSComments&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i&lt;= conLen(_con); i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly PrimaryVendorId <span class=\"keyword\">from</span> inventtable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventtable.ItemId    == conPeek(_con, i);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(inventtable.PrimaryVendorId &amp;&amp; !conFind(vendorCon, inventtable.PrimaryVendorId))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                vendorCon += inventtable.PrimaryVendorId;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> j = <span class=\"number\">1</span>; j &lt;= conLen(vendorCon); j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            currentColumn ++;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(currentColumn == <span class=\"number\">2</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">1</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"string\">&quot;@LMS:LMSCurrentSupplier&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">1</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(strFmt(<span class=\"string\">&quot;@LMS:LMSSupplier&quot;</span>, currentColumn - <span class=\"number\">1</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendTable   vendTable = VendTable::find(conPeek(vendorCon, j));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(vendTable)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">2</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(vendTable.name());</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">3</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getPaymentTerms(vendTable.CashDisc, vendTable.PaymTermId));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">4</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getFreightTerms(vendTable.DlvTerm));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">5</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getFOBOriginPoint(vendTable.Party));</span><br><span class=\"line\">                <span class=\"comment\">//6</span></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">7</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(int2Str(VendTable.LMSMinDollarOrder));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">8</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(int2Str(VendTable.LMSMinUnitFreight) + <span class=\"string\">&quot; &quot;</span> + <span class=\"string\">&quot;@SYS314952&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">9</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSCBA&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//10</span></span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">11</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSDefective&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                cell = Suppliercells.get_Item(<span class=\"number\">12</span>, currentColumn);</span><br><span class=\"line\">                cell.set_Value(<span class=\"keyword\">this</span>.getautoChargeLine(vendTable.accountnum, <span class=\"string\">&quot;@LMS:LMSCoop&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 13 14 15 16 17 </span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get auto Charge Line</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_account&quot;&gt;</span>Account<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_markupcode&quot;&gt;</span>markup code<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getautoChargeLine</span>(<span class=\"params\">str _account, str _markupcode</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MarkupAutoTable autoTable;</span><br><span class=\"line\">        MarkupAutoLine  autoLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly Value <span class=\"keyword\">from</span> autoLine</span><br><span class=\"line\">            <span class=\"keyword\">where</span> autoLine.MarkupCode           == _markupcode</span><br><span class=\"line\">            exists <span class=\"keyword\">join</span> autoTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> autoTable.ModuleType      == MarkupModuleType::Vend</span><br><span class=\"line\">                   &amp;&amp; autoTable.AccountCode     == TableGroupAll::Table</span><br><span class=\"line\">                   &amp;&amp; autoTable.AccountRelation == _account</span><br><span class=\"line\">                   &amp;&amp; autoTable.ModuleCategory  == HeadingLine::Heading</span><br><span class=\"line\">                    &amp;&amp; autoTable.ItemCode       == TableGroupAll::All</span><br><span class=\"line\">                   &amp;&amp; autoTable.RecId           == autoLine.TableRecId</span><br><span class=\"line\">                   &amp;&amp; autoTable.TableId         == autoLine.TableTableId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(autoLine)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> strFmt(<span class=\"string\">&quot;%1 %&quot;</span>, autoLine.Value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get fob origin point.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_party&quot;&gt;</span>Int64<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getFOBOriginPoint</span>(<span class=\"params\">Int64 _party</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        LogisticsPostalAddress  address     = DirParty::primaryPostalAddress(_party);</span><br><span class=\"line\">        str                     originPoint = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        container               con         = conNull();</span><br><span class=\"line\"></span><br><span class=\"line\">        con += address.City;</span><br><span class=\"line\">        con += address.State;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> con2Str(con);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get freight terms.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_dlvTerm&quot;&gt;</span>dlvTerm<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>FreightTerms str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getFreightTerms</span>(<span class=\"params\">str _dlvTerm</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        container con = [<span class=\"string\">&#x27;@LMS:LMSFFAFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSFFAFOBO&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPAFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPAFOBO&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPDFOBD&#x27;</span>, <span class=\"string\">&#x27;@LMS:LMSPPDFOBO&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(conFind(con, _dlvTerm))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Yes&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;No&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get Payment Terms</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_CashDisc&quot;&gt;</span>CashDisc<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_PaymTermId&quot;&gt;</span>PaymTermId<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>str<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> str <span class=\"title\">getPaymentTerms</span>(<span class=\"params\">str _CashDisc, str _PaymTermId</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        CashDisc    cd  = CashDisc::find(_CashDisc);</span><br><span class=\"line\">        container   con = conNull();</span><br><span class=\"line\">        PaymTerm    pt  = PaymTerm::find(_PaymTermId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cd.NumOfDays)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += int2Str(cd.NumOfDays);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pt.PaymMethod)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += enum2Str(pt.PaymMethod);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pt.NumOfDays)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            con += int2Str(pt.NumOfDays);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(conLen(con) &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> con2Str(con, <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> LMS_SUN-030708_Mid-StatesPullReport</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Bruce Niu -10/11/2024</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> Get item id.</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;param name = &quot;_displayProductNumber&quot;&gt;</span>DisplayProductNumber<span class=\"doctag\">&lt;/param&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;returns&gt;</span>container<span class=\"doctag\">&lt;/returns&gt;</span></span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">getItemId</span>(<span class=\"params\">LMSSalesHistorySummaryView _summaryView</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        InventTable             inventtable;</span><br><span class=\"line\">        InventDimCombination    inventDimCombination;</span><br><span class=\"line\">        EcoResProduct           ecoResProduct;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 begin</span></span><br><span class=\"line\">        InventDim               inventDimLoc;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">select</span> firstonly ItemId, InventDimId, RetailVariantId, DistinctProductVariant <span class=\"keyword\">from</span> inventDimCombination</span><br><span class=\"line\">            <span class=\"keyword\">where</span> inventDimCombination.ItemId       == _summaryView.ProductNumber</span><br><span class=\"line\">            exists <span class=\"keyword\">join</span> inventDimLoc</span><br><span class=\"line\">                <span class=\"keyword\">where</span> inventDimLoc.inventDimId      == inventDimCombination.InventDimId</span><br><span class=\"line\">                    &amp;&amp; inventDimLoc.InventColorId   == _summaryView.Color</span><br><span class=\"line\">                    &amp;&amp; inventDimLoc.InventSizeId    == _summaryView.Size;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(inventDimCombination.ItemId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> [inventDimCombination.ItemId,inventDimCombination.InventDimId, inventDimCombination.productDescription(<span class=\"string\">&quot;en-us&quot;</span>)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly ItemId, Product <span class=\"keyword\">from</span> inventtable</span><br><span class=\"line\">                exists <span class=\"keyword\">join</span> ecoResProduct</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> ecoResProduct.RecId                   == inventtable.Product</span><br><span class=\"line\">                       &amp;&amp; ecoResProduct.DisplayProductNumber    == _summaryView.ProductNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> [inventtable.ItemId, InventDim::inventDimIdBlank(), inventtable.productDescription(<span class=\"string\">&quot;en-us&quot;</span>)];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// LMS_SUN-030708_Mid-StatesPullReport add by Ina Wang on 11/11/2024 end</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Flask Overview","comments":1,"date":"2025-01-07T11:22:34.000Z","description":"Flask Overview","_content":"\n\n# Flask Overview\n\n## Python Install\n\nPlease install the python on your computer based on [Python](https://www.python.org/).\nIf the system has some environmental path error when using the python order, please read [How to add to the PYTHONPATH in Windows](https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modules-packages).\n\n### Virtual environments\n\nUse a virtual environment to manage the dependencies for your project, both in development and in production.\n\nWhat problem does a virtual environment solve? The more Python projects you have, the more likely it is that you need to work with different versions of Python libraries, or even Python itself. Newer versions of libraries for one project can break compatibility in another project.\n\nVirtual environments are independent groups of Python libraries, one for each project. Packages installed for one project will not affect other projects or the operating system’s packages.\n\n1. Create an environment.\n\n```powershell\nmkdir myproject\ncd myproject\npy -3 -m venv .venv\n```\n\n2. Active the environment.\n\n```powershell\n.venv\\Scripts\\activate\n```\n\n## Install Flask\n\n```powershell\npip install Flask\n```\n\n## Quickstart\n\n### A Minimal Application\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n```\n\nTo run the application, use the `flask` command or `python -m flask`. You need to tell the Flask where your application is with the `--app` option.\n\n```powershell\nflask --app hello run\n```\n\n![Flask Running](ai-plateform-flask/image.png)\n\n> As a shortcut, if the file is named app.py or wsgi.py, you don’t have to use --app. See Command Line Interface for more details.\n\n#### Debug Mode\n\nTo enable debug mode, use the `--debug` option.\n\n```powershell\nflask --app hello run --debug\n```\n\n#### HTML Escaping\n\nWhen returning HTML (the default response type in Flask), any user-provided values rendered in the output must be escaped to protect from injection attacks. HTML templates rendered with Jinja, introduced later, will do this automatically.\n\n**escape()**, shown here, can be used manually. It is omitted in most examples for brevity, but you should always be aware of how you’re using untrusted data.\n\n```python\nfrom flask import Flask\nfrom markupsafe import escape\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n\n@app.route(\"/<name>\")\ndef hello(name):\n    return f\"Hello, {escape(name)}!\";\n```\n\n#### Routing\n\nModern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to directly visit a page.\n\nUse the **route()** decorator to bind a function to a URL.\n\n```python\n@app.route('/')\ndef index():\n    return 'Index Page'\n\n@app.route('/hello')\ndef hello():\n    return 'Hello, World'\n```\n\n#### Variable Rules\n\nYou can add variable sections to a URL by marking sections with `<variable_name>`. Your function then receives the `<variable_name>` as a keyword argument. Optionally, you can use a converter to specify the type of the argument like `<converter:variable_name>`.\n\n```python\nfrom markupsafe import escape\n\n@app.route('/user/<username>')\ndef show_user_profile(username):\n    # show the user profile for that user\n    return f'User {escape(username)}'\n\n@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    # show the post with the given id, the id is an integer\n    return f'Post {post_id}'\n\n@app.route('/path/<path:subpath>')\ndef show_subpath(subpath):\n    # show the subpath after /path/\n    return f'Subpath {escape(subpath)}'\n```\n\n|type|description|\n|-|-|\n|string|(default) accepts any text without a slash|\n|int|accepts positive integers|\n|float|accepts positive floating point values|\n|path|like string but also accepts slashes|\n|uuid|accepts UUID strings|\n\n#### Unique URLs / Redirection Behavior\n\nThe following two rules differ in their use of a trailing slash.\n\n```python\n@app.route('/projects/')\ndef projects():\n    return 'The project page'\n\n@app.route('/about')\ndef about():\n    return 'The about page'\n```\n\nThe canonical URL for the projects endpoint has a trailing slash. It’s similar to a folder in a file system. If you access the URL without a trailing slash (/projects), Flask redirects you to the canonical URL with the trailing slash (/projects/).\n\nThe canonical URL for the about endpoint does not have a trailing slash. It’s similar to the pathname of a file. Accessing the URL with a trailing slash (/about/) produces a 404 “Not Found” error. This helps keep URLs unique for these resources, which helps search engines avoid indexing the same page twice.\n\n#### HTTP Methods\n\nWeb applications use different HTTP methods when accessing URLs. You should familiarize yourself with the HTTP methods as you work with Flask. By default, a route only answers to `GET` requests. You can use the `methods` argument of the **route()** decorator to handle different HTTP methods.\n\n```python\nfrom flask import request\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        return do_the_login()\n    else:\n        return show_the_login_form()\n```\n\nThe example above keeps all methods for the route within one function, which can be useful if each part uses some common data.\n\nYou can also separate views for different methods into different functions. Flask provides a shortcut for decorating such routes with **get(), post()**, etc. for each common HTTP method.\n\n```python\n@app.get('/login')\ndef login_get():\n    return show_the_login_form()\n\n@app.post('/login')\ndef login_post():\n    return do_the_login()\n```\n\nIf GET is present, Flask automatically adds support for the HEAD method and handles HEAD requests according to the HTTP RFC. Likewise, OPTIONS is automatically implemented for you.\n\n#### Static Files\n\nDynamic web applications also need static files. That’s usually where the CSS and JavaScript files are coming from. Ideally your web server is configured to serve them for you, but during development Flask can do that as well. Just create a folder called static in your package or next to your module and it will be available at /static on the application.\n\nTo generate URLs for static files, use the special 'static' endpoint name:\n\n```python\nurl_for('static', filename='style.css')\n```\n\nThe file has to be stored on the filesystem as static/style.css.\n\n#### Rendering Templates\n\nGenerating HTML from within Python is not fun, and actually pretty cumbersome because you have to do the HTML escaping on your own to keep the application secure. Because of that Flask configures the Jinja2 template engine for you automatically.\n\nTemplates can be used to generate any type of text file. For web applications, you’ll primarily be generating HTML pages, but you can also generate markdown, plain text for emails, and anything else.\n\nFor a reference to HTML, CSS, and other web APIs, use the MDN Web Docs.\n\nTo render a template you can use the render_template() method. All you have to do is provide the name of the template and the variables you want to pass to the template engine as keyword arguments. Here’s a simple example of how to render a template:\n\n```python\nfrom flask import render_template\n\n@app.route('/hello/')\n@app.route('/hello/<name>')\ndef hello(name=None):\n    return render_template('hello.html', person=name)\nFlask will look for templates in the templates folder. So if your application is a module, this folder is next to that module, if it’s a package it’s actually inside your package:\n```\n\nCase 1: a module:\n\n```text\n/application.py\n/templates\n    /hello.html\n```\n\nCase 2: a package:\n\n```text\n/application\n    /__init__.py\n    /templates\n        /hello.html\n```\n\nFor templates you can use the full power of Jinja2 templates. Head over to the official Jinja2 Template Documentation for more information.\n\nHere is an example template:\n\n```html\n<!doctype html>\n<title>Hello from Flask</title>\n{% if person %}\n  <h1>Hello {{ person }}!</h1>\n{% else %}\n  <h1>Hello, World!</h1>\n{% endif %}\n```\n\n#### Accessing Request Data\n\nFor web applications it’s crucial to react to the data a client sends to the server. In Flask this information is provided by the global **request** object. If you have some experience with Python you might be wondering how that object can be global and how Flask manages to still be threadsafe. The answer is context locals:\n\nSo what does this mean to you? Basically you can completely ignore that this is the case unless you are doing something like unit testing. You will notice that code which depends on a request object will suddenly break because there is no request object. The solution is creating a request object yourself and binding it to the context. The easiest solution for unit testing is to use the **test_request_context()** context manager. In combination with the with statement it will bind a test request so that you can interact with it. Here is an example:\n\n```python\nfrom flask import request\n\nwith app.test_request_context('/hello', method='POST'):\n    # now you can do something with the request until the\n    # end of the with block, such as basic assertions:\n    assert request.path == '/hello'\n    assert request.method == 'POST'\n```","source":"_posts/ai-plateform-flask.md","raw":"---\ntitle: Flask Overview\ntags:\ncategories:\n - d365\n - x++\ncomments: true\ndate: 2025-01-07 19:22:34\ndescription: Flask Overview\n---\n\n\n# Flask Overview\n\n## Python Install\n\nPlease install the python on your computer based on [Python](https://www.python.org/).\nIf the system has some environmental path error when using the python order, please read [How to add to the PYTHONPATH in Windows](https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modules-packages).\n\n### Virtual environments\n\nUse a virtual environment to manage the dependencies for your project, both in development and in production.\n\nWhat problem does a virtual environment solve? The more Python projects you have, the more likely it is that you need to work with different versions of Python libraries, or even Python itself. Newer versions of libraries for one project can break compatibility in another project.\n\nVirtual environments are independent groups of Python libraries, one for each project. Packages installed for one project will not affect other projects or the operating system’s packages.\n\n1. Create an environment.\n\n```powershell\nmkdir myproject\ncd myproject\npy -3 -m venv .venv\n```\n\n2. Active the environment.\n\n```powershell\n.venv\\Scripts\\activate\n```\n\n## Install Flask\n\n```powershell\npip install Flask\n```\n\n## Quickstart\n\n### A Minimal Application\n\n```python\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n```\n\nTo run the application, use the `flask` command or `python -m flask`. You need to tell the Flask where your application is with the `--app` option.\n\n```powershell\nflask --app hello run\n```\n\n![Flask Running](ai-plateform-flask/image.png)\n\n> As a shortcut, if the file is named app.py or wsgi.py, you don’t have to use --app. See Command Line Interface for more details.\n\n#### Debug Mode\n\nTo enable debug mode, use the `--debug` option.\n\n```powershell\nflask --app hello run --debug\n```\n\n#### HTML Escaping\n\nWhen returning HTML (the default response type in Flask), any user-provided values rendered in the output must be escaped to protect from injection attacks. HTML templates rendered with Jinja, introduced later, will do this automatically.\n\n**escape()**, shown here, can be used manually. It is omitted in most examples for brevity, but you should always be aware of how you’re using untrusted data.\n\n```python\nfrom flask import Flask\nfrom markupsafe import escape\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello_world():\n    return \"<p>Hello, World!</p>\"\n\n@app.route(\"/<name>\")\ndef hello(name):\n    return f\"Hello, {escape(name)}!\";\n```\n\n#### Routing\n\nModern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to directly visit a page.\n\nUse the **route()** decorator to bind a function to a URL.\n\n```python\n@app.route('/')\ndef index():\n    return 'Index Page'\n\n@app.route('/hello')\ndef hello():\n    return 'Hello, World'\n```\n\n#### Variable Rules\n\nYou can add variable sections to a URL by marking sections with `<variable_name>`. Your function then receives the `<variable_name>` as a keyword argument. Optionally, you can use a converter to specify the type of the argument like `<converter:variable_name>`.\n\n```python\nfrom markupsafe import escape\n\n@app.route('/user/<username>')\ndef show_user_profile(username):\n    # show the user profile for that user\n    return f'User {escape(username)}'\n\n@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    # show the post with the given id, the id is an integer\n    return f'Post {post_id}'\n\n@app.route('/path/<path:subpath>')\ndef show_subpath(subpath):\n    # show the subpath after /path/\n    return f'Subpath {escape(subpath)}'\n```\n\n|type|description|\n|-|-|\n|string|(default) accepts any text without a slash|\n|int|accepts positive integers|\n|float|accepts positive floating point values|\n|path|like string but also accepts slashes|\n|uuid|accepts UUID strings|\n\n#### Unique URLs / Redirection Behavior\n\nThe following two rules differ in their use of a trailing slash.\n\n```python\n@app.route('/projects/')\ndef projects():\n    return 'The project page'\n\n@app.route('/about')\ndef about():\n    return 'The about page'\n```\n\nThe canonical URL for the projects endpoint has a trailing slash. It’s similar to a folder in a file system. If you access the URL without a trailing slash (/projects), Flask redirects you to the canonical URL with the trailing slash (/projects/).\n\nThe canonical URL for the about endpoint does not have a trailing slash. It’s similar to the pathname of a file. Accessing the URL with a trailing slash (/about/) produces a 404 “Not Found” error. This helps keep URLs unique for these resources, which helps search engines avoid indexing the same page twice.\n\n#### HTTP Methods\n\nWeb applications use different HTTP methods when accessing URLs. You should familiarize yourself with the HTTP methods as you work with Flask. By default, a route only answers to `GET` requests. You can use the `methods` argument of the **route()** decorator to handle different HTTP methods.\n\n```python\nfrom flask import request\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        return do_the_login()\n    else:\n        return show_the_login_form()\n```\n\nThe example above keeps all methods for the route within one function, which can be useful if each part uses some common data.\n\nYou can also separate views for different methods into different functions. Flask provides a shortcut for decorating such routes with **get(), post()**, etc. for each common HTTP method.\n\n```python\n@app.get('/login')\ndef login_get():\n    return show_the_login_form()\n\n@app.post('/login')\ndef login_post():\n    return do_the_login()\n```\n\nIf GET is present, Flask automatically adds support for the HEAD method and handles HEAD requests according to the HTTP RFC. Likewise, OPTIONS is automatically implemented for you.\n\n#### Static Files\n\nDynamic web applications also need static files. That’s usually where the CSS and JavaScript files are coming from. Ideally your web server is configured to serve them for you, but during development Flask can do that as well. Just create a folder called static in your package or next to your module and it will be available at /static on the application.\n\nTo generate URLs for static files, use the special 'static' endpoint name:\n\n```python\nurl_for('static', filename='style.css')\n```\n\nThe file has to be stored on the filesystem as static/style.css.\n\n#### Rendering Templates\n\nGenerating HTML from within Python is not fun, and actually pretty cumbersome because you have to do the HTML escaping on your own to keep the application secure. Because of that Flask configures the Jinja2 template engine for you automatically.\n\nTemplates can be used to generate any type of text file. For web applications, you’ll primarily be generating HTML pages, but you can also generate markdown, plain text for emails, and anything else.\n\nFor a reference to HTML, CSS, and other web APIs, use the MDN Web Docs.\n\nTo render a template you can use the render_template() method. All you have to do is provide the name of the template and the variables you want to pass to the template engine as keyword arguments. Here’s a simple example of how to render a template:\n\n```python\nfrom flask import render_template\n\n@app.route('/hello/')\n@app.route('/hello/<name>')\ndef hello(name=None):\n    return render_template('hello.html', person=name)\nFlask will look for templates in the templates folder. So if your application is a module, this folder is next to that module, if it’s a package it’s actually inside your package:\n```\n\nCase 1: a module:\n\n```text\n/application.py\n/templates\n    /hello.html\n```\n\nCase 2: a package:\n\n```text\n/application\n    /__init__.py\n    /templates\n        /hello.html\n```\n\nFor templates you can use the full power of Jinja2 templates. Head over to the official Jinja2 Template Documentation for more information.\n\nHere is an example template:\n\n```html\n<!doctype html>\n<title>Hello from Flask</title>\n{% if person %}\n  <h1>Hello {{ person }}!</h1>\n{% else %}\n  <h1>Hello, World!</h1>\n{% endif %}\n```\n\n#### Accessing Request Data\n\nFor web applications it’s crucial to react to the data a client sends to the server. In Flask this information is provided by the global **request** object. If you have some experience with Python you might be wondering how that object can be global and how Flask manages to still be threadsafe. The answer is context locals:\n\nSo what does this mean to you? Basically you can completely ignore that this is the case unless you are doing something like unit testing. You will notice that code which depends on a request object will suddenly break because there is no request object. The solution is creating a request object yourself and binding it to the context. The easiest solution for unit testing is to use the **test_request_context()** context manager. In combination with the with statement it will bind a test request so that you can interact with it. Here is an example:\n\n```python\nfrom flask import request\n\nwith app.test_request_context('/hello', method='POST'):\n    # now you can do something with the request until the\n    # end of the with block, such as basic assertions:\n    assert request.path == '/hello'\n    assert request.method == 'POST'\n```","slug":"ai-plateform-flask","published":1,"updated":"2025-02-23T13:07:03.167Z","layout":"post","photos":[],"_id":"cm7j2rsca0005qgug1wfc9gwt","content":"<h1 id=\"Flask-Overview\"><a href=\"#Flask-Overview\" class=\"headerlink\" title=\"Flask Overview\"></a>Flask Overview</h1><h2 id=\"Python-Install\"><a href=\"#Python-Install\" class=\"headerlink\" title=\"Python Install\"></a>Python Install</h2><p>Please install the python on your computer based on <a href=\"https://www.python.org/\">Python</a>.<br>If the system has some environmental path error when using the python order, please read <a href=\"https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modules-packages\">How to add to the PYTHONPATH in Windows</a>.</p>\n<h3 id=\"Virtual-environments\"><a href=\"#Virtual-environments\" class=\"headerlink\" title=\"Virtual environments\"></a>Virtual environments</h3><p>Use a virtual environment to manage the dependencies for your project, both in development and in production.</p>\n<p>What problem does a virtual environment solve? The more Python projects you have, the more likely it is that you need to work with different versions of Python libraries, or even Python itself. Newer versions of libraries for one project can break compatibility in another project.</p>\n<p>Virtual environments are independent groups of Python libraries, one for each project. Packages installed for one project will not affect other projects or the operating system’s packages.</p>\n<ol>\n<li>Create an environment.</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir myproject</span><br><span class=\"line\"><span class=\"built_in\">cd</span> myproject</span><br><span class=\"line\">py <span class=\"literal\">-3</span> <span class=\"literal\">-m</span> venv .venv</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Active the environment.</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.venv\\Scripts\\activate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Install-Flask\"><a href=\"#Install-Flask\" class=\"headerlink\" title=\"Install Flask\"></a>Install Flask</h2><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Flask</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Quickstart\"><a href=\"#Quickstart\" class=\"headerlink\" title=\"Quickstart\"></a>Quickstart</h2><h3 id=\"A-Minimal-Application\"><a href=\"#A-Minimal-Application\" class=\"headerlink\" title=\"A Minimal Application\"></a>A Minimal Application</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>To run the application, use the <code>flask</code> command or <code>python -m flask</code>. You need to tell the Flask where your application is with the <code>--app</code> option.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> hello run</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/ai-plateform-flask/image.png\" alt=\"Flask Running\"></p>\n<blockquote>\n<p>As a shortcut, if the file is named app.py or wsgi.py, you don’t have to use –app. See Command Line Interface for more details.</p>\n</blockquote>\n<h4 id=\"Debug-Mode\"><a href=\"#Debug-Mode\" class=\"headerlink\" title=\"Debug Mode\"></a>Debug Mode</h4><p>To enable debug mode, use the <code>--debug</code> option.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> hello run <span class=\"literal\">--debug</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HTML-Escaping\"><a href=\"#HTML-Escaping\" class=\"headerlink\" title=\"HTML Escaping\"></a>HTML Escaping</h4><p>When returning HTML (the default response type in Flask), any user-provided values rendered in the output must be escaped to protect from injection attacks. HTML templates rendered with Jinja, introduced later, will do this automatically.</p>\n<p><strong>escape()</strong>, shown here, can be used manually. It is omitted in most examples for brevity, but you should always be aware of how you’re using untrusted data.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> markupsafe <span class=\"keyword\">import</span> escape</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&lt;name&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;Hello, <span class=\"subst\">&#123;escape(name)&#125;</span>!&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Routing\"><a href=\"#Routing\" class=\"headerlink\" title=\"Routing\"></a>Routing</h4><p>Modern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to directly visit a page.</p>\n<p>Use the <strong>route()</strong> decorator to bind a function to a URL.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Index Page&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Variable-Rules\"><a href=\"#Variable-Rules\" class=\"headerlink\" title=\"Variable Rules\"></a>Variable Rules</h4><p>You can add variable sections to a URL by marking sections with <code>&lt;variable_name&gt;</code>. Your function then receives the <code>&lt;variable_name&gt;</code> as a keyword argument. Optionally, you can use a converter to specify the type of the argument like <code>&lt;converter:variable_name&gt;</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> markupsafe <span class=\"keyword\">import</span> escape</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/user/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_user_profile</span>(<span class=\"params\">username</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the user profile for that user</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;User <span class=\"subst\">&#123;escape(username)&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/post/&lt;int:post_id&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_post</span>(<span class=\"params\">post_id</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the post with the given id, the id is an integer</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Post <span class=\"subst\">&#123;post_id&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/path/&lt;path:subpath&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_subpath</span>(<span class=\"params\">subpath</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the subpath after /path/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Subpath <span class=\"subst\">&#123;escape(subpath)&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string</td>\n<td>(default) accepts any text without a slash</td>\n</tr>\n<tr>\n<td>int</td>\n<td>accepts positive integers</td>\n</tr>\n<tr>\n<td>float</td>\n<td>accepts positive floating point values</td>\n</tr>\n<tr>\n<td>path</td>\n<td>like string but also accepts slashes</td>\n</tr>\n<tr>\n<td>uuid</td>\n<td>accepts UUID strings</td>\n</tr>\n</tbody></table>\n<h4 id=\"Unique-URLs-Redirection-Behavior\"><a href=\"#Unique-URLs-Redirection-Behavior\" class=\"headerlink\" title=\"Unique URLs &#x2F; Redirection Behavior\"></a>Unique URLs &#x2F; Redirection Behavior</h4><p>The following two rules differ in their use of a trailing slash.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/projects/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">projects</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;The project page&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;The about page&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>The canonical URL for the projects endpoint has a trailing slash. It’s similar to a folder in a file system. If you access the URL without a trailing slash (&#x2F;projects), Flask redirects you to the canonical URL with the trailing slash (&#x2F;projects&#x2F;).</p>\n<p>The canonical URL for the about endpoint does not have a trailing slash. It’s similar to the pathname of a file. Accessing the URL with a trailing slash (&#x2F;about&#x2F;) produces a 404 “Not Found” error. This helps keep URLs unique for these resources, which helps search engines avoid indexing the same page twice.</p>\n<h4 id=\"HTTP-Methods\"><a href=\"#HTTP-Methods\" class=\"headerlink\" title=\"HTTP Methods\"></a>HTTP Methods</h4><p>Web applications use different HTTP methods when accessing URLs. You should familiarize yourself with the HTTP methods as you work with Flask. By default, a route only answers to <code>GET</code> requests. You can use the <code>methods</code> argument of the <strong>route()</strong> decorator to handle different HTTP methods.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> do_the_login()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> show_the_login_form()</span><br></pre></td></tr></table></figure>\n\n<p>The example above keeps all methods for the route within one function, which can be useful if each part uses some common data.</p>\n<p>You can also separate views for different methods into different functions. Flask provides a shortcut for decorating such routes with <strong>get(), post()</strong>, etc. for each common HTTP method.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.get(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_get</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> show_the_login_form()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.post(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_post</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> do_the_login()</span><br></pre></td></tr></table></figure>\n\n<p>If GET is present, Flask automatically adds support for the HEAD method and handles HEAD requests according to the HTTP RFC. Likewise, OPTIONS is automatically implemented for you.</p>\n<h4 id=\"Static-Files\"><a href=\"#Static-Files\" class=\"headerlink\" title=\"Static Files\"></a>Static Files</h4><p>Dynamic web applications also need static files. That’s usually where the CSS and JavaScript files are coming from. Ideally your web server is configured to serve them for you, but during development Flask can do that as well. Just create a folder called static in your package or next to your module and it will be available at &#x2F;static on the application.</p>\n<p>To generate URLs for static files, use the special ‘static’ endpoint name:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url_for(<span class=\"string\">&#x27;static&#x27;</span>, filename=<span class=\"string\">&#x27;style.css&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>The file has to be stored on the filesystem as static&#x2F;style.css.</p>\n<h4 id=\"Rendering-Templates\"><a href=\"#Rendering-Templates\" class=\"headerlink\" title=\"Rendering Templates\"></a>Rendering Templates</h4><p>Generating HTML from within Python is not fun, and actually pretty cumbersome because you have to do the HTML escaping on your own to keep the application secure. Because of that Flask configures the Jinja2 template engine for you automatically.</p>\n<p>Templates can be used to generate any type of text file. For web applications, you’ll primarily be generating HTML pages, but you can also generate markdown, plain text for emails, and anything else.</p>\n<p>For a reference to HTML, CSS, and other web APIs, use the MDN Web Docs.</p>\n<p>To render a template you can use the render_template() method. All you have to do is provide the name of the template and the variables you want to pass to the template engine as keyword arguments. Here’s a simple example of how to render a template:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> render_template</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">name=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;hello.html&#x27;</span>, person=name)</span><br><span class=\"line\">Flask will look <span class=\"keyword\">for</span> templates <span class=\"keyword\">in</span> the templates folder. So <span class=\"keyword\">if</span> your application <span class=\"keyword\">is</span> a module, this folder <span class=\"keyword\">is</span> <span class=\"built_in\">next</span> to that module, <span class=\"keyword\">if</span> it’s a package it’s actually inside your package:</span><br></pre></td></tr></table></figure>\n\n<p>Case 1: a module:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/application.py</span><br><span class=\"line\">/templates</span><br><span class=\"line\">    /hello.html</span><br></pre></td></tr></table></figure>\n\n<p>Case 2: a package:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/application</span><br><span class=\"line\">    /__init__.py</span><br><span class=\"line\">    /templates</span><br><span class=\"line\">        /hello.html</span><br></pre></td></tr></table></figure>\n\n<p>For templates you can use the full power of Jinja2 templates. Head over to the official Jinja2 Template Documentation for more information.</p>\n<p>Here is an example template:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello from Flask<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">&#123;% if person %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello &#123;&#123; person &#125;&#125;!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% else %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Accessing-Request-Data\"><a href=\"#Accessing-Request-Data\" class=\"headerlink\" title=\"Accessing Request Data\"></a>Accessing Request Data</h4><p>For web applications it’s crucial to react to the data a client sends to the server. In Flask this information is provided by the global <strong>request</strong> object. If you have some experience with Python you might be wondering how that object can be global and how Flask manages to still be threadsafe. The answer is context locals:</p>\n<p>So what does this mean to you? Basically you can completely ignore that this is the case unless you are doing something like unit testing. You will notice that code which depends on a request object will suddenly break because there is no request object. The solution is creating a request object yourself and binding it to the context. The easiest solution for unit testing is to use the <strong>test_request_context()</strong> context manager. In combination with the with statement it will bind a test request so that you can interact with it. Here is an example:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> app.test_request_context(<span class=\"string\">&#x27;/hello&#x27;</span>, method=<span class=\"string\">&#x27;POST&#x27;</span>):</span><br><span class=\"line\">    <span class=\"comment\"># now you can do something with the request until the</span></span><br><span class=\"line\">    <span class=\"comment\"># end of the with block, such as basic assertions:</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> request.path == <span class=\"string\">&#x27;/hello&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"Flask-Overview\"><a href=\"#Flask-Overview\" class=\"headerlink\" title=\"Flask Overview\"></a>Flask Overview</h1><h2 id=\"Python-Install\"><a href=\"#Python-Install\" class=\"headerlink\" title=\"Python Install\"></a>Python Install</h2><p>Please install the python on your computer based on <a href=\"https://www.python.org/\">Python</a>.<br>If the system has some environmental path error when using the python order, please read <a href=\"https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-so-it-finds-my-modules-packages\">How to add to the PYTHONPATH in Windows</a>.</p>\n<h3 id=\"Virtual-environments\"><a href=\"#Virtual-environments\" class=\"headerlink\" title=\"Virtual environments\"></a>Virtual environments</h3><p>Use a virtual environment to manage the dependencies for your project, both in development and in production.</p>\n<p>What problem does a virtual environment solve? The more Python projects you have, the more likely it is that you need to work with different versions of Python libraries, or even Python itself. Newer versions of libraries for one project can break compatibility in another project.</p>\n<p>Virtual environments are independent groups of Python libraries, one for each project. Packages installed for one project will not affect other projects or the operating system’s packages.</p>\n<ol>\n<li>Create an environment.</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir myproject</span><br><span class=\"line\"><span class=\"built_in\">cd</span> myproject</span><br><span class=\"line\">py <span class=\"literal\">-3</span> <span class=\"literal\">-m</span> venv .venv</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Active the environment.</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.venv\\Scripts\\activate</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Install-Flask\"><a href=\"#Install-Flask\" class=\"headerlink\" title=\"Install Flask\"></a>Install Flask</h2><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install Flask</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Quickstart\"><a href=\"#Quickstart\" class=\"headerlink\" title=\"Quickstart\"></a>Quickstart</h2><h3 id=\"A-Minimal-Application\"><a href=\"#A-Minimal-Application\" class=\"headerlink\" title=\"A Minimal Application\"></a>A Minimal Application</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>To run the application, use the <code>flask</code> command or <code>python -m flask</code>. You need to tell the Flask where your application is with the <code>--app</code> option.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> hello run</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/ai-plateform-flask/image.png\" alt=\"Flask Running\"></p>\n<blockquote>\n<p>As a shortcut, if the file is named app.py or wsgi.py, you don’t have to use –app. See Command Line Interface for more details.</p>\n</blockquote>\n<h4 id=\"Debug-Mode\"><a href=\"#Debug-Mode\" class=\"headerlink\" title=\"Debug Mode\"></a>Debug Mode</h4><p>To enable debug mode, use the <code>--debug</code> option.</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> hello run <span class=\"literal\">--debug</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HTML-Escaping\"><a href=\"#HTML-Escaping\" class=\"headerlink\" title=\"HTML Escaping\"></a>HTML Escaping</h4><p>When returning HTML (the default response type in Flask), any user-provided values rendered in the output must be escaped to protect from injection attacks. HTML templates rendered with Jinja, introduced later, will do this automatically.</p>\n<p><strong>escape()</strong>, shown here, can be used manually. It is omitted in most examples for brevity, but you should always be aware of how you’re using untrusted data.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> markupsafe <span class=\"keyword\">import</span> escape</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/&lt;name&gt;&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">name</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&quot;Hello, <span class=\"subst\">&#123;escape(name)&#125;</span>!&quot;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Routing\"><a href=\"#Routing\" class=\"headerlink\" title=\"Routing\"></a>Routing</h4><p>Modern web applications use meaningful URLs to help users. Users are more likely to like a page and come back if the page uses a meaningful URL they can remember and use to directly visit a page.</p>\n<p>Use the <strong>route()</strong> decorator to bind a function to a URL.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Index Page&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Variable-Rules\"><a href=\"#Variable-Rules\" class=\"headerlink\" title=\"Variable Rules\"></a>Variable Rules</h4><p>You can add variable sections to a URL by marking sections with <code>&lt;variable_name&gt;</code>. Your function then receives the <code>&lt;variable_name&gt;</code> as a keyword argument. Optionally, you can use a converter to specify the type of the argument like <code>&lt;converter:variable_name&gt;</code>.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> markupsafe <span class=\"keyword\">import</span> escape</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/user/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_user_profile</span>(<span class=\"params\">username</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the user profile for that user</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;User <span class=\"subst\">&#123;escape(username)&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/post/&lt;int:post_id&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_post</span>(<span class=\"params\">post_id</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the post with the given id, the id is an integer</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Post <span class=\"subst\">&#123;post_id&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/path/&lt;path:subpath&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show_subpath</span>(<span class=\"params\">subpath</span>):</span><br><span class=\"line\">    <span class=\"comment\"># show the subpath after /path/</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Subpath <span class=\"subst\">&#123;escape(subpath)&#125;</span>&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>string</td>\n<td>(default) accepts any text without a slash</td>\n</tr>\n<tr>\n<td>int</td>\n<td>accepts positive integers</td>\n</tr>\n<tr>\n<td>float</td>\n<td>accepts positive floating point values</td>\n</tr>\n<tr>\n<td>path</td>\n<td>like string but also accepts slashes</td>\n</tr>\n<tr>\n<td>uuid</td>\n<td>accepts UUID strings</td>\n</tr>\n</tbody></table>\n<h4 id=\"Unique-URLs-Redirection-Behavior\"><a href=\"#Unique-URLs-Redirection-Behavior\" class=\"headerlink\" title=\"Unique URLs &#x2F; Redirection Behavior\"></a>Unique URLs &#x2F; Redirection Behavior</h4><p>The following two rules differ in their use of a trailing slash.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/projects/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">projects</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;The project page&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;The about page&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>The canonical URL for the projects endpoint has a trailing slash. It’s similar to a folder in a file system. If you access the URL without a trailing slash (&#x2F;projects), Flask redirects you to the canonical URL with the trailing slash (&#x2F;projects&#x2F;).</p>\n<p>The canonical URL for the about endpoint does not have a trailing slash. It’s similar to the pathname of a file. Accessing the URL with a trailing slash (&#x2F;about&#x2F;) produces a 404 “Not Found” error. This helps keep URLs unique for these resources, which helps search engines avoid indexing the same page twice.</p>\n<h4 id=\"HTTP-Methods\"><a href=\"#HTTP-Methods\" class=\"headerlink\" title=\"HTTP Methods\"></a>HTTP Methods</h4><p>Web applications use different HTTP methods when accessing URLs. You should familiarize yourself with the HTTP methods as you work with Flask. By default, a route only answers to <code>GET</code> requests. You can use the <code>methods</code> argument of the <strong>route()</strong> decorator to handle different HTTP methods.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> do_the_login()</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> show_the_login_form()</span><br></pre></td></tr></table></figure>\n\n<p>The example above keeps all methods for the route within one function, which can be useful if each part uses some common data.</p>\n<p>You can also separate views for different methods into different functions. Flask provides a shortcut for decorating such routes with <strong>get(), post()</strong>, etc. for each common HTTP method.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.get(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_get</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> show_the_login_form()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.post(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_post</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> do_the_login()</span><br></pre></td></tr></table></figure>\n\n<p>If GET is present, Flask automatically adds support for the HEAD method and handles HEAD requests according to the HTTP RFC. Likewise, OPTIONS is automatically implemented for you.</p>\n<h4 id=\"Static-Files\"><a href=\"#Static-Files\" class=\"headerlink\" title=\"Static Files\"></a>Static Files</h4><p>Dynamic web applications also need static files. That’s usually where the CSS and JavaScript files are coming from. Ideally your web server is configured to serve them for you, but during development Flask can do that as well. Just create a folder called static in your package or next to your module and it will be available at &#x2F;static on the application.</p>\n<p>To generate URLs for static files, use the special ‘static’ endpoint name:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url_for(<span class=\"string\">&#x27;static&#x27;</span>, filename=<span class=\"string\">&#x27;style.css&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>The file has to be stored on the filesystem as static&#x2F;style.css.</p>\n<h4 id=\"Rendering-Templates\"><a href=\"#Rendering-Templates\" class=\"headerlink\" title=\"Rendering Templates\"></a>Rendering Templates</h4><p>Generating HTML from within Python is not fun, and actually pretty cumbersome because you have to do the HTML escaping on your own to keep the application secure. Because of that Flask configures the Jinja2 template engine for you automatically.</p>\n<p>Templates can be used to generate any type of text file. For web applications, you’ll primarily be generating HTML pages, but you can also generate markdown, plain text for emails, and anything else.</p>\n<p>For a reference to HTML, CSS, and other web APIs, use the MDN Web Docs.</p>\n<p>To render a template you can use the render_template() method. All you have to do is provide the name of the template and the variables you want to pass to the template engine as keyword arguments. Here’s a simple example of how to render a template:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> render_template</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">name=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;hello.html&#x27;</span>, person=name)</span><br><span class=\"line\">Flask will look <span class=\"keyword\">for</span> templates <span class=\"keyword\">in</span> the templates folder. So <span class=\"keyword\">if</span> your application <span class=\"keyword\">is</span> a module, this folder <span class=\"keyword\">is</span> <span class=\"built_in\">next</span> to that module, <span class=\"keyword\">if</span> it’s a package it’s actually inside your package:</span><br></pre></td></tr></table></figure>\n\n<p>Case 1: a module:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/application.py</span><br><span class=\"line\">/templates</span><br><span class=\"line\">    /hello.html</span><br></pre></td></tr></table></figure>\n\n<p>Case 2: a package:</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/application</span><br><span class=\"line\">    /__init__.py</span><br><span class=\"line\">    /templates</span><br><span class=\"line\">        /hello.html</span><br></pre></td></tr></table></figure>\n\n<p>For templates you can use the full power of Jinja2 templates. Head over to the official Jinja2 Template Documentation for more information.</p>\n<p>Here is an example template:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Hello from Flask<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">&#123;% if person %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello &#123;&#123; person &#125;&#125;!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% else %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Accessing-Request-Data\"><a href=\"#Accessing-Request-Data\" class=\"headerlink\" title=\"Accessing Request Data\"></a>Accessing Request Data</h4><p>For web applications it’s crucial to react to the data a client sends to the server. In Flask this information is provided by the global <strong>request</strong> object. If you have some experience with Python you might be wondering how that object can be global and how Flask manages to still be threadsafe. The answer is context locals:</p>\n<p>So what does this mean to you? Basically you can completely ignore that this is the case unless you are doing something like unit testing. You will notice that code which depends on a request object will suddenly break because there is no request object. The solution is creating a request object yourself and binding it to the context. The easiest solution for unit testing is to use the <strong>test_request_context()</strong> context manager. In combination with the with statement it will bind a test request so that you can interact with it. Here is an example:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> app.test_request_context(<span class=\"string\">&#x27;/hello&#x27;</span>, method=<span class=\"string\">&#x27;POST&#x27;</span>):</span><br><span class=\"line\">    <span class=\"comment\"># now you can do something with the request until the</span></span><br><span class=\"line\">    <span class=\"comment\"># end of the with block, such as basic assertions:</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> request.path == <span class=\"string\">&#x27;/hello&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span></span><br></pre></td></tr></table></figure>"},{"title":"Cache","date":"2024-12-22T04:42:02.000Z","comments":1,"description":"Retail Cache","_content":"\nPOS 前后端通信通常需要使用 `extension properties`；`extension properties` 存在于 **Cart**、**CartLine**、**SalesTransaction** 和 **SalesLine** 等；但某些场景，无法编辑 `extension properties`，所以无法通信；可以按照以下 **Cache** 构建新的通信机制；（谨慎使用，影响性能）\n\n{% asset_img \"commerce-cache-example.png\" \"cache example\" %}\n\n### Cache.cs 代码示例\n\n```c#\nusing Microsoft.Extensions.Caching.Memory;\nusing System;\n\nnamespace LMS.Cache\n{\n    public class LMSCache\n    {\n        private static readonly Lazy<MemoryCache> lazy = new Lazy<MemoryCache>(()\n            => new MemoryCache(new MemoryCacheOptions()));\n        private static MemoryCache cache\n        {\n            get\n            {\n                return lazy.Value;\n            }\n        }\n\n        public T Get<T>(string key)\n        {\n            if (!cache.TryGetValue<T>(key, out T cacheItem))\n            {\n                return default;\n            }\n            else\n            {\n                return cacheItem;\n            }\n        }\n\n        public void Put<T>(string key, T value, int cacheLifeInSeconds = 500)\n        {\n            if (value == null)\n            {\n                if (cache.Get(key) != null)\n                {\n                    cache.Remove(key);\n                }\n            }\n            else\n            {\n                cache.Set<T>(key, value, DateTimeOffset.Now.AddSeconds(cacheLifeInSeconds));\n            }\n        }\n    }\n}\n```\n\n### 使用示例\n\n```c#\n(new LMSCache()).Get<string>(key); // Get the value by key\n(new LMSCache()).Put<string, string>(key, value); // Put the key value mapping\n```","source":"_posts/commerce-cache.md","raw":"---\ntitle: Cache\ndate: 2024-12-22 12:42:02\ncategories: \n - d365\n - x++\ntags:\ncomments: true\ndescription: Retail Cache\n---\n\nPOS 前后端通信通常需要使用 `extension properties`；`extension properties` 存在于 **Cart**、**CartLine**、**SalesTransaction** 和 **SalesLine** 等；但某些场景，无法编辑 `extension properties`，所以无法通信；可以按照以下 **Cache** 构建新的通信机制；（谨慎使用，影响性能）\n\n{% asset_img \"commerce-cache-example.png\" \"cache example\" %}\n\n### Cache.cs 代码示例\n\n```c#\nusing Microsoft.Extensions.Caching.Memory;\nusing System;\n\nnamespace LMS.Cache\n{\n    public class LMSCache\n    {\n        private static readonly Lazy<MemoryCache> lazy = new Lazy<MemoryCache>(()\n            => new MemoryCache(new MemoryCacheOptions()));\n        private static MemoryCache cache\n        {\n            get\n            {\n                return lazy.Value;\n            }\n        }\n\n        public T Get<T>(string key)\n        {\n            if (!cache.TryGetValue<T>(key, out T cacheItem))\n            {\n                return default;\n            }\n            else\n            {\n                return cacheItem;\n            }\n        }\n\n        public void Put<T>(string key, T value, int cacheLifeInSeconds = 500)\n        {\n            if (value == null)\n            {\n                if (cache.Get(key) != null)\n                {\n                    cache.Remove(key);\n                }\n            }\n            else\n            {\n                cache.Set<T>(key, value, DateTimeOffset.Now.AddSeconds(cacheLifeInSeconds));\n            }\n        }\n    }\n}\n```\n\n### 使用示例\n\n```c#\n(new LMSCache()).Get<string>(key); // Get the value by key\n(new LMSCache()).Put<string, string>(key, value); // Put the key value mapping\n```","slug":"commerce-cache","published":1,"updated":"2025-02-23T13:09:09.318Z","layout":"post","photos":[],"_id":"cm7j2rscb0006qgugazuob9dr","content":"<p>POS 前后端通信通常需要使用 <code>extension properties</code>；<code>extension properties</code> 存在于 <strong>Cart</strong>、<strong>CartLine</strong>、<strong>SalesTransaction</strong> 和 <strong>SalesLine</strong> 等；但某些场景，无法编辑 <code>extension properties</code>，所以无法通信；可以按照以下 <strong>Cache</strong> 构建新的通信机制；（谨慎使用，影响性能）</p>\n<img src=\"/2024/12/22/commerce-cache/commerce-cache-example.png\" class=\"\" title=\"cache example\">\n\n<h3 id=\"Cache-cs-代码示例\"><a href=\"#Cache-cs-代码示例\" class=\"headerlink\" title=\"Cache.cs 代码示例\"></a>Cache.cs 代码示例</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.Extensions.Caching.Memory;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">LMS.Cache</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LMSCache</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> Lazy&lt;MemoryCache&gt; lazy = <span class=\"keyword\">new</span> Lazy&lt;MemoryCache&gt;(()</span><br><span class=\"line\">            =&gt; <span class=\"keyword\">new</span> MemoryCache(<span class=\"keyword\">new</span> MemoryCacheOptions()));</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> MemoryCache cache</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> lazy.Value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">Get</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!cache.TryGetValue&lt;T&gt;(key, <span class=\"keyword\">out</span> T cacheItem))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">default</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cacheItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Put</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> key, T <span class=\"keyword\">value</span>, <span class=\"built_in\">int</span> cacheLifeInSeconds = <span class=\"number\">500</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cache.Get(key) != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    cache.Remove(key);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cache.Set&lt;T&gt;(key, <span class=\"keyword\">value</span>, DateTimeOffset.Now.AddSeconds(cacheLifeInSeconds));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">new</span> LMSCache()).Get&lt;<span class=\"built_in\">string</span>&gt;(key); <span class=\"comment\">// Get the value by key</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> LMSCache()).Put&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;(key, <span class=\"keyword\">value</span>); <span class=\"comment\">// Put the key value mapping</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>POS 前后端通信通常需要使用 <code>extension properties</code>；<code>extension properties</code> 存在于 <strong>Cart</strong>、<strong>CartLine</strong>、<strong>SalesTransaction</strong> 和 <strong>SalesLine</strong> 等；但某些场景，无法编辑 <code>extension properties</code>，所以无法通信；可以按照以下 <strong>Cache</strong> 构建新的通信机制；（谨慎使用，影响性能）</p>\n<img src=\"/2024/12/22/commerce-cache/commerce-cache-example.png\" class=\"\" title=\"cache example\">\n\n<h3 id=\"Cache-cs-代码示例\"><a href=\"#Cache-cs-代码示例\" class=\"headerlink\" title=\"Cache.cs 代码示例\"></a>Cache.cs 代码示例</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.Extensions.Caching.Memory;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">LMS.Cache</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">LMSCache</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> Lazy&lt;MemoryCache&gt; lazy = <span class=\"keyword\">new</span> Lazy&lt;MemoryCache&gt;(()</span><br><span class=\"line\">            =&gt; <span class=\"keyword\">new</span> MemoryCache(<span class=\"keyword\">new</span> MemoryCacheOptions()));</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> MemoryCache cache</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> lazy.Value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> T <span class=\"title\">Get</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> key</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!cache.TryGetValue&lt;T&gt;(key, <span class=\"keyword\">out</span> T cacheItem))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">default</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> cacheItem;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Put</span>&lt;<span class=\"title\">T</span>&gt;(<span class=\"params\"><span class=\"built_in\">string</span> key, T <span class=\"keyword\">value</span>, <span class=\"built_in\">int</span> cacheLifeInSeconds = <span class=\"number\">500</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">value</span> == <span class=\"literal\">null</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cache.Get(key) != <span class=\"literal\">null</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    cache.Remove(key);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cache.Set&lt;T&gt;(key, <span class=\"keyword\">value</span>, DateTimeOffset.Now.AddSeconds(cacheLifeInSeconds));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">new</span> LMSCache()).Get&lt;<span class=\"built_in\">string</span>&gt;(key); <span class=\"comment\">// Get the value by key</span></span><br><span class=\"line\">(<span class=\"keyword\">new</span> LMSCache()).Put&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;(key, <span class=\"keyword\">value</span>); <span class=\"comment\">// Put the key value mapping</span></span><br></pre></td></tr></table></figure>"},{"title":"How to print the amount based on the Language Id","date":"2024-12-23T06:56:52.000Z","comments":1,"_content":"\n### How to get the Language Id\n\n```c#\nstring languageText = string.Empty;\n\nif (request.RequestContext.LanguageId != null && request.RequestContext.LanguageId != \"\") // Get the LanguageId from request context\n{\n    languageText = request.RequestContext.LanguageId;\n}\nelse\n{\n    languageText = \"en-us\";\n}\n\nCultureInfo culture = new CultureInfo(languageText); // Get the culture based on LanguageId\n```\n\n### Format the amount based on culture\n\nThe `decimal.ToString()` included two parameters, for example:\n\n```c#\ndl.EffectiveAmount.ToString(\"C2\", culture); // The first parameter means the currency code should be something, the second parameter means the amount value should be format based on some culture rules.​\n```","source":"_posts/commerce-use-languageId.md","raw":"---\ntitle: How to print the amount based on the Language Id\ndate: 2024-12-23 14:56:52\ncategories: \n - Retail Commerce\ntags:\n - Retail Commerce\ncomments: true\n---\n\n### How to get the Language Id\n\n```c#\nstring languageText = string.Empty;\n\nif (request.RequestContext.LanguageId != null && request.RequestContext.LanguageId != \"\") // Get the LanguageId from request context\n{\n    languageText = request.RequestContext.LanguageId;\n}\nelse\n{\n    languageText = \"en-us\";\n}\n\nCultureInfo culture = new CultureInfo(languageText); // Get the culture based on LanguageId\n```\n\n### Format the amount based on culture\n\nThe `decimal.ToString()` included two parameters, for example:\n\n```c#\ndl.EffectiveAmount.ToString(\"C2\", culture); // The first parameter means the currency code should be something, the second parameter means the amount value should be format based on some culture rules.​\n```","slug":"commerce-use-languageId","published":1,"updated":"2025-01-18T15:19:18.391Z","layout":"post","photos":[],"_id":"cm7j2rscc0008qgugbk0ncdeu","content":"<h3 id=\"How-to-get-the-Language-Id\"><a href=\"#How-to-get-the-Language-Id\" class=\"headerlink\" title=\"How to get the Language Id\"></a>How to get the Language Id</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span> languageText = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (request.RequestContext.LanguageId != <span class=\"literal\">null</span> &amp;&amp; request.RequestContext.LanguageId != <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// Get the LanguageId from request context</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    languageText = request.RequestContext.LanguageId;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    languageText = <span class=\"string\">&quot;en-us&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">CultureInfo culture = <span class=\"keyword\">new</span> CultureInfo(languageText); <span class=\"comment\">// Get the culture based on LanguageId</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Format-the-amount-based-on-culture\"><a href=\"#Format-the-amount-based-on-culture\" class=\"headerlink\" title=\"Format the amount based on culture\"></a>Format the amount based on culture</h3><p>The <code>decimal.ToString()</code> included two parameters, for example:</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dl.EffectiveAmount.ToString(<span class=\"string\">&quot;C2&quot;</span>, culture); <span class=\"comment\">// The first parameter means the currency code should be something, the second parameter means the amount value should be format based on some culture rules.​</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"How-to-get-the-Language-Id\"><a href=\"#How-to-get-the-Language-Id\" class=\"headerlink\" title=\"How to get the Language Id\"></a>How to get the Language Id</h3><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span> languageText = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (request.RequestContext.LanguageId != <span class=\"literal\">null</span> &amp;&amp; request.RequestContext.LanguageId != <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// Get the LanguageId from request context</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    languageText = request.RequestContext.LanguageId;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    languageText = <span class=\"string\">&quot;en-us&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">CultureInfo culture = <span class=\"keyword\">new</span> CultureInfo(languageText); <span class=\"comment\">// Get the culture based on LanguageId</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Format-the-amount-based-on-culture\"><a href=\"#Format-the-amount-based-on-culture\" class=\"headerlink\" title=\"Format the amount based on culture\"></a>Format the amount based on culture</h3><p>The <code>decimal.ToString()</code> included two parameters, for example:</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dl.EffectiveAmount.ToString(<span class=\"string\">&quot;C2&quot;</span>, culture); <span class=\"comment\">// The first parameter means the currency code should be something, the second parameter means the amount value should be format based on some culture rules.​</span></span><br></pre></td></tr></table></figure>"},{"title":"Flask Tutorial 1","comments":1,"date":"2025-01-08T11:23:28.000Z","description":"Flask Tutorial","_content":"\n\n# Flask Tutorial\n\n## Project Layout\n\n创建一个项目文件夹然后打开。\n\n```powershell\nmkdir flask-tutorial # 创建 flask 项目文件夹\ncd flask-tutorial\n```\n\n按照 [Flask Overview](https://1yaowei0.github.io/2025/01/07/ai-plateform-flask/) 设置项目目录。\n\n***\n\n一个大的**flask**项目，不可以将所有的代码放到一个文件。**Python**项目使用*package*将代码组织成多个模块，这些模块可以在需要的地方导入。\n\n这个项目应该包含：\n\n- `flaskr/`, 一个包含应用代码和文件的 python 包；\n- `tests/`, 一个包含测试模块的目录；\n- `.venv/`, 一个包含 flask 和其它已安装依赖的虚拟环境；\n- 一个告诉 python 如何安装项目的安装文件；\n- 版本控制配置，如 git。无论项目大小，你都应该养成对所有项目使用某种版本控制的习惯；\n- 如何可能在未来添加到项目的文件。\n\n最后，一个项目的结构应该如下：\n\n```txt\n/home/user/Projects/flask-tutorial\n├── flaskr/\n│   ├── __init__.py\n│   ├── db.py\n│   ├── schema.sql\n│   ├── auth.py\n│   ├── blog.py\n│   ├── templates/\n│   │   ├── base.html\n│   │   ├── auth/\n│   │   │   ├── login.html\n│   │   │   └── register.html\n│   │   └── blog/\n│   │       ├── create.html\n│   │       ├── index.html\n│   │       └── update.html\n│   └── static/\n│       └── style.css\n├── tests/\n│   ├── conftest.py\n│   ├── data.sql\n│   ├── test_factory.py\n│   ├── test_db.py\n│   ├── test_auth.py\n│   └── test_blog.py\n├── .venv/\n├── pyproject.toml\n└── MANIFEST.in\n```\n\n如果使用版本控制，可以如下设置。下列被指定的路径将会被版本控制忽略，即使它在项目的开发过程中被修改。\n\n```txt\n.gitignore\n.venv/\n\n*.pyc\n__pycache__/\n\ninstance/\n\n.pytest_cache/\n.coverage\nhtmlcov/\n\ndist/\nbuild/\n*.egg-info/\n```\n\n## Application Setup\n\n一个 Flask 应用是一个 Flask 类的实例。任何与该应用相关的配置，URLs 都会在这个类中被注册。\n\n创建 Flask 引用的最直截了当的方式是在你代码的目录顶部创建一个全局的 Flask 实例。\n\n你将在一个函数中创建它，而不是全局地创建 Flask 的引用（实例）。这个函数称为 *应用工厂*。任何配置，注册和其它应用所需的设置都需要在这个函数中发生，然后返回该应用。\n\n### The Application Factory\n\n在 flaskr 目录下添加 `__init__.py` 文件，它有双重的职责，它将包含应用工厂，以及它告诉 python 这个 flaskr 目录应该被当作一个包。\n\n```py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config = None):\n    # Create and configue the app\n    app = Flask(__name__, instance_relative_config = True)\n    app.config.from_mapping(\n        SECRET_KEY = 'dev',\n        DATABASE = os.path.join(app.instance_path, 'flaskr.sqlite')\n    )\n\n    if test_config is None:\n        # Load the instance config, if it exists, when not testing\n        app.config.from_pyfile('config.py', silent = True)\n    else:\n        # Load the test config if passed in\n        app.config.from_mapping(test_config)\n\n    # ensure the instance folder exists\n    try:\n        os.makedirs(app.instance_path)\n    except OSError:\n        pass\n\n    # a simple page that says hello\n    @app.route('/hello')\n    def hello():\n        return 'Hello, World!'\n    \n    return app\n```\n\n`create_app` 是一个应用工厂函数。你将在教程后面添加它，但它已经做了很多事儿。\n\n1. `app = Flask(__name__, instance_relative_config = True)` 创建了 Flask 实例。\n    - `__name__` 是当前 python 模块的名字。这个 app 需要知道它的位置来设置一些路径。并且 `__name__` 是一种很方便告诉它的方式；\n    - `instance_relative_config` 告诉 app 配置文件是相对于实例文件夹的。实例文件夹位于flaskr包之外，可以保存不应该提交给版本控制的本地数据，例如配置秘密和数据库文件。\n\n2. `app.config.from_mapping()` 设置了 app 的一些默认配置：\n    - `SECRET_KEY` 被用来保证数据安全。它被设置为‘dev’，以便在开发期间提供一个方便的值，但在部署时应该使用随机值覆盖它；\n    - `DATABASE` 是 SQLite 数据库将被保存的位置。它在 `app.instance_path` 之下，这是Flask为实例文件夹选择的路径。\n\n3. `app.config.from_pyfile()` 使用从实例文件夹中的config.py文件（如果存在）获取的值覆盖默认配置。例如，在部署时，可以使用它来设置一个真正的SECRET_KEY。\n    - `Test_config` 也可以传递给工厂，并代替实例配置使用。\n\n4. `os.makedir` 确保 `app.instance_path` 存在，Flask 不会自动创建实例文件夹，但是它需要被创建因为当前的项目将创建数据库文件。\n\n5. `app.route` 创建了一个简单的路由，在深入后面教程之前我们可以看见应用是工作的。它创建了一个在 URL 和返回了响应的应用之间的连接。\n\n## Run The Application\n\n现在可以使用flask命令运行应用程序了。在终端中，告诉Flask在哪里可以找到您的应用程序，然后在调试模式下运行它。记住，您仍然应该在顶层的flask-tutorial目录中，而不是在flask包中。\n\n调试模式在页面引发异常时显示交互式调试器，并在更改代码时重新启动服务器。您可以让它继续运行，只要按照本教程重新加载浏览器页面即可。\n\n```powershell\nflask --app flaskr run --debug\n\n* Serving Flask app \"flaskr\"\n* Debug mode: on\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n* Restarting with stat\n* Debugger is active!\n* Debugger PIN: nnn-nnn-nnn\n```\n\n## Define and Access the Database\n\nSQLite 很方便因为它不需要设置一个独立的数据库服务，它是在 python 中编译的。但是，如果并发请求试图同时写入数据库，它们将会变慢，因为每次写入都是顺序进行的。小型应用程序不会注意到这一点。当您的企业规模扩大后，您可能希望切换到不同的数据库。\n\n### Connect to the Database\n\n使用 SQLite 数据库（以及大多数其他Python数据库库）时要做的第一件事是创建到它的连接。任何查询和操作都使用连接执行，该连接在工作完成后关闭。\n\n在 web 应用程序中，这种连接通常与请求绑定在一起。它是在处理请求时创建的，并在发送响应之前关闭。\n\n> flaskr/db.py\n\n```py\nimport sqlite3\nfrom datetime import datetime\n\nimport click\nfrom flask import current_app, g\n\n\ndef get_db():\n    if 'db' not in g:\n        g.db = sqlite3.connect(\n            current_app.config['DATABASE'],\n            detect_types=sqlite3.PARSE_DECLTYPES\n        )\n        g.db.row_factory = sqlite3.Row\n\n    return g.db\n\n\ndef close_db(e=None):\n    db = g.pop('db', None)\n\n    if db is not None:\n        db.close()\n```\n\n**g** 是一个对于每个请求都唯一的对象。它用于存储在请求期间可能被多个函数访问的数据。如果在同一请求中第二次调用get_db，则存储并重用该连接，而不是创建新连接。\n\n**current_app** 是另一个特殊对象，指向处理请求的Flask应用程序。由于使用了应用程序工厂，因此在编写其余代码时没有应用程序对象。Get_db将在创建应用程序并处理请求时调用，因此可以使用current_app。\n\n**sqlite3.connect()** 建立到DATABASE配置键所指向的文件的连接。这个文件并不一定要存在，直到稍后初始化数据库时才会存在。\n\n**sqlite3.Row** 告诉连接返回行为类似字典的行。这允许按名称访问列。\n\n**close_db** 通过检查是否设置了g.db来检查是否创建了连接。如果连接存在，则关闭该连接。接下来，您将告诉应用程序有关应用程序工厂中的close_db函数，以便在每次请求之后调用它。\n\n### Create the Tables\n\n```sql\nDROP TABLE IF EXISTS user;\nDROP TABLE IF EXISTS post;\n\nCREATE TABLE user (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  username TEXT UNIQUE NOT NULL,\n  password TEXT NOT NULL\n);\n\nCREATE TABLE post (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  author_id INTEGER NOT NULL,\n  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  FOREIGN KEY (author_id) REFERENCES user (id)\n);\n```\n\n往 `db.py` 放入 python 方法用于运行 SQL 命令。\n\n```py\ndef init_db():\n    db = get_db()\n\n    with current_app.open_resource('schema.sql') as f:\n        db.executescript(f.read().decode('utf8'))\n\n@click.command('init-db')\ndef init_db_command():\n    init_db()\n    click.echo('Initialized the database.')\n\nsqlite3.register_converter(\n    \"timestamp\", lambda v: datetime.fromisoformat(v.decode())\n)\n```\n\n`Open_resource（）`打开一个相对于flask包的文件，这很有用，因为在以后部署应用程序时，您不一定知道该位置在哪里。Get_db返回一个数据库连接，用于执行从文件中读取的命令。\n\n`command（）`定义了一个名为init-db的命令行命令，该命令调用init_db函数并向用户显示成功消息。您可以阅读命令行接口来了解更多关于编写命令的信息。\n\n调用`sqlite3.register_converter（）`告诉Python如何解释数据库中的时间戳值。我们将该值转换为datetime.datetime。\n\n### Register with the Application\n\n`close_db`和`init_db_command`函数需要在应用实例中注册；否则，它们将不会被应用程序使用。但是，由于使用的是工厂函数，因此在编写函数时该实例不可用。相反，应该编写一个函数，它接受一个应用程序并进行注册。\n\n```py\ndef init_app(app):\n    app.teardown_appcontext(close_db)\n    app.cli.add_command(init_db_command)\n```\n\n`app.teardown_appcontext（）`告诉Flask在返回响应后进行清理时调用该函数。\n\n`App.cli.add_command（）`添加了一个可以通过flask命令调用的新命令。\n\n从工厂导入并调用这个函数。在返回应用程序之前，将新代码放在工厂函数的末尾。\n\n```py\n    # a simple page that says hello\n    @app.route('/hello/')\n    def hello():\n        return 'Hello, World!'\n```\n\n### Initialize the Database File\n\n现在init-db已经注册到应用程序中，可以使用flask命令调用它，类似于上一页中的run命令。\n\n> 如果您仍在运行上一页中的服务器，您可以停止服务器，或者在新的终端中运行此命令。如果您使用一个新的终端，请记住切换到您的项目目录并激活env，如安装中所述。\n\n运行`init-db`命令：\n\n```powershell\nflask --app flaskr init-db\n```\n\n将会有一个 `flaskr.sqlite` 文件出现在项目的`instance`目录中","source":"_posts/flask-tutorial.md","raw":"---\ntitle: Flask Tutorial 1\ntags:\ncategories:\n - d365\n - x++\ncomments: true\ndate: 2025-01-08 19:23:28\ndescription: Flask Tutorial\n---\n\n\n# Flask Tutorial\n\n## Project Layout\n\n创建一个项目文件夹然后打开。\n\n```powershell\nmkdir flask-tutorial # 创建 flask 项目文件夹\ncd flask-tutorial\n```\n\n按照 [Flask Overview](https://1yaowei0.github.io/2025/01/07/ai-plateform-flask/) 设置项目目录。\n\n***\n\n一个大的**flask**项目，不可以将所有的代码放到一个文件。**Python**项目使用*package*将代码组织成多个模块，这些模块可以在需要的地方导入。\n\n这个项目应该包含：\n\n- `flaskr/`, 一个包含应用代码和文件的 python 包；\n- `tests/`, 一个包含测试模块的目录；\n- `.venv/`, 一个包含 flask 和其它已安装依赖的虚拟环境；\n- 一个告诉 python 如何安装项目的安装文件；\n- 版本控制配置，如 git。无论项目大小，你都应该养成对所有项目使用某种版本控制的习惯；\n- 如何可能在未来添加到项目的文件。\n\n最后，一个项目的结构应该如下：\n\n```txt\n/home/user/Projects/flask-tutorial\n├── flaskr/\n│   ├── __init__.py\n│   ├── db.py\n│   ├── schema.sql\n│   ├── auth.py\n│   ├── blog.py\n│   ├── templates/\n│   │   ├── base.html\n│   │   ├── auth/\n│   │   │   ├── login.html\n│   │   │   └── register.html\n│   │   └── blog/\n│   │       ├── create.html\n│   │       ├── index.html\n│   │       └── update.html\n│   └── static/\n│       └── style.css\n├── tests/\n│   ├── conftest.py\n│   ├── data.sql\n│   ├── test_factory.py\n│   ├── test_db.py\n│   ├── test_auth.py\n│   └── test_blog.py\n├── .venv/\n├── pyproject.toml\n└── MANIFEST.in\n```\n\n如果使用版本控制，可以如下设置。下列被指定的路径将会被版本控制忽略，即使它在项目的开发过程中被修改。\n\n```txt\n.gitignore\n.venv/\n\n*.pyc\n__pycache__/\n\ninstance/\n\n.pytest_cache/\n.coverage\nhtmlcov/\n\ndist/\nbuild/\n*.egg-info/\n```\n\n## Application Setup\n\n一个 Flask 应用是一个 Flask 类的实例。任何与该应用相关的配置，URLs 都会在这个类中被注册。\n\n创建 Flask 引用的最直截了当的方式是在你代码的目录顶部创建一个全局的 Flask 实例。\n\n你将在一个函数中创建它，而不是全局地创建 Flask 的引用（实例）。这个函数称为 *应用工厂*。任何配置，注册和其它应用所需的设置都需要在这个函数中发生，然后返回该应用。\n\n### The Application Factory\n\n在 flaskr 目录下添加 `__init__.py` 文件，它有双重的职责，它将包含应用工厂，以及它告诉 python 这个 flaskr 目录应该被当作一个包。\n\n```py\nimport os\n\nfrom flask import Flask\n\ndef create_app(test_config = None):\n    # Create and configue the app\n    app = Flask(__name__, instance_relative_config = True)\n    app.config.from_mapping(\n        SECRET_KEY = 'dev',\n        DATABASE = os.path.join(app.instance_path, 'flaskr.sqlite')\n    )\n\n    if test_config is None:\n        # Load the instance config, if it exists, when not testing\n        app.config.from_pyfile('config.py', silent = True)\n    else:\n        # Load the test config if passed in\n        app.config.from_mapping(test_config)\n\n    # ensure the instance folder exists\n    try:\n        os.makedirs(app.instance_path)\n    except OSError:\n        pass\n\n    # a simple page that says hello\n    @app.route('/hello')\n    def hello():\n        return 'Hello, World!'\n    \n    return app\n```\n\n`create_app` 是一个应用工厂函数。你将在教程后面添加它，但它已经做了很多事儿。\n\n1. `app = Flask(__name__, instance_relative_config = True)` 创建了 Flask 实例。\n    - `__name__` 是当前 python 模块的名字。这个 app 需要知道它的位置来设置一些路径。并且 `__name__` 是一种很方便告诉它的方式；\n    - `instance_relative_config` 告诉 app 配置文件是相对于实例文件夹的。实例文件夹位于flaskr包之外，可以保存不应该提交给版本控制的本地数据，例如配置秘密和数据库文件。\n\n2. `app.config.from_mapping()` 设置了 app 的一些默认配置：\n    - `SECRET_KEY` 被用来保证数据安全。它被设置为‘dev’，以便在开发期间提供一个方便的值，但在部署时应该使用随机值覆盖它；\n    - `DATABASE` 是 SQLite 数据库将被保存的位置。它在 `app.instance_path` 之下，这是Flask为实例文件夹选择的路径。\n\n3. `app.config.from_pyfile()` 使用从实例文件夹中的config.py文件（如果存在）获取的值覆盖默认配置。例如，在部署时，可以使用它来设置一个真正的SECRET_KEY。\n    - `Test_config` 也可以传递给工厂，并代替实例配置使用。\n\n4. `os.makedir` 确保 `app.instance_path` 存在，Flask 不会自动创建实例文件夹，但是它需要被创建因为当前的项目将创建数据库文件。\n\n5. `app.route` 创建了一个简单的路由，在深入后面教程之前我们可以看见应用是工作的。它创建了一个在 URL 和返回了响应的应用之间的连接。\n\n## Run The Application\n\n现在可以使用flask命令运行应用程序了。在终端中，告诉Flask在哪里可以找到您的应用程序，然后在调试模式下运行它。记住，您仍然应该在顶层的flask-tutorial目录中，而不是在flask包中。\n\n调试模式在页面引发异常时显示交互式调试器，并在更改代码时重新启动服务器。您可以让它继续运行，只要按照本教程重新加载浏览器页面即可。\n\n```powershell\nflask --app flaskr run --debug\n\n* Serving Flask app \"flaskr\"\n* Debug mode: on\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n* Restarting with stat\n* Debugger is active!\n* Debugger PIN: nnn-nnn-nnn\n```\n\n## Define and Access the Database\n\nSQLite 很方便因为它不需要设置一个独立的数据库服务，它是在 python 中编译的。但是，如果并发请求试图同时写入数据库，它们将会变慢，因为每次写入都是顺序进行的。小型应用程序不会注意到这一点。当您的企业规模扩大后，您可能希望切换到不同的数据库。\n\n### Connect to the Database\n\n使用 SQLite 数据库（以及大多数其他Python数据库库）时要做的第一件事是创建到它的连接。任何查询和操作都使用连接执行，该连接在工作完成后关闭。\n\n在 web 应用程序中，这种连接通常与请求绑定在一起。它是在处理请求时创建的，并在发送响应之前关闭。\n\n> flaskr/db.py\n\n```py\nimport sqlite3\nfrom datetime import datetime\n\nimport click\nfrom flask import current_app, g\n\n\ndef get_db():\n    if 'db' not in g:\n        g.db = sqlite3.connect(\n            current_app.config['DATABASE'],\n            detect_types=sqlite3.PARSE_DECLTYPES\n        )\n        g.db.row_factory = sqlite3.Row\n\n    return g.db\n\n\ndef close_db(e=None):\n    db = g.pop('db', None)\n\n    if db is not None:\n        db.close()\n```\n\n**g** 是一个对于每个请求都唯一的对象。它用于存储在请求期间可能被多个函数访问的数据。如果在同一请求中第二次调用get_db，则存储并重用该连接，而不是创建新连接。\n\n**current_app** 是另一个特殊对象，指向处理请求的Flask应用程序。由于使用了应用程序工厂，因此在编写其余代码时没有应用程序对象。Get_db将在创建应用程序并处理请求时调用，因此可以使用current_app。\n\n**sqlite3.connect()** 建立到DATABASE配置键所指向的文件的连接。这个文件并不一定要存在，直到稍后初始化数据库时才会存在。\n\n**sqlite3.Row** 告诉连接返回行为类似字典的行。这允许按名称访问列。\n\n**close_db** 通过检查是否设置了g.db来检查是否创建了连接。如果连接存在，则关闭该连接。接下来，您将告诉应用程序有关应用程序工厂中的close_db函数，以便在每次请求之后调用它。\n\n### Create the Tables\n\n```sql\nDROP TABLE IF EXISTS user;\nDROP TABLE IF EXISTS post;\n\nCREATE TABLE user (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  username TEXT UNIQUE NOT NULL,\n  password TEXT NOT NULL\n);\n\nCREATE TABLE post (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  author_id INTEGER NOT NULL,\n  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  title TEXT NOT NULL,\n  body TEXT NOT NULL,\n  FOREIGN KEY (author_id) REFERENCES user (id)\n);\n```\n\n往 `db.py` 放入 python 方法用于运行 SQL 命令。\n\n```py\ndef init_db():\n    db = get_db()\n\n    with current_app.open_resource('schema.sql') as f:\n        db.executescript(f.read().decode('utf8'))\n\n@click.command('init-db')\ndef init_db_command():\n    init_db()\n    click.echo('Initialized the database.')\n\nsqlite3.register_converter(\n    \"timestamp\", lambda v: datetime.fromisoformat(v.decode())\n)\n```\n\n`Open_resource（）`打开一个相对于flask包的文件，这很有用，因为在以后部署应用程序时，您不一定知道该位置在哪里。Get_db返回一个数据库连接，用于执行从文件中读取的命令。\n\n`command（）`定义了一个名为init-db的命令行命令，该命令调用init_db函数并向用户显示成功消息。您可以阅读命令行接口来了解更多关于编写命令的信息。\n\n调用`sqlite3.register_converter（）`告诉Python如何解释数据库中的时间戳值。我们将该值转换为datetime.datetime。\n\n### Register with the Application\n\n`close_db`和`init_db_command`函数需要在应用实例中注册；否则，它们将不会被应用程序使用。但是，由于使用的是工厂函数，因此在编写函数时该实例不可用。相反，应该编写一个函数，它接受一个应用程序并进行注册。\n\n```py\ndef init_app(app):\n    app.teardown_appcontext(close_db)\n    app.cli.add_command(init_db_command)\n```\n\n`app.teardown_appcontext（）`告诉Flask在返回响应后进行清理时调用该函数。\n\n`App.cli.add_command（）`添加了一个可以通过flask命令调用的新命令。\n\n从工厂导入并调用这个函数。在返回应用程序之前，将新代码放在工厂函数的末尾。\n\n```py\n    # a simple page that says hello\n    @app.route('/hello/')\n    def hello():\n        return 'Hello, World!'\n```\n\n### Initialize the Database File\n\n现在init-db已经注册到应用程序中，可以使用flask命令调用它，类似于上一页中的run命令。\n\n> 如果您仍在运行上一页中的服务器，您可以停止服务器，或者在新的终端中运行此命令。如果您使用一个新的终端，请记住切换到您的项目目录并激活env，如安装中所述。\n\n运行`init-db`命令：\n\n```powershell\nflask --app flaskr init-db\n```\n\n将会有一个 `flaskr.sqlite` 文件出现在项目的`instance`目录中","slug":"flask-tutorial","published":1,"updated":"2025-02-23T13:06:28.079Z","layout":"post","photos":[],"_id":"cm7j2rscc0009qgug7zpe554m","content":"<h1 id=\"Flask-Tutorial\"><a href=\"#Flask-Tutorial\" class=\"headerlink\" title=\"Flask Tutorial\"></a>Flask Tutorial</h1><h2 id=\"Project-Layout\"><a href=\"#Project-Layout\" class=\"headerlink\" title=\"Project Layout\"></a>Project Layout</h2><p>创建一个项目文件夹然后打开。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir flask<span class=\"literal\">-tutorial</span> <span class=\"comment\"># 创建 flask 项目文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> flask<span class=\"literal\">-tutorial</span></span><br></pre></td></tr></table></figure>\n\n<p>按照 <a href=\"https://1yaowei0.github.io/2025/01/07/ai-plateform-flask/\">Flask Overview</a> 设置项目目录。</p>\n<hr>\n<p>一个大的<strong>flask</strong>项目，不可以将所有的代码放到一个文件。<strong>Python</strong>项目使用<em>package</em>将代码组织成多个模块，这些模块可以在需要的地方导入。</p>\n<p>这个项目应该包含：</p>\n<ul>\n<li><code>flaskr/</code>, 一个包含应用代码和文件的 python 包；</li>\n<li><code>tests/</code>, 一个包含测试模块的目录；</li>\n<li><code>.venv/</code>, 一个包含 flask 和其它已安装依赖的虚拟环境；</li>\n<li>一个告诉 python 如何安装项目的安装文件；</li>\n<li>版本控制配置，如 git。无论项目大小，你都应该养成对所有项目使用某种版本控制的习惯；</li>\n<li>如何可能在未来添加到项目的文件。</li>\n</ul>\n<p>最后，一个项目的结构应该如下：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/user/Projects/flask-tutorial</span><br><span class=\"line\">├── flaskr/</span><br><span class=\"line\">│   ├── __init__.py</span><br><span class=\"line\">│   ├── db.py</span><br><span class=\"line\">│   ├── schema.sql</span><br><span class=\"line\">│   ├── auth.py</span><br><span class=\"line\">│   ├── blog.py</span><br><span class=\"line\">│   ├── templates/</span><br><span class=\"line\">│   │   ├── base.html</span><br><span class=\"line\">│   │   ├── auth/</span><br><span class=\"line\">│   │   │   ├── login.html</span><br><span class=\"line\">│   │   │   └── register.html</span><br><span class=\"line\">│   │   └── blog/</span><br><span class=\"line\">│   │       ├── create.html</span><br><span class=\"line\">│   │       ├── index.html</span><br><span class=\"line\">│   │       └── update.html</span><br><span class=\"line\">│   └── static/</span><br><span class=\"line\">│       └── style.css</span><br><span class=\"line\">├── tests/</span><br><span class=\"line\">│   ├── conftest.py</span><br><span class=\"line\">│   ├── data.sql</span><br><span class=\"line\">│   ├── test_factory.py</span><br><span class=\"line\">│   ├── test_db.py</span><br><span class=\"line\">│   ├── test_auth.py</span><br><span class=\"line\">│   └── test_blog.py</span><br><span class=\"line\">├── .venv/</span><br><span class=\"line\">├── pyproject.toml</span><br><span class=\"line\">└── MANIFEST.in</span><br></pre></td></tr></table></figure>\n\n<p>如果使用版本控制，可以如下设置。下列被指定的路径将会被版本控制忽略，即使它在项目的开发过程中被修改。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitignore</span><br><span class=\"line\">.venv/</span><br><span class=\"line\"></span><br><span class=\"line\">*.pyc</span><br><span class=\"line\">__pycache__/</span><br><span class=\"line\"></span><br><span class=\"line\">instance/</span><br><span class=\"line\"></span><br><span class=\"line\">.pytest_cache/</span><br><span class=\"line\">.coverage</span><br><span class=\"line\">htmlcov/</span><br><span class=\"line\"></span><br><span class=\"line\">dist/</span><br><span class=\"line\">build/</span><br><span class=\"line\">*.egg-info/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Application-Setup\"><a href=\"#Application-Setup\" class=\"headerlink\" title=\"Application Setup\"></a>Application Setup</h2><p>一个 Flask 应用是一个 Flask 类的实例。任何与该应用相关的配置，URLs 都会在这个类中被注册。</p>\n<p>创建 Flask 引用的最直截了当的方式是在你代码的目录顶部创建一个全局的 Flask 实例。</p>\n<p>你将在一个函数中创建它，而不是全局地创建 Flask 的引用（实例）。这个函数称为 <em>应用工厂</em>。任何配置，注册和其它应用所需的设置都需要在这个函数中发生，然后返回该应用。</p>\n<h3 id=\"The-Application-Factory\"><a href=\"#The-Application-Factory\" class=\"headerlink\" title=\"The Application Factory\"></a>The Application Factory</h3><p>在 flaskr 目录下添加 <code>__init__.py</code> 文件，它有双重的职责，它将包含应用工厂，以及它告诉 python 这个 flaskr 目录应该被当作一个包。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config = <span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># Create and configue the app</span></span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config = <span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;dev&#x27;</span>,</span><br><span class=\"line\">        DATABASE = os.path.join(app.instance_path, <span class=\"string\">&#x27;flaskr.sqlite&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> test_config <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Load the instance config, if it exists, when not testing</span></span><br><span class=\"line\">        app.config.from_pyfile(<span class=\"string\">&#x27;config.py&#x27;</span>, silent = <span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Load the test config if passed in</span></span><br><span class=\"line\">        app.config.from_mapping(test_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ensure the instance folder exists</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        os.makedirs(app.instance_path)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> OSError:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># a simple page that says hello</span></span><br><span class=\"line\"><span class=\"meta\">    @app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello&#x27;</span></span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<p><code>create_app</code> 是一个应用工厂函数。你将在教程后面添加它，但它已经做了很多事儿。</p>\n<ol>\n<li><p><code>app = Flask(__name__, instance_relative_config = True)</code> 创建了 Flask 实例。</p>\n<ul>\n<li><code>__name__</code> 是当前 python 模块的名字。这个 app 需要知道它的位置来设置一些路径。并且 <code>__name__</code> 是一种很方便告诉它的方式；</li>\n<li><code>instance_relative_config</code> 告诉 app 配置文件是相对于实例文件夹的。实例文件夹位于flaskr包之外，可以保存不应该提交给版本控制的本地数据，例如配置秘密和数据库文件。</li>\n</ul>\n</li>\n<li><p><code>app.config.from_mapping()</code> 设置了 app 的一些默认配置：</p>\n<ul>\n<li><code>SECRET_KEY</code> 被用来保证数据安全。它被设置为‘dev’，以便在开发期间提供一个方便的值，但在部署时应该使用随机值覆盖它；</li>\n<li><code>DATABASE</code> 是 SQLite 数据库将被保存的位置。它在 <code>app.instance_path</code> 之下，这是Flask为实例文件夹选择的路径。</li>\n</ul>\n</li>\n<li><p><code>app.config.from_pyfile()</code> 使用从实例文件夹中的config.py文件（如果存在）获取的值覆盖默认配置。例如，在部署时，可以使用它来设置一个真正的SECRET_KEY。</p>\n<ul>\n<li><code>Test_config</code> 也可以传递给工厂，并代替实例配置使用。</li>\n</ul>\n</li>\n<li><p><code>os.makedir</code> 确保 <code>app.instance_path</code> 存在，Flask 不会自动创建实例文件夹，但是它需要被创建因为当前的项目将创建数据库文件。</p>\n</li>\n<li><p><code>app.route</code> 创建了一个简单的路由，在深入后面教程之前我们可以看见应用是工作的。它创建了一个在 URL 和返回了响应的应用之间的连接。</p>\n</li>\n</ol>\n<h2 id=\"Run-The-Application\"><a href=\"#Run-The-Application\" class=\"headerlink\" title=\"Run The Application\"></a>Run The Application</h2><p>现在可以使用flask命令运行应用程序了。在终端中，告诉Flask在哪里可以找到您的应用程序，然后在调试模式下运行它。记住，您仍然应该在顶层的flask-tutorial目录中，而不是在flask包中。</p>\n<p>调试模式在页面引发异常时显示交互式调试器，并在更改代码时重新启动服务器。您可以让它继续运行，只要按照本教程重新加载浏览器页面即可。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> flaskr run <span class=\"literal\">--debug</span></span><br><span class=\"line\"></span><br><span class=\"line\">* Serving Flask app <span class=\"string\">&quot;flaskr&quot;</span></span><br><span class=\"line\">* Debug mode: on</span><br><span class=\"line\">* Running on http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">5000</span>/ (Press CTRL+C to quit)</span><br><span class=\"line\">* Restarting with stat</span><br><span class=\"line\">* Debugger is active!</span><br><span class=\"line\">* Debugger PIN: nnn<span class=\"literal\">-nnn-nnn</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Define-and-Access-the-Database\"><a href=\"#Define-and-Access-the-Database\" class=\"headerlink\" title=\"Define and Access the Database\"></a>Define and Access the Database</h2><p>SQLite 很方便因为它不需要设置一个独立的数据库服务，它是在 python 中编译的。但是，如果并发请求试图同时写入数据库，它们将会变慢，因为每次写入都是顺序进行的。小型应用程序不会注意到这一点。当您的企业规模扩大后，您可能希望切换到不同的数据库。</p>\n<h3 id=\"Connect-to-the-Database\"><a href=\"#Connect-to-the-Database\" class=\"headerlink\" title=\"Connect to the Database\"></a>Connect to the Database</h3><p>使用 SQLite 数据库（以及大多数其他Python数据库库）时要做的第一件事是创建到它的连接。任何查询和操作都使用连接执行，该连接在工作完成后关闭。</p>\n<p>在 web 应用程序中，这种连接通常与请求绑定在一起。它是在处理请求时创建的，并在发送响应之前关闭。</p>\n<blockquote>\n<p>flaskr&#x2F;db.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sqlite3</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> click</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> current_app, g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_db</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;db&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> g:</span><br><span class=\"line\">        g.db = sqlite3.connect(</span><br><span class=\"line\">            current_app.config[<span class=\"string\">&#x27;DATABASE&#x27;</span>],</span><br><span class=\"line\">            detect_types=sqlite3.PARSE_DECLTYPES</span><br><span class=\"line\">        )</span><br><span class=\"line\">        g.db.row_factory = sqlite3.Row</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> g.db</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">close_db</span>(<span class=\"params\">e=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    db = g.pop(<span class=\"string\">&#x27;db&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> db <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        db.close()</span><br></pre></td></tr></table></figure>\n\n<p><strong>g</strong> 是一个对于每个请求都唯一的对象。它用于存储在请求期间可能被多个函数访问的数据。如果在同一请求中第二次调用get_db，则存储并重用该连接，而不是创建新连接。</p>\n<p><strong>current_app</strong> 是另一个特殊对象，指向处理请求的Flask应用程序。由于使用了应用程序工厂，因此在编写其余代码时没有应用程序对象。Get_db将在创建应用程序并处理请求时调用，因此可以使用current_app。</p>\n<p><strong>sqlite3.connect()</strong> 建立到DATABASE配置键所指向的文件的连接。这个文件并不一定要存在，直到稍后初始化数据库时才会存在。</p>\n<p><strong>sqlite3.Row</strong> 告诉连接返回行为类似字典的行。这允许按名称访问列。</p>\n<p><strong>close_db</strong> 通过检查是否设置了g.db来检查是否创建了连接。如果连接存在，则关闭该连接。接下来，您将告诉应用程序有关应用程序工厂中的close_db函数，以便在每次请求之后调用它。</p>\n<h3 id=\"Create-the-Tables\"><a href=\"#Create-the-Tables\" class=\"headerlink\" title=\"Create the Tables\"></a>Create the Tables</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> post;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">  id <span class=\"type\">INTEGER</span> <span class=\"keyword\">PRIMARY KEY</span> AUTOINCREMENT,</span><br><span class=\"line\">  username TEXT <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  password TEXT <span class=\"keyword\">NOT NULL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> post (</span><br><span class=\"line\">  id <span class=\"type\">INTEGER</span> <span class=\"keyword\">PRIMARY KEY</span> AUTOINCREMENT,</span><br><span class=\"line\">  author_id <span class=\"type\">INTEGER</span> <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  created <span class=\"type\">TIMESTAMP</span> <span class=\"keyword\">NOT NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">  title TEXT <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  body TEXT <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN KEY</span> (author_id) <span class=\"keyword\">REFERENCES</span> <span class=\"keyword\">user</span> (id)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>往 <code>db.py</code> 放入 python 方法用于运行 SQL 命令。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_db</span>():</span><br><span class=\"line\">    db = get_db()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> current_app.open_resource(<span class=\"string\">&#x27;schema.sql&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        db.executescript(f.read().decode(<span class=\"string\">&#x27;utf8&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@click.command(<span class=\"params\"><span class=\"string\">&#x27;init-db&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_db_command</span>():</span><br><span class=\"line\">    init_db()</span><br><span class=\"line\">    click.echo(<span class=\"string\">&#x27;Initialized the database.&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sqlite3.register_converter(</span><br><span class=\"line\">    <span class=\"string\">&quot;timestamp&quot;</span>, <span class=\"keyword\">lambda</span> v: datetime.fromisoformat(v.decode())</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><code>Open_resource（）</code>打开一个相对于flask包的文件，这很有用，因为在以后部署应用程序时，您不一定知道该位置在哪里。Get_db返回一个数据库连接，用于执行从文件中读取的命令。</p>\n<p><code>command（）</code>定义了一个名为init-db的命令行命令，该命令调用init_db函数并向用户显示成功消息。您可以阅读命令行接口来了解更多关于编写命令的信息。</p>\n<p>调用<code>sqlite3.register_converter（）</code>告诉Python如何解释数据库中的时间戳值。我们将该值转换为datetime.datetime。</p>\n<h3 id=\"Register-with-the-Application\"><a href=\"#Register-with-the-Application\" class=\"headerlink\" title=\"Register with the Application\"></a>Register with the Application</h3><p><code>close_db</code>和<code>init_db_command</code>函数需要在应用实例中注册；否则，它们将不会被应用程序使用。但是，由于使用的是工厂函数，因此在编写函数时该实例不可用。相反，应该编写一个函数，它接受一个应用程序并进行注册。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_app</span>(<span class=\"params\">app</span>):</span><br><span class=\"line\">    app.teardown_appcontext(close_db)</span><br><span class=\"line\">    app.cli.add_command(init_db_command)</span><br></pre></td></tr></table></figure>\n\n<p><code>app.teardown_appcontext（）</code>告诉Flask在返回响应后进行清理时调用该函数。</p>\n<p><code>App.cli.add_command（）</code>添加了一个可以通过flask命令调用的新命令。</p>\n<p>从工厂导入并调用这个函数。在返回应用程序之前，将新代码放在工厂函数的末尾。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># a simple page that says hello</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Initialize-the-Database-File\"><a href=\"#Initialize-the-Database-File\" class=\"headerlink\" title=\"Initialize the Database File\"></a>Initialize the Database File</h3><p>现在init-db已经注册到应用程序中，可以使用flask命令调用它，类似于上一页中的run命令。</p>\n<blockquote>\n<p>如果您仍在运行上一页中的服务器，您可以停止服务器，或者在新的终端中运行此命令。如果您使用一个新的终端，请记住切换到您的项目目录并激活env，如安装中所述。</p>\n</blockquote>\n<p>运行<code>init-db</code>命令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> flaskr init<span class=\"literal\">-db</span></span><br></pre></td></tr></table></figure>\n\n<p>将会有一个 <code>flaskr.sqlite</code> 文件出现在项目的<code>instance</code>目录中</p>\n","excerpt":"","more":"<h1 id=\"Flask-Tutorial\"><a href=\"#Flask-Tutorial\" class=\"headerlink\" title=\"Flask Tutorial\"></a>Flask Tutorial</h1><h2 id=\"Project-Layout\"><a href=\"#Project-Layout\" class=\"headerlink\" title=\"Project Layout\"></a>Project Layout</h2><p>创建一个项目文件夹然后打开。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir flask<span class=\"literal\">-tutorial</span> <span class=\"comment\"># 创建 flask 项目文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> flask<span class=\"literal\">-tutorial</span></span><br></pre></td></tr></table></figure>\n\n<p>按照 <a href=\"https://1yaowei0.github.io/2025/01/07/ai-plateform-flask/\">Flask Overview</a> 设置项目目录。</p>\n<hr>\n<p>一个大的<strong>flask</strong>项目，不可以将所有的代码放到一个文件。<strong>Python</strong>项目使用<em>package</em>将代码组织成多个模块，这些模块可以在需要的地方导入。</p>\n<p>这个项目应该包含：</p>\n<ul>\n<li><code>flaskr/</code>, 一个包含应用代码和文件的 python 包；</li>\n<li><code>tests/</code>, 一个包含测试模块的目录；</li>\n<li><code>.venv/</code>, 一个包含 flask 和其它已安装依赖的虚拟环境；</li>\n<li>一个告诉 python 如何安装项目的安装文件；</li>\n<li>版本控制配置，如 git。无论项目大小，你都应该养成对所有项目使用某种版本控制的习惯；</li>\n<li>如何可能在未来添加到项目的文件。</li>\n</ul>\n<p>最后，一个项目的结构应该如下：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/home/user/Projects/flask-tutorial</span><br><span class=\"line\">├── flaskr/</span><br><span class=\"line\">│   ├── __init__.py</span><br><span class=\"line\">│   ├── db.py</span><br><span class=\"line\">│   ├── schema.sql</span><br><span class=\"line\">│   ├── auth.py</span><br><span class=\"line\">│   ├── blog.py</span><br><span class=\"line\">│   ├── templates/</span><br><span class=\"line\">│   │   ├── base.html</span><br><span class=\"line\">│   │   ├── auth/</span><br><span class=\"line\">│   │   │   ├── login.html</span><br><span class=\"line\">│   │   │   └── register.html</span><br><span class=\"line\">│   │   └── blog/</span><br><span class=\"line\">│   │       ├── create.html</span><br><span class=\"line\">│   │       ├── index.html</span><br><span class=\"line\">│   │       └── update.html</span><br><span class=\"line\">│   └── static/</span><br><span class=\"line\">│       └── style.css</span><br><span class=\"line\">├── tests/</span><br><span class=\"line\">│   ├── conftest.py</span><br><span class=\"line\">│   ├── data.sql</span><br><span class=\"line\">│   ├── test_factory.py</span><br><span class=\"line\">│   ├── test_db.py</span><br><span class=\"line\">│   ├── test_auth.py</span><br><span class=\"line\">│   └── test_blog.py</span><br><span class=\"line\">├── .venv/</span><br><span class=\"line\">├── pyproject.toml</span><br><span class=\"line\">└── MANIFEST.in</span><br></pre></td></tr></table></figure>\n\n<p>如果使用版本控制，可以如下设置。下列被指定的路径将会被版本控制忽略，即使它在项目的开发过程中被修改。</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gitignore</span><br><span class=\"line\">.venv/</span><br><span class=\"line\"></span><br><span class=\"line\">*.pyc</span><br><span class=\"line\">__pycache__/</span><br><span class=\"line\"></span><br><span class=\"line\">instance/</span><br><span class=\"line\"></span><br><span class=\"line\">.pytest_cache/</span><br><span class=\"line\">.coverage</span><br><span class=\"line\">htmlcov/</span><br><span class=\"line\"></span><br><span class=\"line\">dist/</span><br><span class=\"line\">build/</span><br><span class=\"line\">*.egg-info/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Application-Setup\"><a href=\"#Application-Setup\" class=\"headerlink\" title=\"Application Setup\"></a>Application Setup</h2><p>一个 Flask 应用是一个 Flask 类的实例。任何与该应用相关的配置，URLs 都会在这个类中被注册。</p>\n<p>创建 Flask 引用的最直截了当的方式是在你代码的目录顶部创建一个全局的 Flask 实例。</p>\n<p>你将在一个函数中创建它，而不是全局地创建 Flask 的引用（实例）。这个函数称为 <em>应用工厂</em>。任何配置，注册和其它应用所需的设置都需要在这个函数中发生，然后返回该应用。</p>\n<h3 id=\"The-Application-Factory\"><a href=\"#The-Application-Factory\" class=\"headerlink\" title=\"The Application Factory\"></a>The Application Factory</h3><p>在 flaskr 目录下添加 <code>__init__.py</code> 文件，它有双重的职责，它将包含应用工厂，以及它告诉 python 这个 flaskr 目录应该被当作一个包。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_app</span>(<span class=\"params\">test_config = <span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># Create and configue the app</span></span><br><span class=\"line\">    app = Flask(__name__, instance_relative_config = <span class=\"literal\">True</span>)</span><br><span class=\"line\">    app.config.from_mapping(</span><br><span class=\"line\">        SECRET_KEY = <span class=\"string\">&#x27;dev&#x27;</span>,</span><br><span class=\"line\">        DATABASE = os.path.join(app.instance_path, <span class=\"string\">&#x27;flaskr.sqlite&#x27;</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> test_config <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Load the instance config, if it exists, when not testing</span></span><br><span class=\"line\">        app.config.from_pyfile(<span class=\"string\">&#x27;config.py&#x27;</span>, silent = <span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Load the test config if passed in</span></span><br><span class=\"line\">        app.config.from_mapping(test_config)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ensure the instance folder exists</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        os.makedirs(app.instance_path)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> OSError:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># a simple page that says hello</span></span><br><span class=\"line\"><span class=\"meta\">    @app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello&#x27;</span></span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> app</span><br></pre></td></tr></table></figure>\n\n<p><code>create_app</code> 是一个应用工厂函数。你将在教程后面添加它，但它已经做了很多事儿。</p>\n<ol>\n<li><p><code>app = Flask(__name__, instance_relative_config = True)</code> 创建了 Flask 实例。</p>\n<ul>\n<li><code>__name__</code> 是当前 python 模块的名字。这个 app 需要知道它的位置来设置一些路径。并且 <code>__name__</code> 是一种很方便告诉它的方式；</li>\n<li><code>instance_relative_config</code> 告诉 app 配置文件是相对于实例文件夹的。实例文件夹位于flaskr包之外，可以保存不应该提交给版本控制的本地数据，例如配置秘密和数据库文件。</li>\n</ul>\n</li>\n<li><p><code>app.config.from_mapping()</code> 设置了 app 的一些默认配置：</p>\n<ul>\n<li><code>SECRET_KEY</code> 被用来保证数据安全。它被设置为‘dev’，以便在开发期间提供一个方便的值，但在部署时应该使用随机值覆盖它；</li>\n<li><code>DATABASE</code> 是 SQLite 数据库将被保存的位置。它在 <code>app.instance_path</code> 之下，这是Flask为实例文件夹选择的路径。</li>\n</ul>\n</li>\n<li><p><code>app.config.from_pyfile()</code> 使用从实例文件夹中的config.py文件（如果存在）获取的值覆盖默认配置。例如，在部署时，可以使用它来设置一个真正的SECRET_KEY。</p>\n<ul>\n<li><code>Test_config</code> 也可以传递给工厂，并代替实例配置使用。</li>\n</ul>\n</li>\n<li><p><code>os.makedir</code> 确保 <code>app.instance_path</code> 存在，Flask 不会自动创建实例文件夹，但是它需要被创建因为当前的项目将创建数据库文件。</p>\n</li>\n<li><p><code>app.route</code> 创建了一个简单的路由，在深入后面教程之前我们可以看见应用是工作的。它创建了一个在 URL 和返回了响应的应用之间的连接。</p>\n</li>\n</ol>\n<h2 id=\"Run-The-Application\"><a href=\"#Run-The-Application\" class=\"headerlink\" title=\"Run The Application\"></a>Run The Application</h2><p>现在可以使用flask命令运行应用程序了。在终端中，告诉Flask在哪里可以找到您的应用程序，然后在调试模式下运行它。记住，您仍然应该在顶层的flask-tutorial目录中，而不是在flask包中。</p>\n<p>调试模式在页面引发异常时显示交互式调试器，并在更改代码时重新启动服务器。您可以让它继续运行，只要按照本教程重新加载浏览器页面即可。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> flaskr run <span class=\"literal\">--debug</span></span><br><span class=\"line\"></span><br><span class=\"line\">* Serving Flask app <span class=\"string\">&quot;flaskr&quot;</span></span><br><span class=\"line\">* Debug mode: on</span><br><span class=\"line\">* Running on http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">5000</span>/ (Press CTRL+C to quit)</span><br><span class=\"line\">* Restarting with stat</span><br><span class=\"line\">* Debugger is active!</span><br><span class=\"line\">* Debugger PIN: nnn<span class=\"literal\">-nnn-nnn</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Define-and-Access-the-Database\"><a href=\"#Define-and-Access-the-Database\" class=\"headerlink\" title=\"Define and Access the Database\"></a>Define and Access the Database</h2><p>SQLite 很方便因为它不需要设置一个独立的数据库服务，它是在 python 中编译的。但是，如果并发请求试图同时写入数据库，它们将会变慢，因为每次写入都是顺序进行的。小型应用程序不会注意到这一点。当您的企业规模扩大后，您可能希望切换到不同的数据库。</p>\n<h3 id=\"Connect-to-the-Database\"><a href=\"#Connect-to-the-Database\" class=\"headerlink\" title=\"Connect to the Database\"></a>Connect to the Database</h3><p>使用 SQLite 数据库（以及大多数其他Python数据库库）时要做的第一件事是创建到它的连接。任何查询和操作都使用连接执行，该连接在工作完成后关闭。</p>\n<p>在 web 应用程序中，这种连接通常与请求绑定在一起。它是在处理请求时创建的，并在发送响应之前关闭。</p>\n<blockquote>\n<p>flaskr&#x2F;db.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sqlite3</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> click</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> current_app, g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_db</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;db&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> g:</span><br><span class=\"line\">        g.db = sqlite3.connect(</span><br><span class=\"line\">            current_app.config[<span class=\"string\">&#x27;DATABASE&#x27;</span>],</span><br><span class=\"line\">            detect_types=sqlite3.PARSE_DECLTYPES</span><br><span class=\"line\">        )</span><br><span class=\"line\">        g.db.row_factory = sqlite3.Row</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> g.db</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">close_db</span>(<span class=\"params\">e=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    db = g.pop(<span class=\"string\">&#x27;db&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> db <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        db.close()</span><br></pre></td></tr></table></figure>\n\n<p><strong>g</strong> 是一个对于每个请求都唯一的对象。它用于存储在请求期间可能被多个函数访问的数据。如果在同一请求中第二次调用get_db，则存储并重用该连接，而不是创建新连接。</p>\n<p><strong>current_app</strong> 是另一个特殊对象，指向处理请求的Flask应用程序。由于使用了应用程序工厂，因此在编写其余代码时没有应用程序对象。Get_db将在创建应用程序并处理请求时调用，因此可以使用current_app。</p>\n<p><strong>sqlite3.connect()</strong> 建立到DATABASE配置键所指向的文件的连接。这个文件并不一定要存在，直到稍后初始化数据库时才会存在。</p>\n<p><strong>sqlite3.Row</strong> 告诉连接返回行为类似字典的行。这允许按名称访问列。</p>\n<p><strong>close_db</strong> 通过检查是否设置了g.db来检查是否创建了连接。如果连接存在，则关闭该连接。接下来，您将告诉应用程序有关应用程序工厂中的close_db函数，以便在每次请求之后调用它。</p>\n<h3 id=\"Create-the-Tables\"><a href=\"#Create-the-Tables\" class=\"headerlink\" title=\"Create the Tables\"></a>Create the Tables</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> post;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> <span class=\"keyword\">user</span> (</span><br><span class=\"line\">  id <span class=\"type\">INTEGER</span> <span class=\"keyword\">PRIMARY KEY</span> AUTOINCREMENT,</span><br><span class=\"line\">  username TEXT <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  password TEXT <span class=\"keyword\">NOT NULL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CREATE TABLE</span> post (</span><br><span class=\"line\">  id <span class=\"type\">INTEGER</span> <span class=\"keyword\">PRIMARY KEY</span> AUTOINCREMENT,</span><br><span class=\"line\">  author_id <span class=\"type\">INTEGER</span> <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  created <span class=\"type\">TIMESTAMP</span> <span class=\"keyword\">NOT NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"built_in\">CURRENT_TIMESTAMP</span>,</span><br><span class=\"line\">  title TEXT <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  body TEXT <span class=\"keyword\">NOT NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN KEY</span> (author_id) <span class=\"keyword\">REFERENCES</span> <span class=\"keyword\">user</span> (id)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>往 <code>db.py</code> 放入 python 方法用于运行 SQL 命令。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_db</span>():</span><br><span class=\"line\">    db = get_db()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> current_app.open_resource(<span class=\"string\">&#x27;schema.sql&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        db.executescript(f.read().decode(<span class=\"string\">&#x27;utf8&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@click.command(<span class=\"params\"><span class=\"string\">&#x27;init-db&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_db_command</span>():</span><br><span class=\"line\">    init_db()</span><br><span class=\"line\">    click.echo(<span class=\"string\">&#x27;Initialized the database.&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sqlite3.register_converter(</span><br><span class=\"line\">    <span class=\"string\">&quot;timestamp&quot;</span>, <span class=\"keyword\">lambda</span> v: datetime.fromisoformat(v.decode())</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><code>Open_resource（）</code>打开一个相对于flask包的文件，这很有用，因为在以后部署应用程序时，您不一定知道该位置在哪里。Get_db返回一个数据库连接，用于执行从文件中读取的命令。</p>\n<p><code>command（）</code>定义了一个名为init-db的命令行命令，该命令调用init_db函数并向用户显示成功消息。您可以阅读命令行接口来了解更多关于编写命令的信息。</p>\n<p>调用<code>sqlite3.register_converter（）</code>告诉Python如何解释数据库中的时间戳值。我们将该值转换为datetime.datetime。</p>\n<h3 id=\"Register-with-the-Application\"><a href=\"#Register-with-the-Application\" class=\"headerlink\" title=\"Register with the Application\"></a>Register with the Application</h3><p><code>close_db</code>和<code>init_db_command</code>函数需要在应用实例中注册；否则，它们将不会被应用程序使用。但是，由于使用的是工厂函数，因此在编写函数时该实例不可用。相反，应该编写一个函数，它接受一个应用程序并进行注册。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">init_app</span>(<span class=\"params\">app</span>):</span><br><span class=\"line\">    app.teardown_appcontext(close_db)</span><br><span class=\"line\">    app.cli.add_command(init_db_command)</span><br></pre></td></tr></table></figure>\n\n<p><code>app.teardown_appcontext（）</code>告诉Flask在返回响应后进行清理时调用该函数。</p>\n<p><code>App.cli.add_command（）</code>添加了一个可以通过flask命令调用的新命令。</p>\n<p>从工厂导入并调用这个函数。在返回应用程序之前，将新代码放在工厂函数的末尾。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># a simple page that says hello</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Initialize-the-Database-File\"><a href=\"#Initialize-the-Database-File\" class=\"headerlink\" title=\"Initialize the Database File\"></a>Initialize the Database File</h3><p>现在init-db已经注册到应用程序中，可以使用flask命令调用它，类似于上一页中的run命令。</p>\n<blockquote>\n<p>如果您仍在运行上一页中的服务器，您可以停止服务器，或者在新的终端中运行此命令。如果您使用一个新的终端，请记住切换到您的项目目录并激活env，如安装中所述。</p>\n</blockquote>\n<p>运行<code>init-db</code>命令：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask <span class=\"literal\">--app</span> flaskr init<span class=\"literal\">-db</span></span><br></pre></td></tr></table></figure>\n\n<p>将会有一个 <code>flaskr.sqlite</code> 文件出现在项目的<code>instance</code>目录中</p>\n"},{"title":"Flask Turorial 2","comments":1,"date":"2025-01-09T12:19:16.000Z","description":"Flask Turorial 2th","_content":"\n\n# Flask Turorial 2\n\n## Blueprints and Views\n\n一个 view 函数是你写来响应请求的代码。Flask使用模式将传入的请求URL与应该处理它的视图进行匹配。视图返回数据，Flask将这些数据转换为输出响应。Flask也可以走另一个方向，根据视图的名称和参数生成一个URL。\n\n### Create a Blueprint\n\nBlueprint是一种组织一组相关视图和其他代码的方法。它们不是直接在应用程序中注册视图和其他代码，而是在蓝图中注册。然后，当蓝图在工厂功能中可用时，将其注册到应用程序中。\n\nFlaskr将有两个蓝图，一个用于身份验证功能，一个用于博客帖子功能。每个蓝图的代码将放在一个单独的模块中。由于博客需要了解身份验证，因此您将首先编写身份验证。\n\n> flaskr/auth.py\n\n```py\nimport functools\n\nfrom flask import (\n    Blueprint, flash, g, redirect, render_template, request, session, url_for\n)\nfrom werkzeug.security import check_password_hash, generate_password_hash\n\nfrom flaskr.db import get_db\n\nbp = Blueprint('auth', __name__, url_prefix = '/auth')\n```\n\n这将创建一个名为“auth”的蓝图。与应用程序对象一样，蓝图需要知道它的定义位置，因此__name__作为第二个参数传递。url_prefix将被添加到与蓝图关联的所有url之前。\n\n使用app.register_blueprint（）从工厂导入并注册蓝图。在返回应用程序之前，将新代码放在工厂函数的末尾。\n\n> flaskr/__init__.py\n\n```py\n    # Register the auth blueprint\n    from . import auth\n    app.register_blueprint(auth.bp)\n```\n\n身份验证蓝图将具有注册新用户以及登录和注销的视图。\n\n### The First View: Register\n\n当用户访问/auth/register URL时，注册视图将返回带有表单的HTML供他们填写。当他们提交表单时，它将验证他们的输入，并再次显示带有错误消息的表单，或者创建新用户并转到登录页面。\n\n现在您只需编写视图代码。在下一页中，您将编写模板来生成HTML表单。\n\n> flaskr/auth.py\n\n```py\n@bp.route('/register', methods=('GET', 'POST'))\ndef register():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        db = get_db()\n        error = None\n\n        if not username:\n            error = 'Username is required'\n        elif not password\n            error = 'Password is required'\n\n        if error is None:\n            try:\n                db.execute(\n                    \"INSERT INTO user (username, password) VALUES (?, ?)\",\n                    (username, generate_password_hash(password))\n                )\n                db.commit()\n            except db.IntegrityError:\n                error = f\"User {username} is already registered\"\n            else\n                return redirect(url_for('auth.login'))\n            \n        flash(error)\n\n    return render_template('auth/register.html')\n```\n\n以下是代码解析：\n\n1. `@bp。route`将URL `/register`与注册视图函数关联起来。当Flask接收到对`/auth/register`的请求时，它将调用register视图并使用返回值作为响应。\n\n2. 如果用户提交了表单，request.method 将是`POST`。在本例中，开始验证输入。\n\n3. `request.form`是一种特殊类型的映射提交表单键和值的字典。用户将输入他们的用户名和密码。\n\n4. 验证 username 和 password 不为空\n\n5. 如果验证成功，插入新的用户数据到数据库  \n    - db.execute 使用`?`用于任何用户输入的占位符，以及用于替换占位符的值元组。数据库库将负责转义这些值，这样您就不会受到SQL注入攻击。\n    - 为了安全起见，永远不要将密码直接存储在数据库中。相反，使用generate_password_hash（）安全地对密码进行散列，并存储该散列。由于该查询修改了数据，因此需要在之后调用db.commit（）来保存更改。\n    - 如果用户名已经存在，则会发生`sqlite3.IntegrityError`，这应该作为另一个验证错误显示给用户。\n\n6. 存储用户之后，它们被重定向到登录页面。`url_for（）`根据登录视图的名称为其生成URL。这比直接编写URL更可取，因为它允许您稍后更改URL，而无需更改链接到它的所有代码。`redirect（）`生成对生成的URL的重定向响应。\n\n7. 如果验证失败，错误将显示给用户。Flash（）存储可以在呈现模板时检索的消息。\n\n8. 当用户最初导航到认证/注册时，或者出现验证错误时，应该显示一个包含注册表单的HTML页面。`render_template（）`将呈现一个包含HTML的模板，该模板将在本教程的下一步中编写。\n\n### Login\n\n```py\n@bp.route('/login', methods = ('GET', 'POST'))\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        db = get_db()\n        error = None\n        user = db.execute(\n            'SELECT * FROM user WHERE username = ?', (username)\n        ).fetchone()\n\n        if user is None:\n            error = 'Incorrect username.'\n        elif not check_password_hash(user['password', password]):\n            error = 'Incorrect password.'\n        \n        if error is None:\n            session.clear()\n            session['user_id'] = user['id']\n            return redirect(url_for('index'))\n        \n        flash(error)\n\n    return render_template('auth/login.html')\n```\n\nThere are a few differences from the register view:\n\n1. The user is queried first and stored in a variable for later use. `fetchone()` returns one row from the query. If the query returned no results, it returns None. Later, `fetchall()` will be used, which returns a list of all results.\n\n2. `check_password_hash()` hashes the submitted password in the same way as the stored hash and securely compares them. If they match, the password is valid.\n\n3. `session` is a `dict` that stores data across requests. When validation succeeds, the user’s id is stored in a new session. The data is stored in a cookie that is sent to the browser, and the browser then sends it back with subsequent requests. Flask securely signs the data so that it can’t be tampered with.\n\n```py\n@bp.before_app_request\ndef load_logged_in_user():\n    user_id = session.get('user_id')\n\n    if user_id is None:\n        g.user = None\n    else:\n        g.user = get_db().execute(\n            'SELECT * FROM user WHERE id = ?', (user_id)\n        ).fetchone()\n```\n\n`bp.before_app_request（）`注册一个在视图函数之前运行的函数，无论请求的URL是什么。`Load_logged_in_user`检查用户id是否存储在会话中，并从数据库中获取该用户的数据，将其存储在g.user上，该数据将持续请求的长度。如果没有用户id，或者用户id不存在，g.user将为None。\n\n### Logout\n\n要注销，需要从会话中删除用户id。那么`load_logged_in_user`将不会在后续请求中加载用户。\n\n```py\n@bp.route('/logout')\ndef logout():\n    session.clear()\n    return redirect(url_for('index'))\n```\n\n### Require Authentication in Other Views\n\n创建、编辑和删除博客文章需要用户登录。可以使用装饰器来检查它应用到的每个视图。\n\n```py\ndef login_required(view):\n    @functools.wraps(view)\n    def wrapped_view(**kwargs):\n        if g.user is None:\n            return redirect(url_for('auth.login'))\n        \n    return wrapped_view\n```\n\n这个装饰器返回一个新的视图函数，该函数包装了它所应用的原始视图。新函数检查用户是否已加载，否则将重定向到登录页面。如果用户被加载，则调用原始视图并正常继续。您将在编写博客视图时使用该装饰器。\n\n### Endpoints and URLs\n\n`url_for（）`函数根据名称和参数生成视图的URL。与视图关联的名称也称为端点，默认情况下，它与视图函数的名称相同。\n\n例如，在教程前面添加到应用程序工厂的`hello（）`视图的名称为‘hello’，可以使用url_for（'hello'）链接到它。如果它接受一个参数，稍后您将看到，它将被链接到使用url_for（'hello', who='World'）。\n\n当使用蓝图时，蓝图的名称被附加到函数的名称之前，因此您在上面编写的登录函数的端点是‘auth ’。Login ‘，因为您将它添加到’auth'蓝图中。\n\n## Templates\n\n模板是包含静态数据和动态数据占位符的文件。使用特定的数据呈现模板以生成最终文档。Flask使用Jinja模板库来呈现模板。\n\n在您的应用程序中，您将使用模板来呈现将显示在用户浏览器中的HTML。在Flask中，Jinja被配置为自动转义HTML模板中呈现的任何数据。这意味着呈现用户输入是安全的；他们输入的任何可能扰乱HTML的字符，如`<and>`，都将被转义为安全值，这些值在浏览器中看起来是一样的，但不会产生不必要的效果。\n\nJinja的外观和行为都很像Python。使用特殊分隔符将Jinja语法与模板中的静态数据区分开来。`{{and}}`之间的任何内容都是将输出到最终文档的表达式。`{%and%}`表示控制流语句，如if和for。与Python不同，块由开始和结束标记而不是缩进表示，因为块中的静态文本可能会改变缩进。\n\n### The Base Layout\n\n```html\n<!doctype html>\n<title>{% block title %}{% endblock %} - Flaskr</title>\n<link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n<nav>\n  <h1>Flaskr</h1>\n  <ul>\n    {% if g.user %}\n      <li><span>{{ g.user['username'] }}</span>\n      <li><a href=\"{{ url_for('auth.logout') }}\">Log Out</a>\n    {% else %}\n      <li><a href=\"{{ url_for('auth.register') }}\">Register</a>\n      <li><a href=\"{{ url_for('auth.login') }}\">Log In</a>\n    {% endif %}\n  </ul>\n</nav>\n<section class=\"content\">\n  <header>\n    {% block header %}{% endblock %}\n  </header>\n  {% for message in get_flashed_messages() %}\n    <div class=\"flash\">{{ message }}</div>\n  {% endfor %}\n  {% block content %}{% endblock %}\n</section>\n```\n\n### Register\n\n```html\n{% extends 'base.html' %}\n\n{% block header %}\n  <h1>{% block title %}Register{% endblock %}</h1>\n{% endblock %}\n\n{% block content %}\n  <form method=\"post\">\n    <label for=\"username\">Username</label>\n    <input name=\"username\" id=\"username\" required>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" required>\n    <input type=\"submit\" value=\"Register\">\n  </form>\n{% endblock %}\n```\n\n### Log In\n\n```html\n{% extends 'base.html' %}\n\n{% block header %}\n  <h1>{% block title %}Log In{% endblock %}</h1>\n{% endblock %}\n\n{% block content %}\n  <form method=\"post\">\n    <label for=\"username\">Username</label>\n    <input name=\"username\" id=\"username\" required>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" required>\n    <input type=\"submit\" value=\"Log In\">\n  </form>\n{% endblock %}\n```","source":"_posts/flask-tutorial-2.md","raw":"---\ntitle: Flask Turorial 2\ntags:\ncategories:\n - d365\n - x++\ncomments: true\ndate: 2025-01-09 20:19:16\ndescription: Flask Turorial 2th\n---\n\n\n# Flask Turorial 2\n\n## Blueprints and Views\n\n一个 view 函数是你写来响应请求的代码。Flask使用模式将传入的请求URL与应该处理它的视图进行匹配。视图返回数据，Flask将这些数据转换为输出响应。Flask也可以走另一个方向，根据视图的名称和参数生成一个URL。\n\n### Create a Blueprint\n\nBlueprint是一种组织一组相关视图和其他代码的方法。它们不是直接在应用程序中注册视图和其他代码，而是在蓝图中注册。然后，当蓝图在工厂功能中可用时，将其注册到应用程序中。\n\nFlaskr将有两个蓝图，一个用于身份验证功能，一个用于博客帖子功能。每个蓝图的代码将放在一个单独的模块中。由于博客需要了解身份验证，因此您将首先编写身份验证。\n\n> flaskr/auth.py\n\n```py\nimport functools\n\nfrom flask import (\n    Blueprint, flash, g, redirect, render_template, request, session, url_for\n)\nfrom werkzeug.security import check_password_hash, generate_password_hash\n\nfrom flaskr.db import get_db\n\nbp = Blueprint('auth', __name__, url_prefix = '/auth')\n```\n\n这将创建一个名为“auth”的蓝图。与应用程序对象一样，蓝图需要知道它的定义位置，因此__name__作为第二个参数传递。url_prefix将被添加到与蓝图关联的所有url之前。\n\n使用app.register_blueprint（）从工厂导入并注册蓝图。在返回应用程序之前，将新代码放在工厂函数的末尾。\n\n> flaskr/__init__.py\n\n```py\n    # Register the auth blueprint\n    from . import auth\n    app.register_blueprint(auth.bp)\n```\n\n身份验证蓝图将具有注册新用户以及登录和注销的视图。\n\n### The First View: Register\n\n当用户访问/auth/register URL时，注册视图将返回带有表单的HTML供他们填写。当他们提交表单时，它将验证他们的输入，并再次显示带有错误消息的表单，或者创建新用户并转到登录页面。\n\n现在您只需编写视图代码。在下一页中，您将编写模板来生成HTML表单。\n\n> flaskr/auth.py\n\n```py\n@bp.route('/register', methods=('GET', 'POST'))\ndef register():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        db = get_db()\n        error = None\n\n        if not username:\n            error = 'Username is required'\n        elif not password\n            error = 'Password is required'\n\n        if error is None:\n            try:\n                db.execute(\n                    \"INSERT INTO user (username, password) VALUES (?, ?)\",\n                    (username, generate_password_hash(password))\n                )\n                db.commit()\n            except db.IntegrityError:\n                error = f\"User {username} is already registered\"\n            else\n                return redirect(url_for('auth.login'))\n            \n        flash(error)\n\n    return render_template('auth/register.html')\n```\n\n以下是代码解析：\n\n1. `@bp。route`将URL `/register`与注册视图函数关联起来。当Flask接收到对`/auth/register`的请求时，它将调用register视图并使用返回值作为响应。\n\n2. 如果用户提交了表单，request.method 将是`POST`。在本例中，开始验证输入。\n\n3. `request.form`是一种特殊类型的映射提交表单键和值的字典。用户将输入他们的用户名和密码。\n\n4. 验证 username 和 password 不为空\n\n5. 如果验证成功，插入新的用户数据到数据库  \n    - db.execute 使用`?`用于任何用户输入的占位符，以及用于替换占位符的值元组。数据库库将负责转义这些值，这样您就不会受到SQL注入攻击。\n    - 为了安全起见，永远不要将密码直接存储在数据库中。相反，使用generate_password_hash（）安全地对密码进行散列，并存储该散列。由于该查询修改了数据，因此需要在之后调用db.commit（）来保存更改。\n    - 如果用户名已经存在，则会发生`sqlite3.IntegrityError`，这应该作为另一个验证错误显示给用户。\n\n6. 存储用户之后，它们被重定向到登录页面。`url_for（）`根据登录视图的名称为其生成URL。这比直接编写URL更可取，因为它允许您稍后更改URL，而无需更改链接到它的所有代码。`redirect（）`生成对生成的URL的重定向响应。\n\n7. 如果验证失败，错误将显示给用户。Flash（）存储可以在呈现模板时检索的消息。\n\n8. 当用户最初导航到认证/注册时，或者出现验证错误时，应该显示一个包含注册表单的HTML页面。`render_template（）`将呈现一个包含HTML的模板，该模板将在本教程的下一步中编写。\n\n### Login\n\n```py\n@bp.route('/login', methods = ('GET', 'POST'))\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n        db = get_db()\n        error = None\n        user = db.execute(\n            'SELECT * FROM user WHERE username = ?', (username)\n        ).fetchone()\n\n        if user is None:\n            error = 'Incorrect username.'\n        elif not check_password_hash(user['password', password]):\n            error = 'Incorrect password.'\n        \n        if error is None:\n            session.clear()\n            session['user_id'] = user['id']\n            return redirect(url_for('index'))\n        \n        flash(error)\n\n    return render_template('auth/login.html')\n```\n\nThere are a few differences from the register view:\n\n1. The user is queried first and stored in a variable for later use. `fetchone()` returns one row from the query. If the query returned no results, it returns None. Later, `fetchall()` will be used, which returns a list of all results.\n\n2. `check_password_hash()` hashes the submitted password in the same way as the stored hash and securely compares them. If they match, the password is valid.\n\n3. `session` is a `dict` that stores data across requests. When validation succeeds, the user’s id is stored in a new session. The data is stored in a cookie that is sent to the browser, and the browser then sends it back with subsequent requests. Flask securely signs the data so that it can’t be tampered with.\n\n```py\n@bp.before_app_request\ndef load_logged_in_user():\n    user_id = session.get('user_id')\n\n    if user_id is None:\n        g.user = None\n    else:\n        g.user = get_db().execute(\n            'SELECT * FROM user WHERE id = ?', (user_id)\n        ).fetchone()\n```\n\n`bp.before_app_request（）`注册一个在视图函数之前运行的函数，无论请求的URL是什么。`Load_logged_in_user`检查用户id是否存储在会话中，并从数据库中获取该用户的数据，将其存储在g.user上，该数据将持续请求的长度。如果没有用户id，或者用户id不存在，g.user将为None。\n\n### Logout\n\n要注销，需要从会话中删除用户id。那么`load_logged_in_user`将不会在后续请求中加载用户。\n\n```py\n@bp.route('/logout')\ndef logout():\n    session.clear()\n    return redirect(url_for('index'))\n```\n\n### Require Authentication in Other Views\n\n创建、编辑和删除博客文章需要用户登录。可以使用装饰器来检查它应用到的每个视图。\n\n```py\ndef login_required(view):\n    @functools.wraps(view)\n    def wrapped_view(**kwargs):\n        if g.user is None:\n            return redirect(url_for('auth.login'))\n        \n    return wrapped_view\n```\n\n这个装饰器返回一个新的视图函数，该函数包装了它所应用的原始视图。新函数检查用户是否已加载，否则将重定向到登录页面。如果用户被加载，则调用原始视图并正常继续。您将在编写博客视图时使用该装饰器。\n\n### Endpoints and URLs\n\n`url_for（）`函数根据名称和参数生成视图的URL。与视图关联的名称也称为端点，默认情况下，它与视图函数的名称相同。\n\n例如，在教程前面添加到应用程序工厂的`hello（）`视图的名称为‘hello’，可以使用url_for（'hello'）链接到它。如果它接受一个参数，稍后您将看到，它将被链接到使用url_for（'hello', who='World'）。\n\n当使用蓝图时，蓝图的名称被附加到函数的名称之前，因此您在上面编写的登录函数的端点是‘auth ’。Login ‘，因为您将它添加到’auth'蓝图中。\n\n## Templates\n\n模板是包含静态数据和动态数据占位符的文件。使用特定的数据呈现模板以生成最终文档。Flask使用Jinja模板库来呈现模板。\n\n在您的应用程序中，您将使用模板来呈现将显示在用户浏览器中的HTML。在Flask中，Jinja被配置为自动转义HTML模板中呈现的任何数据。这意味着呈现用户输入是安全的；他们输入的任何可能扰乱HTML的字符，如`<and>`，都将被转义为安全值，这些值在浏览器中看起来是一样的，但不会产生不必要的效果。\n\nJinja的外观和行为都很像Python。使用特殊分隔符将Jinja语法与模板中的静态数据区分开来。`{{and}}`之间的任何内容都是将输出到最终文档的表达式。`{%and%}`表示控制流语句，如if和for。与Python不同，块由开始和结束标记而不是缩进表示，因为块中的静态文本可能会改变缩进。\n\n### The Base Layout\n\n```html\n<!doctype html>\n<title>{% block title %}{% endblock %} - Flaskr</title>\n<link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\">\n<nav>\n  <h1>Flaskr</h1>\n  <ul>\n    {% if g.user %}\n      <li><span>{{ g.user['username'] }}</span>\n      <li><a href=\"{{ url_for('auth.logout') }}\">Log Out</a>\n    {% else %}\n      <li><a href=\"{{ url_for('auth.register') }}\">Register</a>\n      <li><a href=\"{{ url_for('auth.login') }}\">Log In</a>\n    {% endif %}\n  </ul>\n</nav>\n<section class=\"content\">\n  <header>\n    {% block header %}{% endblock %}\n  </header>\n  {% for message in get_flashed_messages() %}\n    <div class=\"flash\">{{ message }}</div>\n  {% endfor %}\n  {% block content %}{% endblock %}\n</section>\n```\n\n### Register\n\n```html\n{% extends 'base.html' %}\n\n{% block header %}\n  <h1>{% block title %}Register{% endblock %}</h1>\n{% endblock %}\n\n{% block content %}\n  <form method=\"post\">\n    <label for=\"username\">Username</label>\n    <input name=\"username\" id=\"username\" required>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" required>\n    <input type=\"submit\" value=\"Register\">\n  </form>\n{% endblock %}\n```\n\n### Log In\n\n```html\n{% extends 'base.html' %}\n\n{% block header %}\n  <h1>{% block title %}Log In{% endblock %}</h1>\n{% endblock %}\n\n{% block content %}\n  <form method=\"post\">\n    <label for=\"username\">Username</label>\n    <input name=\"username\" id=\"username\" required>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" required>\n    <input type=\"submit\" value=\"Log In\">\n  </form>\n{% endblock %}\n```","slug":"flask-tutorial-2","published":1,"updated":"2025-02-23T13:05:44.105Z","layout":"post","photos":[],"_id":"cm7j2rscd000bqgug29am3p0h","content":"<h1 id=\"Flask-Turorial-2\"><a href=\"#Flask-Turorial-2\" class=\"headerlink\" title=\"Flask Turorial 2\"></a>Flask Turorial 2</h1><h2 id=\"Blueprints-and-Views\"><a href=\"#Blueprints-and-Views\" class=\"headerlink\" title=\"Blueprints and Views\"></a>Blueprints and Views</h2><p>一个 view 函数是你写来响应请求的代码。Flask使用模式将传入的请求URL与应该处理它的视图进行匹配。视图返回数据，Flask将这些数据转换为输出响应。Flask也可以走另一个方向，根据视图的名称和参数生成一个URL。</p>\n<h3 id=\"Create-a-Blueprint\"><a href=\"#Create-a-Blueprint\" class=\"headerlink\" title=\"Create a Blueprint\"></a>Create a Blueprint</h3><p>Blueprint是一种组织一组相关视图和其他代码的方法。它们不是直接在应用程序中注册视图和其他代码，而是在蓝图中注册。然后，当蓝图在工厂功能中可用时，将其注册到应用程序中。</p>\n<p>Flaskr将有两个蓝图，一个用于身份验证功能，一个用于博客帖子功能。每个蓝图的代码将放在一个单独的模块中。由于博客需要了解身份验证，因此您将首先编写身份验证。</p>\n<blockquote>\n<p>flaskr&#x2F;auth.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> functools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> (</span><br><span class=\"line\">    Blueprint, flash, g, redirect, render_template, request, session, url_for</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">from</span> werkzeug.security <span class=\"keyword\">import</span> check_password_hash, generate_password_hash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flaskr.db <span class=\"keyword\">import</span> get_db</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;auth&#x27;</span>, __name__, url_prefix = <span class=\"string\">&#x27;/auth&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>这将创建一个名为“auth”的蓝图。与应用程序对象一样，蓝图需要知道它的定义位置，因此__name__作为第二个参数传递。url_prefix将被添加到与蓝图关联的所有url之前。</p>\n<p>使用app.register_blueprint（）从工厂导入并注册蓝图。在返回应用程序之前，将新代码放在工厂函数的末尾。</p>\n<blockquote>\n<p>flaskr&#x2F;<strong>init</strong>.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Register the auth blueprint</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> auth</span><br><span class=\"line\">app.register_blueprint(auth.bp)</span><br></pre></td></tr></table></figure>\n\n<p>身份验证蓝图将具有注册新用户以及登录和注销的视图。</p>\n<h3 id=\"The-First-View-Register\"><a href=\"#The-First-View-Register\" class=\"headerlink\" title=\"The First View: Register\"></a>The First View: Register</h3><p>当用户访问&#x2F;auth&#x2F;register URL时，注册视图将返回带有表单的HTML供他们填写。当他们提交表单时，它将验证他们的输入，并再次显示带有错误消息的表单，或者创建新用户并转到登录页面。</p>\n<p>现在您只需编写视图代码。在下一页中，您将编写模板来生成HTML表单。</p>\n<blockquote>\n<p>flaskr&#x2F;auth.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=(<span class=\"params\"><span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span></span>)</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\">        db = get_db()</span><br><span class=\"line\">        error = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username:</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Username is required&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> password</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Password is required&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> error <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                db.execute(</span><br><span class=\"line\">                    <span class=\"string\">&quot;INSERT INTO user (username, password) VALUES (?, ?)&quot;</span>,</span><br><span class=\"line\">                    (username, generate_password_hash(password))</span><br><span class=\"line\">                )</span><br><span class=\"line\">                db.commit()</span><br><span class=\"line\">            <span class=\"keyword\">except</span> db.IntegrityError:</span><br><span class=\"line\">                error = <span class=\"string\">f&quot;User <span class=\"subst\">&#123;username&#125;</span> is already registered&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;auth.login&#x27;</span>))</span><br><span class=\"line\">            </span><br><span class=\"line\">        flash(error)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;auth/register.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>以下是代码解析：</p>\n<ol>\n<li><p><code>@bp。route</code>将URL <code>/register</code>与注册视图函数关联起来。当Flask接收到对<code>/auth/register</code>的请求时，它将调用register视图并使用返回值作为响应。</p>\n</li>\n<li><p>如果用户提交了表单，request.method 将是<code>POST</code>。在本例中，开始验证输入。</p>\n</li>\n<li><p><code>request.form</code>是一种特殊类型的映射提交表单键和值的字典。用户将输入他们的用户名和密码。</p>\n</li>\n<li><p>验证 username 和 password 不为空</p>\n</li>\n<li><p>如果验证成功，插入新的用户数据到数据库  </p>\n<ul>\n<li>db.execute 使用<code>?</code>用于任何用户输入的占位符，以及用于替换占位符的值元组。数据库库将负责转义这些值，这样您就不会受到SQL注入攻击。</li>\n<li>为了安全起见，永远不要将密码直接存储在数据库中。相反，使用generate_password_hash（）安全地对密码进行散列，并存储该散列。由于该查询修改了数据，因此需要在之后调用db.commit（）来保存更改。</li>\n<li>如果用户名已经存在，则会发生<code>sqlite3.IntegrityError</code>，这应该作为另一个验证错误显示给用户。</li>\n</ul>\n</li>\n<li><p>存储用户之后，它们被重定向到登录页面。<code>url_for（）</code>根据登录视图的名称为其生成URL。这比直接编写URL更可取，因为它允许您稍后更改URL，而无需更改链接到它的所有代码。<code>redirect（）</code>生成对生成的URL的重定向响应。</p>\n</li>\n<li><p>如果验证失败，错误将显示给用户。Flash（）存储可以在呈现模板时检索的消息。</p>\n</li>\n<li><p>当用户最初导航到认证&#x2F;注册时，或者出现验证错误时，应该显示一个包含注册表单的HTML页面。<code>render_template（）</code>将呈现一个包含HTML的模板，该模板将在本教程的下一步中编写。</p>\n</li>\n</ol>\n<h3 id=\"Login\"><a href=\"#Login\" class=\"headerlink\" title=\"Login\"></a>Login</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods = (<span class=\"params\"><span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span></span>)</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\">        db = get_db()</span><br><span class=\"line\">        error = <span class=\"literal\">None</span></span><br><span class=\"line\">        user = db.execute(</span><br><span class=\"line\">            <span class=\"string\">&#x27;SELECT * FROM user WHERE username = ?&#x27;</span>, (username)</span><br><span class=\"line\">        ).fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> user <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Incorrect username.&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> check_password_hash(user[<span class=\"string\">&#x27;password&#x27;</span>, password]):</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Incorrect password.&#x27;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> error <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            session.clear()</span><br><span class=\"line\">            session[<span class=\"string\">&#x27;user_id&#x27;</span>] = user[<span class=\"string\">&#x27;id&#x27;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br><span class=\"line\">        </span><br><span class=\"line\">        flash(error)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;auth/login.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>There are a few differences from the register view:</p>\n<ol>\n<li><p>The user is queried first and stored in a variable for later use. <code>fetchone()</code> returns one row from the query. If the query returned no results, it returns None. Later, <code>fetchall()</code> will be used, which returns a list of all results.</p>\n</li>\n<li><p><code>check_password_hash()</code> hashes the submitted password in the same way as the stored hash and securely compares them. If they match, the password is valid.</p>\n</li>\n<li><p><code>session</code> is a <code>dict</code> that stores data across requests. When validation succeeds, the user’s id is stored in a new session. The data is stored in a cookie that is sent to the browser, and the browser then sends it back with subsequent requests. Flask securely signs the data so that it can’t be tampered with.</p>\n</li>\n</ol>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.before_app_request</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_logged_in_user</span>():</span><br><span class=\"line\">    user_id = session.get(<span class=\"string\">&#x27;user_id&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> user_id <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        g.user = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        g.user = get_db().execute(</span><br><span class=\"line\">            <span class=\"string\">&#x27;SELECT * FROM user WHERE id = ?&#x27;</span>, (user_id)</span><br><span class=\"line\">        ).fetchone()</span><br></pre></td></tr></table></figure>\n\n<p><code>bp.before_app_request（）</code>注册一个在视图函数之前运行的函数，无论请求的URL是什么。<code>Load_logged_in_user</code>检查用户id是否存储在会话中，并从数据库中获取该用户的数据，将其存储在g.user上，该数据将持续请求的长度。如果没有用户id，或者用户id不存在，g.user将为None。</p>\n<h3 id=\"Logout\"><a href=\"#Logout\" class=\"headerlink\" title=\"Logout\"></a>Logout</h3><p>要注销，需要从会话中删除用户id。那么<code>load_logged_in_user</code>将不会在后续请求中加载用户。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/logout&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Require-Authentication-in-Other-Views\"><a href=\"#Require-Authentication-in-Other-Views\" class=\"headerlink\" title=\"Require Authentication in Other Views\"></a>Require Authentication in Other Views</h3><p>创建、编辑和删除博客文章需要用户登录。可以使用装饰器来检查它应用到的每个视图。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_required</span>(<span class=\"params\">view</span>):</span><br><span class=\"line\"><span class=\"meta\">    @functools.wraps(<span class=\"params\">view</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapped_view</span>(<span class=\"params\">**kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g.user <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;auth.login&#x27;</span>))</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapped_view</span><br></pre></td></tr></table></figure>\n\n<p>这个装饰器返回一个新的视图函数，该函数包装了它所应用的原始视图。新函数检查用户是否已加载，否则将重定向到登录页面。如果用户被加载，则调用原始视图并正常继续。您将在编写博客视图时使用该装饰器。</p>\n<h3 id=\"Endpoints-and-URLs\"><a href=\"#Endpoints-and-URLs\" class=\"headerlink\" title=\"Endpoints and URLs\"></a>Endpoints and URLs</h3><p><code>url_for（）</code>函数根据名称和参数生成视图的URL。与视图关联的名称也称为端点，默认情况下，它与视图函数的名称相同。</p>\n<p>例如，在教程前面添加到应用程序工厂的<code>hello（）</code>视图的名称为‘hello’，可以使用url_for（’hello’）链接到它。如果它接受一个参数，稍后您将看到，它将被链接到使用url_for（’hello’, who&#x3D;’World’）。</p>\n<p>当使用蓝图时，蓝图的名称被附加到函数的名称之前，因此您在上面编写的登录函数的端点是‘auth ’。Login ‘，因为您将它添加到’auth’蓝图中。</p>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><p>模板是包含静态数据和动态数据占位符的文件。使用特定的数据呈现模板以生成最终文档。Flask使用Jinja模板库来呈现模板。</p>\n<p>在您的应用程序中，您将使用模板来呈现将显示在用户浏览器中的HTML。在Flask中，Jinja被配置为自动转义HTML模板中呈现的任何数据。这意味着呈现用户输入是安全的；他们输入的任何可能扰乱HTML的字符，如<code>&lt;and&gt;</code>，都将被转义为安全值，这些值在浏览器中看起来是一样的，但不会产生不必要的效果。</p>\n<p>Jinja的外观和行为都很像Python。使用特殊分隔符将Jinja语法与模板中的静态数据区分开来。<code>&#123;&#123;and&#125;&#125;</code>之间的任何内容都是将输出到最终文档的表达式。<code>&#123;%and%&#125;</code>表示控制流语句，如if和for。与Python不同，块由开始和结束标记而不是缩进表示，因为块中的静态文本可能会改变缩进。</p>\n<h3 id=\"The-Base-Layout\"><a href=\"#The-Base-Layout\" class=\"headerlink\" title=\"The Base Layout\"></a>The Base Layout</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock %&#125; - Flaskr<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Flaskr<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    &#123;% if g.user %&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; g.user[&#x27;username&#x27;] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.logout&#x27;) &#125;&#125;&quot;</span>&gt;</span>Log Out<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.register&#x27;) &#125;&#125;&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.login&#x27;) &#125;&#125;&quot;</span>&gt;</span>Log In<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    &#123;% block header %&#125;&#123;% endblock %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  &#123;% for message in get_flashed_messages() %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;flash&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  &#123;% endfor %&#125;</span><br><span class=\"line\">  &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &#x27;base.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block header %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;% block title %&#125;Register&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Register&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Log-In\"><a href=\"#Log-In\" class=\"headerlink\" title=\"Log In\"></a>Log In</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &#x27;base.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block header %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;% block title %&#125;Log In&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Log In&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1 id=\"Flask-Turorial-2\"><a href=\"#Flask-Turorial-2\" class=\"headerlink\" title=\"Flask Turorial 2\"></a>Flask Turorial 2</h1><h2 id=\"Blueprints-and-Views\"><a href=\"#Blueprints-and-Views\" class=\"headerlink\" title=\"Blueprints and Views\"></a>Blueprints and Views</h2><p>一个 view 函数是你写来响应请求的代码。Flask使用模式将传入的请求URL与应该处理它的视图进行匹配。视图返回数据，Flask将这些数据转换为输出响应。Flask也可以走另一个方向，根据视图的名称和参数生成一个URL。</p>\n<h3 id=\"Create-a-Blueprint\"><a href=\"#Create-a-Blueprint\" class=\"headerlink\" title=\"Create a Blueprint\"></a>Create a Blueprint</h3><p>Blueprint是一种组织一组相关视图和其他代码的方法。它们不是直接在应用程序中注册视图和其他代码，而是在蓝图中注册。然后，当蓝图在工厂功能中可用时，将其注册到应用程序中。</p>\n<p>Flaskr将有两个蓝图，一个用于身份验证功能，一个用于博客帖子功能。每个蓝图的代码将放在一个单独的模块中。由于博客需要了解身份验证，因此您将首先编写身份验证。</p>\n<blockquote>\n<p>flaskr&#x2F;auth.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> functools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> (</span><br><span class=\"line\">    Blueprint, flash, g, redirect, render_template, request, session, url_for</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">from</span> werkzeug.security <span class=\"keyword\">import</span> check_password_hash, generate_password_hash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flaskr.db <span class=\"keyword\">import</span> get_db</span><br><span class=\"line\"></span><br><span class=\"line\">bp = Blueprint(<span class=\"string\">&#x27;auth&#x27;</span>, __name__, url_prefix = <span class=\"string\">&#x27;/auth&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>这将创建一个名为“auth”的蓝图。与应用程序对象一样，蓝图需要知道它的定义位置，因此__name__作为第二个参数传递。url_prefix将被添加到与蓝图关联的所有url之前。</p>\n<p>使用app.register_blueprint（）从工厂导入并注册蓝图。在返回应用程序之前，将新代码放在工厂函数的末尾。</p>\n<blockquote>\n<p>flaskr&#x2F;<strong>init</strong>.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Register the auth blueprint</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> . <span class=\"keyword\">import</span> auth</span><br><span class=\"line\">app.register_blueprint(auth.bp)</span><br></pre></td></tr></table></figure>\n\n<p>身份验证蓝图将具有注册新用户以及登录和注销的视图。</p>\n<h3 id=\"The-First-View-Register\"><a href=\"#The-First-View-Register\" class=\"headerlink\" title=\"The First View: Register\"></a>The First View: Register</h3><p>当用户访问&#x2F;auth&#x2F;register URL时，注册视图将返回带有表单的HTML供他们填写。当他们提交表单时，它将验证他们的输入，并再次显示带有错误消息的表单，或者创建新用户并转到登录页面。</p>\n<p>现在您只需编写视图代码。在下一页中，您将编写模板来生成HTML表单。</p>\n<blockquote>\n<p>flaskr&#x2F;auth.py</p>\n</blockquote>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=(<span class=\"params\"><span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span></span>)</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\">        db = get_db()</span><br><span class=\"line\">        error = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username:</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Username is required&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> password</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Password is required&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> error <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                db.execute(</span><br><span class=\"line\">                    <span class=\"string\">&quot;INSERT INTO user (username, password) VALUES (?, ?)&quot;</span>,</span><br><span class=\"line\">                    (username, generate_password_hash(password))</span><br><span class=\"line\">                )</span><br><span class=\"line\">                db.commit()</span><br><span class=\"line\">            <span class=\"keyword\">except</span> db.IntegrityError:</span><br><span class=\"line\">                error = <span class=\"string\">f&quot;User <span class=\"subst\">&#123;username&#125;</span> is already registered&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;auth.login&#x27;</span>))</span><br><span class=\"line\">            </span><br><span class=\"line\">        flash(error)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;auth/register.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>以下是代码解析：</p>\n<ol>\n<li><p><code>@bp。route</code>将URL <code>/register</code>与注册视图函数关联起来。当Flask接收到对<code>/auth/register</code>的请求时，它将调用register视图并使用返回值作为响应。</p>\n</li>\n<li><p>如果用户提交了表单，request.method 将是<code>POST</code>。在本例中，开始验证输入。</p>\n</li>\n<li><p><code>request.form</code>是一种特殊类型的映射提交表单键和值的字典。用户将输入他们的用户名和密码。</p>\n</li>\n<li><p>验证 username 和 password 不为空</p>\n</li>\n<li><p>如果验证成功，插入新的用户数据到数据库  </p>\n<ul>\n<li>db.execute 使用<code>?</code>用于任何用户输入的占位符，以及用于替换占位符的值元组。数据库库将负责转义这些值，这样您就不会受到SQL注入攻击。</li>\n<li>为了安全起见，永远不要将密码直接存储在数据库中。相反，使用generate_password_hash（）安全地对密码进行散列，并存储该散列。由于该查询修改了数据，因此需要在之后调用db.commit（）来保存更改。</li>\n<li>如果用户名已经存在，则会发生<code>sqlite3.IntegrityError</code>，这应该作为另一个验证错误显示给用户。</li>\n</ul>\n</li>\n<li><p>存储用户之后，它们被重定向到登录页面。<code>url_for（）</code>根据登录视图的名称为其生成URL。这比直接编写URL更可取，因为它允许您稍后更改URL，而无需更改链接到它的所有代码。<code>redirect（）</code>生成对生成的URL的重定向响应。</p>\n</li>\n<li><p>如果验证失败，错误将显示给用户。Flash（）存储可以在呈现模板时检索的消息。</p>\n</li>\n<li><p>当用户最初导航到认证&#x2F;注册时，或者出现验证错误时，应该显示一个包含注册表单的HTML页面。<code>render_template（）</code>将呈现一个包含HTML的模板，该模板将在本教程的下一步中编写。</p>\n</li>\n</ol>\n<h3 id=\"Login\"><a href=\"#Login\" class=\"headerlink\" title=\"Login\"></a>Login</h3><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods = (<span class=\"params\"><span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span></span>)</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">&#x27;POST&#x27;</span>:</span><br><span class=\"line\">        username = request.form[<span class=\"string\">&#x27;username&#x27;</span>]</span><br><span class=\"line\">        password = request.form[<span class=\"string\">&#x27;password&#x27;</span>]</span><br><span class=\"line\">        db = get_db()</span><br><span class=\"line\">        error = <span class=\"literal\">None</span></span><br><span class=\"line\">        user = db.execute(</span><br><span class=\"line\">            <span class=\"string\">&#x27;SELECT * FROM user WHERE username = ?&#x27;</span>, (username)</span><br><span class=\"line\">        ).fetchone()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> user <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Incorrect username.&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"keyword\">not</span> check_password_hash(user[<span class=\"string\">&#x27;password&#x27;</span>, password]):</span><br><span class=\"line\">            error = <span class=\"string\">&#x27;Incorrect password.&#x27;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> error <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            session.clear()</span><br><span class=\"line\">            session[<span class=\"string\">&#x27;user_id&#x27;</span>] = user[<span class=\"string\">&#x27;id&#x27;</span>]</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br><span class=\"line\">        </span><br><span class=\"line\">        flash(error)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;auth/login.html&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>There are a few differences from the register view:</p>\n<ol>\n<li><p>The user is queried first and stored in a variable for later use. <code>fetchone()</code> returns one row from the query. If the query returned no results, it returns None. Later, <code>fetchall()</code> will be used, which returns a list of all results.</p>\n</li>\n<li><p><code>check_password_hash()</code> hashes the submitted password in the same way as the stored hash and securely compares them. If they match, the password is valid.</p>\n</li>\n<li><p><code>session</code> is a <code>dict</code> that stores data across requests. When validation succeeds, the user’s id is stored in a new session. The data is stored in a cookie that is sent to the browser, and the browser then sends it back with subsequent requests. Flask securely signs the data so that it can’t be tampered with.</p>\n</li>\n</ol>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.before_app_request</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_logged_in_user</span>():</span><br><span class=\"line\">    user_id = session.get(<span class=\"string\">&#x27;user_id&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> user_id <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        g.user = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        g.user = get_db().execute(</span><br><span class=\"line\">            <span class=\"string\">&#x27;SELECT * FROM user WHERE id = ?&#x27;</span>, (user_id)</span><br><span class=\"line\">        ).fetchone()</span><br></pre></td></tr></table></figure>\n\n<p><code>bp.before_app_request（）</code>注册一个在视图函数之前运行的函数，无论请求的URL是什么。<code>Load_logged_in_user</code>检查用户id是否存储在会话中，并从数据库中获取该用户的数据，将其存储在g.user上，该数据将持续请求的长度。如果没有用户id，或者用户id不存在，g.user将为None。</p>\n<h3 id=\"Logout\"><a href=\"#Logout\" class=\"headerlink\" title=\"Logout\"></a>Logout</h3><p>要注销，需要从会话中删除用户id。那么<code>load_logged_in_user</code>将不会在后续请求中加载用户。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@bp.route(<span class=\"params\"><span class=\"string\">&#x27;/logout&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">    session.clear()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;index&#x27;</span>))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Require-Authentication-in-Other-Views\"><a href=\"#Require-Authentication-in-Other-Views\" class=\"headerlink\" title=\"Require Authentication in Other Views\"></a>Require Authentication in Other Views</h3><p>创建、编辑和删除博客文章需要用户登录。可以使用装饰器来检查它应用到的每个视图。</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login_required</span>(<span class=\"params\">view</span>):</span><br><span class=\"line\"><span class=\"meta\">    @functools.wraps(<span class=\"params\">view</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">wrapped_view</span>(<span class=\"params\">**kwargs</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g.user <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;auth.login&#x27;</span>))</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapped_view</span><br></pre></td></tr></table></figure>\n\n<p>这个装饰器返回一个新的视图函数，该函数包装了它所应用的原始视图。新函数检查用户是否已加载，否则将重定向到登录页面。如果用户被加载，则调用原始视图并正常继续。您将在编写博客视图时使用该装饰器。</p>\n<h3 id=\"Endpoints-and-URLs\"><a href=\"#Endpoints-and-URLs\" class=\"headerlink\" title=\"Endpoints and URLs\"></a>Endpoints and URLs</h3><p><code>url_for（）</code>函数根据名称和参数生成视图的URL。与视图关联的名称也称为端点，默认情况下，它与视图函数的名称相同。</p>\n<p>例如，在教程前面添加到应用程序工厂的<code>hello（）</code>视图的名称为‘hello’，可以使用url_for（’hello’）链接到它。如果它接受一个参数，稍后您将看到，它将被链接到使用url_for（’hello’, who&#x3D;’World’）。</p>\n<p>当使用蓝图时，蓝图的名称被附加到函数的名称之前，因此您在上面编写的登录函数的端点是‘auth ’。Login ‘，因为您将它添加到’auth’蓝图中。</p>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><p>模板是包含静态数据和动态数据占位符的文件。使用特定的数据呈现模板以生成最终文档。Flask使用Jinja模板库来呈现模板。</p>\n<p>在您的应用程序中，您将使用模板来呈现将显示在用户浏览器中的HTML。在Flask中，Jinja被配置为自动转义HTML模板中呈现的任何数据。这意味着呈现用户输入是安全的；他们输入的任何可能扰乱HTML的字符，如<code>&lt;and&gt;</code>，都将被转义为安全值，这些值在浏览器中看起来是一样的，但不会产生不必要的效果。</p>\n<p>Jinja的外观和行为都很像Python。使用特殊分隔符将Jinja语法与模板中的静态数据区分开来。<code>&#123;&#123;and&#125;&#125;</code>之间的任何内容都是将输出到最终文档的表达式。<code>&#123;%and%&#125;</code>表示控制流语句，如if和for。与Python不同，块由开始和结束标记而不是缩进表示，因为块中的静态文本可能会改变缩进。</p>\n<h3 id=\"The-Base-Layout\"><a href=\"#The-Base-Layout\" class=\"headerlink\" title=\"The Base Layout\"></a>The Base Layout</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;% block title %&#125;&#123;% endblock %&#125; - Flaskr<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;static&#x27;, filename=&#x27;style.css&#x27;) &#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Flaskr<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    &#123;% if g.user %&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;&#123; g.user[&#x27;username&#x27;] &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.logout&#x27;) &#125;&#125;&quot;</span>&gt;</span>Log Out<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    &#123;% else %&#125;</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.register&#x27;) &#125;&#125;&quot;</span>&gt;</span>Register<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;auth.login&#x27;) &#125;&#125;&quot;</span>&gt;</span>Log In<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    &#123;% block header %&#125;&#123;% endblock %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">  &#123;% for message in get_flashed_messages() %&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;flash&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  &#123;% endfor %&#125;</span><br><span class=\"line\">  &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &#x27;base.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block header %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;% block title %&#125;Register&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Register&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Log-In\"><a href=\"#Log-In\" class=\"headerlink\" title=\"Log In\"></a>Log In</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% extends &#x27;base.html&#x27; %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block header %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;% block title %&#125;Log In&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;post&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;username&quot;</span>&gt;</span>Username<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;username&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>Password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">required</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;Log In&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Site building tutorial","description":"This is a hexo demo article hexo + github page","comments":1,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n### Enable comments for site\n\nWe can use the utterances for implementing comments function. More info: [utterances](https://utteranc.es/)\n\nAdd the following script in the theme config.yml\n\n```yml\nutteranc:\n  enable: true\n  repo: user_name/repo_name # Github repository owner and name\n  # Available values: pathname | url | title | og:title\n  issue_term: pathname\n  # Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light\n  theme: github-dark\n```\n\n​Additionally, we must edit the following property like the following:​\n\n```yml\n# Multiple Comment System Support\ncomments:\n  # Available values: tabs | buttons\n  style: tabs\n  # Choose a comment system to be displayed by default.\n  # Available values: disqus | disqusjs | changyan | livere | gitalk | utterances\n  active: utterances\n  # Setting `true` means remembering the comment system selected by the visitor.\n  storage: true\n  # Lazyload all comment systems.\n  lazyload: false\n  # Modify texts or order for any naves, here are some examples.\n  nav:\n```","source":"_posts/hello-world.md","raw":"---\ntitle: Site building tutorial\ndescription: This is a hexo demo article hexo + github page\ncomments: true\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n### Enable comments for site\n\nWe can use the utterances for implementing comments function. More info: [utterances](https://utteranc.es/)\n\nAdd the following script in the theme config.yml\n\n```yml\nutteranc:\n  enable: true\n  repo: user_name/repo_name # Github repository owner and name\n  # Available values: pathname | url | title | og:title\n  issue_term: pathname\n  # Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light\n  theme: github-dark\n```\n\n​Additionally, we must edit the following property like the following:​\n\n```yml\n# Multiple Comment System Support\ncomments:\n  # Available values: tabs | buttons\n  style: tabs\n  # Choose a comment system to be displayed by default.\n  # Available values: disqus | disqusjs | changyan | livere | gitalk | utterances\n  active: utterances\n  # Setting `true` means remembering the comment system selected by the visitor.\n  storage: true\n  # Lazyload all comment systems.\n  lazyload: false\n  # Modify texts or order for any naves, here are some examples.\n  nav:\n```","slug":"hello-world","published":1,"date":"2024-12-21T14:52:29.915Z","updated":"2025-01-18T14:46:38.269Z","layout":"post","photos":[],"_id":"cm7j2rsce000dqgug8w5m2n0h","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<h3 id=\"Enable-comments-for-site\"><a href=\"#Enable-comments-for-site\" class=\"headerlink\" title=\"Enable comments for site\"></a>Enable comments for site</h3><p>We can use the utterances for implementing comments function. More info: <a href=\"https://utteranc.es/\">utterances</a></p>\n<p>Add the following script in the theme config.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">utteranc:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">user_name/repo_name</span> <span class=\"comment\"># Github repository owner and name</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: pathname | url | title | og:title</span></span><br><span class=\"line\">  <span class=\"attr\">issue_term:</span> <span class=\"string\">pathname</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">github-dark</span></span><br></pre></td></tr></table></figure>\n\n<p>​Additionally, we must edit the following property like the following:​</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Multiple Comment System Support</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: disqus | disqusjs | changyan | livere | gitalk | utterances</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span> <span class=\"string\">utterances</span></span><br><span class=\"line\">  <span class=\"comment\"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class=\"line\">  <span class=\"attr\">storage:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Lazyload all comment systems.</span></span><br><span class=\"line\">  <span class=\"attr\">lazyload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Modify texts or order for any naves, here are some examples.</span></span><br><span class=\"line\">  <span class=\"attr\">nav:</span></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<h3 id=\"Enable-comments-for-site\"><a href=\"#Enable-comments-for-site\" class=\"headerlink\" title=\"Enable comments for site\"></a>Enable comments for site</h3><p>We can use the utterances for implementing comments function. More info: <a href=\"https://utteranc.es/\">utterances</a></p>\n<p>Add the following script in the theme config.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">utteranc:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">user_name/repo_name</span> <span class=\"comment\"># Github repository owner and name</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: pathname | url | title | og:title</span></span><br><span class=\"line\">  <span class=\"attr\">issue_term:</span> <span class=\"string\">pathname</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span> <span class=\"string\">github-dark</span></span><br></pre></td></tr></table></figure>\n\n<p>​Additionally, we must edit the following property like the following:​</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Multiple Comment System Support</span></span><br><span class=\"line\"><span class=\"attr\">comments:</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: tabs | buttons</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">tabs</span></span><br><span class=\"line\">  <span class=\"comment\"># Choose a comment system to be displayed by default.</span></span><br><span class=\"line\">  <span class=\"comment\"># Available values: disqus | disqusjs | changyan | livere | gitalk | utterances</span></span><br><span class=\"line\">  <span class=\"attr\">active:</span> <span class=\"string\">utterances</span></span><br><span class=\"line\">  <span class=\"comment\"># Setting `true` means remembering the comment system selected by the visitor.</span></span><br><span class=\"line\">  <span class=\"attr\">storage:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Lazyload all comment systems.</span></span><br><span class=\"line\">  <span class=\"attr\">lazyload:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"comment\"># Modify texts or order for any naves, here are some examples.</span></span><br><span class=\"line\">  <span class=\"attr\">nav:</span></span><br></pre></td></tr></table></figure>"},{"title":"The way for clearing the log disk","date":"2024-12-23T08:33:47.000Z","comments":1,"_content":"\n{% asset_img \"mssql-clear-log.png\" \"clear mssql clear log example\" %}\n\nThe example SQL script code as shown below:\n\n```sql\nuse [AxDB]\n\nSELECT name FROM sys.database_files\n\nUSE [master]\nGO\nALTER DATABASE [AxDB] SET RECOVERY SIMPLE WITH NO_WAIT\nGO\n\nUSE [AxDB]\nGO\nDBCC SHRINKFILE (AxDB_Restore_log, 1024)\nGO\n\nUSE [master]\nGO\nALTER DATABASE [AxDB] SET RECOVERY FULL WITH NO_WAIT\nGO\n```","source":"_posts/mssql-clear-log.md","raw":"---\ntitle: The way for clearing the log disk\ndate: 2024-12-23 16:33:47\ntags:\n - X++\ncategories:\n - X++\ncomments: true\n---\n\n{% asset_img \"mssql-clear-log.png\" \"clear mssql clear log example\" %}\n\nThe example SQL script code as shown below:\n\n```sql\nuse [AxDB]\n\nSELECT name FROM sys.database_files\n\nUSE [master]\nGO\nALTER DATABASE [AxDB] SET RECOVERY SIMPLE WITH NO_WAIT\nGO\n\nUSE [AxDB]\nGO\nDBCC SHRINKFILE (AxDB_Restore_log, 1024)\nGO\n\nUSE [master]\nGO\nALTER DATABASE [AxDB] SET RECOVERY FULL WITH NO_WAIT\nGO\n```","slug":"mssql-clear-log","published":1,"updated":"2025-01-18T15:19:56.217Z","layout":"post","photos":[],"_id":"cm7j2rscf000eqgug5rxi137g","content":"<img src=\"/2024/12/23/mssql-clear-log/mssql-clear-log.png\" class=\"\" title=\"clear mssql clear log example\">\n\n<p>The example SQL script code as shown below:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use [AxDB]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name <span class=\"keyword\">FROM</span> sys.database_files</span><br><span class=\"line\"></span><br><span class=\"line\">USE [master]</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> DATABASE [AxDB] <span class=\"keyword\">SET</span> RECOVERY SIMPLE <span class=\"keyword\">WITH</span> NO_WAIT</span><br><span class=\"line\">GO</span><br><span class=\"line\"></span><br><span class=\"line\">USE [AxDB]</span><br><span class=\"line\">GO</span><br><span class=\"line\">DBCC SHRINKFILE (AxDB_Restore_log, <span class=\"number\">1024</span>)</span><br><span class=\"line\">GO</span><br><span class=\"line\"></span><br><span class=\"line\">USE [master]</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> DATABASE [AxDB] <span class=\"keyword\">SET</span> RECOVERY <span class=\"keyword\">FULL</span> <span class=\"keyword\">WITH</span> NO_WAIT</span><br><span class=\"line\">GO</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<img src=\"/2024/12/23/mssql-clear-log/mssql-clear-log.png\" class=\"\" title=\"clear mssql clear log example\">\n\n<p>The example SQL script code as shown below:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use [AxDB]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> name <span class=\"keyword\">FROM</span> sys.database_files</span><br><span class=\"line\"></span><br><span class=\"line\">USE [master]</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> DATABASE [AxDB] <span class=\"keyword\">SET</span> RECOVERY SIMPLE <span class=\"keyword\">WITH</span> NO_WAIT</span><br><span class=\"line\">GO</span><br><span class=\"line\"></span><br><span class=\"line\">USE [AxDB]</span><br><span class=\"line\">GO</span><br><span class=\"line\">DBCC SHRINKFILE (AxDB_Restore_log, <span class=\"number\">1024</span>)</span><br><span class=\"line\">GO</span><br><span class=\"line\"></span><br><span class=\"line\">USE [master]</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> DATABASE [AxDB] <span class=\"keyword\">SET</span> RECOVERY <span class=\"keyword\">FULL</span> <span class=\"keyword\">WITH</span> NO_WAIT</span><br><span class=\"line\">GO</span><br></pre></td></tr></table></figure>"},{"title":"X++ api list","date":"2024-12-23T07:41:59.000Z","comments":1,"description":"X++ Api List","_content":"\n### FileIOPermission\n\n`FileIOPermission`类用于设置文件的访问权限。`assert()`方法用于验证`FileIOPermission`类设置权限是否成功，如果错误，便会抛出错误，效果类似`try catch`程序块。\n\n### RecordInsertList\n\n用于批量插入的工具类，示例代码如下：\n\n{% asset_img \"xpp-api-list-recordinsertlist.png\" \"RecordInsertList example\" %}","source":"_posts/xpp-api-list.md","raw":"---\ntitle: X++ api list\ndate: 2024-12-23 15:41:59\ntags: \ncategories:\n - d365\n - x++\ncomments: true\ndescription: X++ Api List\n---\n\n### FileIOPermission\n\n`FileIOPermission`类用于设置文件的访问权限。`assert()`方法用于验证`FileIOPermission`类设置权限是否成功，如果错误，便会抛出错误，效果类似`try catch`程序块。\n\n### RecordInsertList\n\n用于批量插入的工具类，示例代码如下：\n\n{% asset_img \"xpp-api-list-recordinsertlist.png\" \"RecordInsertList example\" %}","slug":"xpp-api-list","published":1,"updated":"2025-02-23T13:08:42.189Z","layout":"post","photos":[],"_id":"cm7j2rscg000hqgug0kvacxdc","content":"<h3 id=\"FileIOPermission\"><a href=\"#FileIOPermission\" class=\"headerlink\" title=\"FileIOPermission\"></a>FileIOPermission</h3><p><code>FileIOPermission</code>类用于设置文件的访问权限。<code>assert()</code>方法用于验证<code>FileIOPermission</code>类设置权限是否成功，如果错误，便会抛出错误，效果类似<code>try catch</code>程序块。</p>\n<h3 id=\"RecordInsertList\"><a href=\"#RecordInsertList\" class=\"headerlink\" title=\"RecordInsertList\"></a>RecordInsertList</h3><p>用于批量插入的工具类，示例代码如下：</p>\n<img src=\"/2024/12/23/xpp-api-list/xpp-api-list-recordinsertlist.png\" class=\"\" title=\"RecordInsertList example\">","excerpt":"","more":"<h3 id=\"FileIOPermission\"><a href=\"#FileIOPermission\" class=\"headerlink\" title=\"FileIOPermission\"></a>FileIOPermission</h3><p><code>FileIOPermission</code>类用于设置文件的访问权限。<code>assert()</code>方法用于验证<code>FileIOPermission</code>类设置权限是否成功，如果错误，便会抛出错误，效果类似<code>try catch</code>程序块。</p>\n<h3 id=\"RecordInsertList\"><a href=\"#RecordInsertList\" class=\"headerlink\" title=\"RecordInsertList\"></a>RecordInsertList</h3><p>用于批量插入的工具类，示例代码如下：</p>\n<img src=\"/2024/12/23/xpp-api-list/xpp-api-list-recordinsertlist.png\" class=\"\" title=\"RecordInsertList example\">"},{"title":"Dynamics 365 Debugging Configuration","comments":1,"date":"2025-02-23T12:37:45.000Z","description":"Dynamics 365 debugging configuration","_content":"\n> 当无法 debug 系统标准的代码时，可以按照本文的步骤配置\n\n导航 Tools > Options，在 Dynamics 365 > Debugging tab 页面配置 debug 相关属性，如下图，在 Included Packages 中选择，在 debug 中需要 load 的 model。\n\n{% asset_img \"xpp-debug-configuration.png\" \"D365 Debugging Configuration\" %}","source":"_posts/xpp-debug-configuration.md","raw":"---\ntitle: Dynamics 365 Debugging Configuration\ncomments: true\ndate: 2025-02-23 20:37:45\ntags:\ncategories:\n - d365\n - x++\ndescription: Dynamics 365 debugging configuration\n---\n\n> 当无法 debug 系统标准的代码时，可以按照本文的步骤配置\n\n导航 Tools > Options，在 Dynamics 365 > Debugging tab 页面配置 debug 相关属性，如下图，在 Included Packages 中选择，在 debug 中需要 load 的 model。\n\n{% asset_img \"xpp-debug-configuration.png\" \"D365 Debugging Configuration\" %}","slug":"xpp-debug-configuration","published":1,"updated":"2025-02-23T12:43:09.275Z","layout":"post","photos":[],"_id":"cm7j2rsch000jqgug33zmc38v","content":"<blockquote>\n<p>当无法 debug 系统标准的代码时，可以按照本文的步骤配置</p>\n</blockquote>\n<p>导航 Tools &gt; Options，在 Dynamics 365 &gt; Debugging tab 页面配置 debug 相关属性，如下图，在 Included Packages 中选择，在 debug 中需要 load 的 model。</p>\n<img src=\"/2025/02/23/xpp-debug-configuration/xpp-debug-configuration.png\" class=\"\" title=\"D365 Debugging Configuration\">","excerpt":"","more":"<blockquote>\n<p>当无法 debug 系统标准的代码时，可以按照本文的步骤配置</p>\n</blockquote>\n<p>导航 Tools &gt; Options，在 Dynamics 365 &gt; Debugging tab 页面配置 debug 相关属性，如下图，在 Included Packages 中选择，在 debug 中需要 load 的 model。</p>\n<img src=\"/2025/02/23/xpp-debug-configuration/xpp-debug-configuration.png\" class=\"\" title=\"D365 Debugging Configuration\">"},{"title":"Invoice Purchase Order Example","comments":1,"date":"2025-02-23T12:51:59.000Z","description":"Invoice Purchase Order Example","_content":"\n> 本文记录了 x++ 代码 invoice 采购订单的示例代码\n\n```c#\nHere is the C# code you provided with all comments removed:\n\n```csharp\npublic class GNCAutoInvoiceVendConsignedPOBatch extends RunBaseBatch implements BatchRetryable\n{\n    SysLookupMultiSelectValues  gInvoiceIds;\n    boolean                     gCreateParmTable;\n    PurchTable                  gPurchTable;\n    boolean                     gMultiPOs;\n    PurchId                     gPurchId;\n    RecordInsertList            gParmLineRecordInsertList, gParmSubLineRecordInsertList, gMarkupTrans;\n    systemSequence              gSystemSequence;\n    Num                         gInvoiceNumber;\n    TransDate                   gInvoiceDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());\n    InvoiceDescriptionLarge     gDescription;\n    Map                         gTableRefIdMap      = new Map(Types::String, Types::String);\n    Map                         gItemMap            = new Map(Types::String, Types::Real);\n    DialogField     gDlgInvoiceIds;\n\n    #define.CurrentVersion(1)\n    #localmacro.CurrentList\n        gInvoiceIds\n    #endmacro\n\n    public boolean canGoBatch()\n    {\n        return true;\n    }\n\n    public boolean canGoBatchJournal()\n    {\n        return true;\n    }\n\n    public Object dialog()\n    {\n        DialogRunbase       dialog = super();\n    \n        gDlgInvoiceIds = dialog.addFieldValue(extendedTypeStr(SysLookupMultiSelectValues), gInvoiceIds, \"@SYS12128\");\n    \n        return dialog;\n    }\n\n    public void dialogPostRun(DialogRunbase _dialog)\n    {\n        super(_dialog);\n\n        Query                   query;\n        QueryBuildDataSource    qbds;\n\n        query   = new Query(queryStr(GNCAutoInvoiceVendConsignedLookupQuery));\n\n        SysLookupMultiSelectCtrl::constructWithQuery(\n                    _dialog.dialogForm().formRun(),\n                    gDlgInvoiceIds.control(),\n                    query,\n                    false,\n                    [tableNum(CustInvoiceJour), fieldNum(CustInvoiceJour, InvoiceId)]\n        );\n    }\n\n    public boolean getFromDialog()\n    {\n        gInvoiceIds = gDlgInvoiceIds.value();\n    \n        return super();\n    }\n\n    public container pack()\n    {\n        return [#CurrentVersion, #CurrentList];\n    }\n\n    static GNCAutoInvoiceVendConsignedPOBatch construct()\n    {\n        return new GNCAutoInvoiceVendConsignedPOBatch();\n    }\n\n    static ClassDescription description()\n    {\n        return \"@GNC:AutoInvoiceVendorConsignedPurchaseOrder\";\n    }\n\n    static void main(Args _args)\n    {\n        GNCAutoInvoiceVendConsignedPOBatch      batch;\n    \n        batch = GNCAutoInvoiceVendConsignedPOBatch::construct();\n    \n        if (batch.prompt())\n        {\n            batch.runOperation();\n        }\n    }\n\n    protected boolean canRunInNewSession()\n    {\n        return false;\n    }\n\n    [Hookable(false)]\n    public final boolean isRetryable()\n    {\n        return false;\n    }\n\n    public Qty getFinalInvoiceQty(ItemId _itemId, Qty _qty)\n    {\n        Qty retQty, storeQty;\n\n        GNCProcessedVendorConsignedInvAdjustments processedVendorConsignedInvAdjustments = GNCProcessedVendorConsignedInvAdjustments::find(_itemId, true);\n\n        if (processedVendorConsignedInvAdjustments.RecId)\n        {\n            ttsbegin;\n            storeQty = processedVendorConsignedInvAdjustments.Qty;\n            retQty = _qty - storeQty;\n            processedVendorConsignedInvAdjustments.Qty = retQty < 0 ? abs(retQty) : 0;\n            processedVendorConsignedInvAdjustments.update();\n            ttscommit;\n        }\n        else\n        {\n            retQty = _qty;\n        }\n\n        return retQty;\n    }\n\n    public void run()\n    {\n        #OCCRetryCount\n\n        setPrefix(\"@GNC:AutoInvoiceVendorConsignedPurchaseOrder\");\n        \n        query                       query_Item      = new Query(queryStr(GNCAutoInvoiceVendConsignedItemQuery));\n        QueryBuildDataSource        qbds;\n        SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, ';', ',');\n        \n        if (qrvInvoiceIds)\n        {\n            qbds = query_Item.dataSourceTable(tableNum(CustInvoiceJour));\n            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n        }\n\n        QueryRun                    queryRunItem    = new QueryRun(query_Item);\n        TransDateTime               earliestDateTime;\n\n        while (queryRunItem.next())\n        {\n            CustInvoiceTrans custInvoiceTrans_Item = queryRunItem.get(tableNum(CustInvoiceTrans));\n\n            Qty finalInvoiceQty = this.getfinalInvoiceQty(custInvoiceTrans_Item.ItemId, custInvoiceTrans_Item.Qty);\n            PurchLine   purchLine_earliest;\n            PurchTable  purchTable_earliest;\n            \n            select firstonly minof(CreatedDateTime) from purchTable_earliest\n                where purchTable_earliest.PurchaseType              == PurchaseType::Purch\n                exists join purchLine_earliest\n                    where purchLine_earliest.PurchId                == purchTable_earliest.PurchId\n                        && !purchLine_earliest.Blocked\n                        && !purchLine_earliest.IsDeleted\n                        && (purchLine_earliest.PurchStatus          == PurchStatus::Backorder\n                        || purchLine_earliest.PurchStatus           == PurchStatus::Received)\n                        && purchLine_earliest.ItemId                == custInvoiceTrans_Item.ItemId\n                        && purchLine_earliest.RemainPurchFinancial  > 0;\n\n            if (!earliestDateTime || earliestDateTime > purchTable_earliest.CreatedDateTime)\n            {\n                earliestDateTime = purchTable_earliest.CreatedDateTime;\n            }\n        }\n\n        if (!gItemMap.empty())\n        {\n            while select gPurchTable\n                where gPurchTable.PurchaseType      == PurchaseType::Purch\n                    && gPurchTable.CreatedDateTime  >= earliestDateTime\n                    && (gPurchTable.PurchStatus     == PurchStatus::Backorder\n                    || gPurchTable.PurchStatus      == PurchStatus::Received)\n            {\n                try\n                {\n                    this.processSinglePO();\n                }\n                catch (Exception::Deadlock)\n                {\n                    retry;\n                }\n                catch (Exception::UpdateConflict)\n                {\n                    if (appl.ttsLevel() == 0)\n                    {\n                        if (xSession::currentRetryCount() >= #RetryNum)\n                        {\n                            throw Exception::UpdateConflictNotRecovered;\n                        }\n                        else\n                        {\n                            retry;\n                        }\n                    }\n                    else\n                    {\n                        throw Exception::UpdateConflict;\n                    }\n                }\n                catch\n                {\n                    if (appl.ttsLevel() != 0)\n                    {\n                        ttsabort;\n                    }\n                    continue;\n                }\n            }\n\n            this.insertExceptions();\n        }\n\n\n        Query   query_jour = new Query();\n\n        qbds = query_jour.addDataSource(tableNum(CustInvoiceJour));\n        \n        if (qrvInvoiceIds)\n        {\n            qbds = query_jour.dataSourceTable(tableNum(CustInvoiceJour));\n            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n        }\n\n        QueryRun    queryRunJour    = new QueryRun(query_jour);\n        \n        while (queryRunJour.next())\n        {\n            try\n            {\n                CustInvoiceJour custInvoiceJourUpd = queryRunJour.get(tableNum(CustInvoiceJour));\n\n                custInvoiceJourUpd.selectForUpdate(true);\n\n                ttsbegin;\n                custInvoiceJourUpd.GNCProcessedVendConsignedInvoice = true;\n                custInvoiceJourUpd.update();\n                ttscommit;\n            }\n            catch (Exception::Deadlock)\n            {\n                retry;\n            }\n            catch (Exception::UpdateConflict)\n            {\n                if (appl.ttsLevel() == 0)\n                {\n                    if (xSession::currentRetryCount() >= #RetryNum)\n                    {\n                        throw Exception::UpdateConflictNotRecovered;\n                    }\n                    else\n                    {\n                        retry;\n                    }\n                }\n                else\n                {\n                    throw Exception::UpdateConflict;\n                }\n            }\n            catch\n            {\n                if (appl.ttsLevel() != 0)\n                {\n                    ttsabort;\n                }\n                continue;\n            }\n        }\n    }\n\n    public void processSinglePO()\n    {\n        PurchLine                   purchLine, prevPurchLine;\n        VendPackingSlipTrans        vendPackingSlipTrans;\n        Map                         packingSlipTransMap = new Map(Types::Int64, Types::Real);\n        QueryRun                    queryRun;\n        CustInvoiceTrans            custInvoiceTrans;\n        Qty                         qtyToInvoice;\n            \n        gPurchId = gPurchTable.PurchId;\n\n        this.initParameters();\n        this.initRecordLists();\n\n        while select purchLine\n            where purchLine.PurchId                             == gPurchTable.PurchId\n                && !purchLine.Blocked\n                && !purchLine.IsDeleted\n                && (purchLine.PurchStatus                       == PurchStatus::Backorder\n                || purchLine.PurchStatus                        == PurchStatus::Received)\n                && purchLine.RemainPurchFinancial               > 0\n                join vendPackingSlipTrans\n                    where vendPackingSlipTrans.InventTransId    == purchLine.InventTransId\n        {\n            Qty         purchRemain = vendPackingSlipTrans.remainPurchFinancial();\n            Qty         curQty;\n            \n            if (!purchRemain)\n            {\n                continue;\n            }\n\n            if (!gItemMap.exists(purchLine.ItemId))\n            {\n                continue;\n            }\n\n            qtyToInvoice = gItemMap.lookup(purchLine.ItemId);\n\n            if (!qtyToInvoice)\n            {\n                continue;\n            }\n\n            if (qtyToInvoice > purchRemain)\n            {\n                curQty          = purchRemain;\n                qtyToInvoice    -= purchRemain;\n            }\n            else\n            {\n                curQty          = abs(qtyToInvoice);\n                qtyToInvoice    = 0;\n            }\n\n            if (purchLine.RecId != prevPurchLine.RecId)\n            {\n                if (packingSlipTransMap.elements() > 0)\n                {\n                    this.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());\n                }\n                prevPurchLine       = purchLine.data();\n                packingSlipTransMap = new Map(Types::Int64, Types::Real);\n            }\n\n            packingSlipTransMap.insert(vendPackingSlipTrans.RecId, curQty);\n            gItemMap.insert(purchLine.ItemId, qtyToInvoice);\n        }\n\n        if (prevPurchLine.RecId && packingSlipTransMap.elements() > 0)\n        {\n            this.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());\n        }\n\n        if (gCreateParmTable)\n        {\n            gInvoiceNumber = gPurchTable.PurchId;\n\n            VendInvoiceJour vendInvoiceJour;\n            Counter         i;\n\n            select firstonly RecId from vendInvoiceJour\n                where vendInvoiceJour.InvoiceId == gInvoiceNumber;\n\n            while (vendInvoiceJour.RecId)\n            {\n                i++;\n                vendInvoiceJour.clear();\n\n                gInvoiceNumber = strfmt('%1_%2', gPurchTable.PurchId, i);\n\n                select firstonly RecId from vendInvoiceJour\n                    where vendInvoiceJour.InvoiceId == gInvoiceNumber;\n            }\n\n            VendInvoiceInfoTable        vendInvoiceInfoTable;\n\n            ttsbegin;\n            vendInvoiceInfoTable = this.createParmTable();\n\n            this.insertRecordLists();\n            \n            PurchFormLetter_Invoice purchFormLetter = PurchFormLetter_Invoice::newFromSavedInvoice(vendInvoiceInfoTable);\n            purchFormLetter.purchTable(gPurchTable);\n            purchFormLetter.printFormLetter(false);\n            purchFormLetter.proforma(false);\n            purchFormLetter.parmId(vendInvoiceInfoTable.ParmId);\n            purchFormLetter.update(vendInvoiceInfoTable, vendInvoiceInfoTable.Num);\n\n            ttscommit;\n\n            select firstonly RecId from vendInvoiceJour\n                where vendInvoiceJour.InvoiceId == vendInvoiceInfoTable.Num;\n\n            if (vendInvoiceJour)\n            {\n                Info(strFmt(\"Vendor invoice journal %1 is posted.\", vendInvoiceInfoTable.Num));\n            }\n        }\n    }\n\n    public void insertExceptions()\n    {\n        MapEnumerator itemME = gItemMap.getEnumerator();\n\n        while (itemME.moveNext())\n        {\n            ItemId                      itemId  = itemME.currentKey();\n            Qty                         qtyExce = itemME.currentValue(); \n\n            if (!qtyExce)\n            {\n                continue;\n            }\n\n            query                       query   = new Query(queryStr(GNCAutoInvoiceVendConsignedQuery));\n            QueryBuildDataSource        qbds;\n            SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, ';', ',');\n            QueryRun                    queryRun;\n            \n            qbds = query.dataSourceTable(tableNum(CustInvoiceTrans));\n            qbds.addRange(fieldNum(CustInvoiceTrans, ItemId)).value(itemId);\n\n            if (qrvInvoiceIds)\n            {\n                qbds = query.dataSourceTable(tableNum(CustInvoiceJour));\n                qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n            }\n\n            queryRun = new QueryRun(query);\n\n            while (queryRun.next())\n            {\n                CustInvoiceTrans    custInvoiceTrans = queryRun.get(tableNum(CustInvoiceTrans));\n                Qty                 qtyRemain, curQty;\n\n                qtyRemain = custInvoiceTrans.Qty;\n\n                if (qtyExce > qtyRemain)\n                {\n                    curQty      = qtyRemain;\n                    qtyExce     -= qtyRemain;\n                }\n                else\n                {\n                    curQty      = qtyExce;\n                    qtyExce     = 0;\n                }\n\n                GNCAutoInvoiceVendConsignedException::create(gInvoiceDate, \n                    custInvoiceTrans.SalesId, \n                    custInvoiceTrans.InvoiceDate, \n                    custInvoiceTrans.ItemId, \n                    custInvoiceTrans.Qty, \n                    curQty);\n\n                if (!qtyExce)\n                {\n                    break;\n                }\n            }\n        }\n    }\n\n    public void initParameters()\n    {\n        gSystemSequence     = new systemSequence();\n        gCreateParmTable    = false;\n    }\n\n    public TradeLineRefId getTableRefId()\n    {\n        if (!gTableRefIdMap.exists(gPurchId))\n        {\n            gTableRefIdMap.insert(gPurchId, formletterParmData::getNewTableRefId());\n        }\n\n        return gTableRefIdMap.lookup(gPurchId);\n    }\n\n    public void initRecordLists()\n    {\n        gParmLineRecordInsertList       = new RecordInsertList(tableNum(VendInvoiceInfoLine));\n        gParmSubLineRecordInsertList    = new RecordInsertList(tableNum(VendInvoiceInfoSubLine));\n        gMarkupTrans    = new RecordInsertList(tableNum(MarkupTrans));\n    }\n\n    public void insertParmLine(VendInvoiceInfoLine _vendInvoiceInfoLine, PurchLine _purchLine)\n    {\n        gSystemSequence.suspendRecIds(_vendInvoiceInfoLine.TableId);\n        _vendInvoiceInfoLine.RecId  = gSystemSequence.reserveValues(1, _vendInvoiceInfoLine.TableId);\n\n        gParmLineRecordInsertList.add(_vendInvoiceInfoLine);\n    }\n\n    public void createVendInvoiceMatchingLine(PurchLine _purchLine, VendDocumentLineMap _parmLine)\n    {\n        VendInvoiceMatchingLine vendInvoiceMatchingLine;\n\n        if (_parmLine.TableId && _parmLine.RecId && _purchLine)\n        {\n            vendInvoiceMatchingLine.clear();\n            vendInvoiceMatchingLine.initExpectedValues(_purchLine, _parmLine);\n            vendInvoiceMatchingLine.RefTableId = _parmLine.TableId;\n            vendInvoiceMatchingLine.RefRecId = _parmLine.RecId;\n            vendInvoiceMatchingLine.insert();\n        }\n    }\n\n    public void createMarkupTrans(PurchLine _purchLine, VendInvoiceInfoLine _vendInvoiceInfoLine)\n    {\n        MarkupTrans markupTrans, markupTransNew;\n\n        while select markupTrans\n            where markupTrans.TransTableId  == _purchLine.TableId\n                && markupTrans.TransRecId   == _purchLine.RecId\n                && markupTrans.Value        != 0\n        {\n            buf2Buf(markupTrans, markupTransNew);\n            markupTransNew.TransTableId       = _vendInvoiceInfoLine.TableId;\n            markupTransNew.TransRecId         = _vendInvoiceInfoLine.RecId;\n            gMarkupTrans.add(markupTransNew);\n        }\n    }\n\n    public void insertParmSubLine(VendInvoiceInfoSubLine _vendInvoiceInfoSubLine)\n    {\n        if (_vendInvoiceInfoSubLine.ReceiveNow == 0)\n        {\n            return;\n        }\n\n        gParmSubLineRecordInsertList.add(_vendInvoiceInfoSubLine);\n    }\n\n    public void insertRecordLists()\n    {\n        gParmLineRecordInsertList.insertDatabase();\n        gParmSubLineRecordInsertList.insertDatabase();\n        gMarkupTrans.insertDatabase();\n    }\n\n    public void createParmLineAndSubLines(PurchLine _purchLine, container _packedSubLinesMap)\n    {\n        MapEnumerator           me;\n        VendInvoiceInfoLine     vendInvoiceInfoLine;\n        Qty                     newPostingQty;\n        VendPackingSlipTrans    vendPackingSlipTrans;\n        Set                     subLineSet      = new Set(Types::Record);\n\n        me = Map::create(_packedSubLinesMap).getEnumerator();\n\n        while (me.moveNext())\n        {\n            RefRecId        vendPackingSlipTransRecId   = me.currentKey();\n            Qty             qty                         = me.currentValue();\n\n            vendPackingSlipTrans            = VendPackingSlipTrans::findRecId(vendPackingSlipTransRecId);\n\n            vendPackingSlipTrans.Qty        = qty;\n            vendPackingSlipTrans.InventQty  = qty;\n            newPostingQty                   += qty;\n\n            subLineSet.add(vendPackingSlipTrans);\n        }\n        \n        if (newPostingQty == 0)\n        {\n            return;\n        }\n\n        vendInvoiceInfoLine = this.createParmLine(_purchLine, newPostingQty);\n\n        this.createParmSubLines(vendInvoiceInfoLine, subLineSet);\n        \n        gCreateParmTable = true;\n    }\n\n    public VendInvoiceInfoLine createParmLine(PurchLine _purchLine, Qty _receiveNow)\n    {\n        VendInvoiceInfoLine vendInvoiceInfoLine;\n\n        vendInvoiceInfoLine.Ordering        = DocumentStatus::Invoice;\n        vendInvoiceInfoLine.TableRefId      = this.getTableRefId();\n        vendInvoiceInfoLine.DocumentOrigin  = DocumentOrigin::Manual;\n        vendInvoiceInfoLine.initFromPurchLine(_purchLine);\n        vendInvoiceInfoLine.defaultRow(_purchLine, null, _receiveNow, _receiveNow);\n\n        this.insertParmLine(vendInvoiceInfoLine, _purchLine);\n        \n        gCreateParmTable = true;\n\n        return vendInvoiceInfoLine;\n    }\n\n    public void createParmSubLines(VendInvoiceInfoLine _vendInvoiceInfoLine, Set _subLineSet)\n    {\n        VendPackingSlipTrans    vendPackingSlipTrans;\n        VendInvoiceInfoSubLine  vendInvoiceInfoSubLine;\n        SetEnumerator           se = _subLineSet.getEnumerator();\n\n        while (se.moveNext())\n        {\n            vendPackingSlipTrans = se.current();\n\n            vend\n\nInvoiceInfoSubLine.clear();\n            vendInvoiceInfoSubLine.initFromLine(_vendInvoiceInfoLine);\n            vendInvoiceInfoSubLine.initFromVendPackingSlipTrans(vendPackingSlipTrans);\n            this.insertParmSubLine(vendInvoiceInfoSubLine);\n        }\n\n        if (!_vendInvoiceInfoLine.vendInvoiceInfoSubTable())\n        {\n            VendInvoiceInfoSubTable::createFromVendInvoiceInfoLine(_vendInvoiceInfoLine, _vendInvoiceInfoLine.ParmId, gDescription, true);\n        }\n    }\n\n    public VendInvoiceInfoTable createParmTable()\n    {\n        VendInvoiceInfoTable        vendInvoiceInfoTable;\n\n        vendInvoiceInfoTable.clear();\n        vendInvoiceInfoTable.initValue();\n        vendInvoiceInfoTable.defaultRow(gPurchTable);\n        vendInvoiceInfoTable.initFromPurchTable(gPurchTable);\n        vendInvoiceInfoTable.DocumentOrigin         = DocumentOrigin::Manual;\n        vendInvoiceInfoTable.Num                    = gInvoiceNumber;\n        vendInvoiceInfoTable.VendInvoiceSaveStatus  = VendInvoiceSaveStatus::Pending;\n        vendInvoiceInfoTable.Description            = 'Retail POS Sale';\n        vendInvoiceInfoTable.DocumentDate           = gInvoiceDate;\n        vendInvoiceInfoTable.TransDate              = gInvoiceDate;\n        vendInvoiceInfoTable.LastMatchVariance      = LastMatchVarianceOptions::OK;\n        vendInvoiceInfoTable.ParmJobStatus          = ParmJobStatus::Waiting;\n        vendInvoiceInfoTable.Approved               = NoYes::Yes;\n        vendInvoiceInfoTable.Approver               = HcmWorker::userId2Worker(curUserId());\n        vendInvoiceInfoTable.TableRefId             = this.getTableRefId();\n        vendInvoiceInfoTable.Ordering               = DocumentStatus::Invoice;\n        vendInvoiceInfoTable.initInvoiceTotals();\n        vendInvoiceInfoTable.insert();\n        \n        return vendInvoiceInfoTable;\n    }\n\n    public void createParmSubTable(VendInvoiceInfoTable _vendInvoiceInfoTable)\n    {\n        VendInvoiceInfoSubTable::createFromVendInvoiceInfoTable(_vendInvoiceInfoTable, true);\n    }\n}\n```","source":"_posts/xpp-invoice-purchase-order.md","raw":"---\ntitle: Invoice Purchase Order Example\ncomments: true\ndate: 2025-02-23 20:51:59\ntags:\ncategories:\n - d365\n - x++\ndescription: Invoice Purchase Order Example\n---\n\n> 本文记录了 x++ 代码 invoice 采购订单的示例代码\n\n```c#\nHere is the C# code you provided with all comments removed:\n\n```csharp\npublic class GNCAutoInvoiceVendConsignedPOBatch extends RunBaseBatch implements BatchRetryable\n{\n    SysLookupMultiSelectValues  gInvoiceIds;\n    boolean                     gCreateParmTable;\n    PurchTable                  gPurchTable;\n    boolean                     gMultiPOs;\n    PurchId                     gPurchId;\n    RecordInsertList            gParmLineRecordInsertList, gParmSubLineRecordInsertList, gMarkupTrans;\n    systemSequence              gSystemSequence;\n    Num                         gInvoiceNumber;\n    TransDate                   gInvoiceDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());\n    InvoiceDescriptionLarge     gDescription;\n    Map                         gTableRefIdMap      = new Map(Types::String, Types::String);\n    Map                         gItemMap            = new Map(Types::String, Types::Real);\n    DialogField     gDlgInvoiceIds;\n\n    #define.CurrentVersion(1)\n    #localmacro.CurrentList\n        gInvoiceIds\n    #endmacro\n\n    public boolean canGoBatch()\n    {\n        return true;\n    }\n\n    public boolean canGoBatchJournal()\n    {\n        return true;\n    }\n\n    public Object dialog()\n    {\n        DialogRunbase       dialog = super();\n    \n        gDlgInvoiceIds = dialog.addFieldValue(extendedTypeStr(SysLookupMultiSelectValues), gInvoiceIds, \"@SYS12128\");\n    \n        return dialog;\n    }\n\n    public void dialogPostRun(DialogRunbase _dialog)\n    {\n        super(_dialog);\n\n        Query                   query;\n        QueryBuildDataSource    qbds;\n\n        query   = new Query(queryStr(GNCAutoInvoiceVendConsignedLookupQuery));\n\n        SysLookupMultiSelectCtrl::constructWithQuery(\n                    _dialog.dialogForm().formRun(),\n                    gDlgInvoiceIds.control(),\n                    query,\n                    false,\n                    [tableNum(CustInvoiceJour), fieldNum(CustInvoiceJour, InvoiceId)]\n        );\n    }\n\n    public boolean getFromDialog()\n    {\n        gInvoiceIds = gDlgInvoiceIds.value();\n    \n        return super();\n    }\n\n    public container pack()\n    {\n        return [#CurrentVersion, #CurrentList];\n    }\n\n    static GNCAutoInvoiceVendConsignedPOBatch construct()\n    {\n        return new GNCAutoInvoiceVendConsignedPOBatch();\n    }\n\n    static ClassDescription description()\n    {\n        return \"@GNC:AutoInvoiceVendorConsignedPurchaseOrder\";\n    }\n\n    static void main(Args _args)\n    {\n        GNCAutoInvoiceVendConsignedPOBatch      batch;\n    \n        batch = GNCAutoInvoiceVendConsignedPOBatch::construct();\n    \n        if (batch.prompt())\n        {\n            batch.runOperation();\n        }\n    }\n\n    protected boolean canRunInNewSession()\n    {\n        return false;\n    }\n\n    [Hookable(false)]\n    public final boolean isRetryable()\n    {\n        return false;\n    }\n\n    public Qty getFinalInvoiceQty(ItemId _itemId, Qty _qty)\n    {\n        Qty retQty, storeQty;\n\n        GNCProcessedVendorConsignedInvAdjustments processedVendorConsignedInvAdjustments = GNCProcessedVendorConsignedInvAdjustments::find(_itemId, true);\n\n        if (processedVendorConsignedInvAdjustments.RecId)\n        {\n            ttsbegin;\n            storeQty = processedVendorConsignedInvAdjustments.Qty;\n            retQty = _qty - storeQty;\n            processedVendorConsignedInvAdjustments.Qty = retQty < 0 ? abs(retQty) : 0;\n            processedVendorConsignedInvAdjustments.update();\n            ttscommit;\n        }\n        else\n        {\n            retQty = _qty;\n        }\n\n        return retQty;\n    }\n\n    public void run()\n    {\n        #OCCRetryCount\n\n        setPrefix(\"@GNC:AutoInvoiceVendorConsignedPurchaseOrder\");\n        \n        query                       query_Item      = new Query(queryStr(GNCAutoInvoiceVendConsignedItemQuery));\n        QueryBuildDataSource        qbds;\n        SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, ';', ',');\n        \n        if (qrvInvoiceIds)\n        {\n            qbds = query_Item.dataSourceTable(tableNum(CustInvoiceJour));\n            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n        }\n\n        QueryRun                    queryRunItem    = new QueryRun(query_Item);\n        TransDateTime               earliestDateTime;\n\n        while (queryRunItem.next())\n        {\n            CustInvoiceTrans custInvoiceTrans_Item = queryRunItem.get(tableNum(CustInvoiceTrans));\n\n            Qty finalInvoiceQty = this.getfinalInvoiceQty(custInvoiceTrans_Item.ItemId, custInvoiceTrans_Item.Qty);\n            PurchLine   purchLine_earliest;\n            PurchTable  purchTable_earliest;\n            \n            select firstonly minof(CreatedDateTime) from purchTable_earliest\n                where purchTable_earliest.PurchaseType              == PurchaseType::Purch\n                exists join purchLine_earliest\n                    where purchLine_earliest.PurchId                == purchTable_earliest.PurchId\n                        && !purchLine_earliest.Blocked\n                        && !purchLine_earliest.IsDeleted\n                        && (purchLine_earliest.PurchStatus          == PurchStatus::Backorder\n                        || purchLine_earliest.PurchStatus           == PurchStatus::Received)\n                        && purchLine_earliest.ItemId                == custInvoiceTrans_Item.ItemId\n                        && purchLine_earliest.RemainPurchFinancial  > 0;\n\n            if (!earliestDateTime || earliestDateTime > purchTable_earliest.CreatedDateTime)\n            {\n                earliestDateTime = purchTable_earliest.CreatedDateTime;\n            }\n        }\n\n        if (!gItemMap.empty())\n        {\n            while select gPurchTable\n                where gPurchTable.PurchaseType      == PurchaseType::Purch\n                    && gPurchTable.CreatedDateTime  >= earliestDateTime\n                    && (gPurchTable.PurchStatus     == PurchStatus::Backorder\n                    || gPurchTable.PurchStatus      == PurchStatus::Received)\n            {\n                try\n                {\n                    this.processSinglePO();\n                }\n                catch (Exception::Deadlock)\n                {\n                    retry;\n                }\n                catch (Exception::UpdateConflict)\n                {\n                    if (appl.ttsLevel() == 0)\n                    {\n                        if (xSession::currentRetryCount() >= #RetryNum)\n                        {\n                            throw Exception::UpdateConflictNotRecovered;\n                        }\n                        else\n                        {\n                            retry;\n                        }\n                    }\n                    else\n                    {\n                        throw Exception::UpdateConflict;\n                    }\n                }\n                catch\n                {\n                    if (appl.ttsLevel() != 0)\n                    {\n                        ttsabort;\n                    }\n                    continue;\n                }\n            }\n\n            this.insertExceptions();\n        }\n\n\n        Query   query_jour = new Query();\n\n        qbds = query_jour.addDataSource(tableNum(CustInvoiceJour));\n        \n        if (qrvInvoiceIds)\n        {\n            qbds = query_jour.dataSourceTable(tableNum(CustInvoiceJour));\n            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n        }\n\n        QueryRun    queryRunJour    = new QueryRun(query_jour);\n        \n        while (queryRunJour.next())\n        {\n            try\n            {\n                CustInvoiceJour custInvoiceJourUpd = queryRunJour.get(tableNum(CustInvoiceJour));\n\n                custInvoiceJourUpd.selectForUpdate(true);\n\n                ttsbegin;\n                custInvoiceJourUpd.GNCProcessedVendConsignedInvoice = true;\n                custInvoiceJourUpd.update();\n                ttscommit;\n            }\n            catch (Exception::Deadlock)\n            {\n                retry;\n            }\n            catch (Exception::UpdateConflict)\n            {\n                if (appl.ttsLevel() == 0)\n                {\n                    if (xSession::currentRetryCount() >= #RetryNum)\n                    {\n                        throw Exception::UpdateConflictNotRecovered;\n                    }\n                    else\n                    {\n                        retry;\n                    }\n                }\n                else\n                {\n                    throw Exception::UpdateConflict;\n                }\n            }\n            catch\n            {\n                if (appl.ttsLevel() != 0)\n                {\n                    ttsabort;\n                }\n                continue;\n            }\n        }\n    }\n\n    public void processSinglePO()\n    {\n        PurchLine                   purchLine, prevPurchLine;\n        VendPackingSlipTrans        vendPackingSlipTrans;\n        Map                         packingSlipTransMap = new Map(Types::Int64, Types::Real);\n        QueryRun                    queryRun;\n        CustInvoiceTrans            custInvoiceTrans;\n        Qty                         qtyToInvoice;\n            \n        gPurchId = gPurchTable.PurchId;\n\n        this.initParameters();\n        this.initRecordLists();\n\n        while select purchLine\n            where purchLine.PurchId                             == gPurchTable.PurchId\n                && !purchLine.Blocked\n                && !purchLine.IsDeleted\n                && (purchLine.PurchStatus                       == PurchStatus::Backorder\n                || purchLine.PurchStatus                        == PurchStatus::Received)\n                && purchLine.RemainPurchFinancial               > 0\n                join vendPackingSlipTrans\n                    where vendPackingSlipTrans.InventTransId    == purchLine.InventTransId\n        {\n            Qty         purchRemain = vendPackingSlipTrans.remainPurchFinancial();\n            Qty         curQty;\n            \n            if (!purchRemain)\n            {\n                continue;\n            }\n\n            if (!gItemMap.exists(purchLine.ItemId))\n            {\n                continue;\n            }\n\n            qtyToInvoice = gItemMap.lookup(purchLine.ItemId);\n\n            if (!qtyToInvoice)\n            {\n                continue;\n            }\n\n            if (qtyToInvoice > purchRemain)\n            {\n                curQty          = purchRemain;\n                qtyToInvoice    -= purchRemain;\n            }\n            else\n            {\n                curQty          = abs(qtyToInvoice);\n                qtyToInvoice    = 0;\n            }\n\n            if (purchLine.RecId != prevPurchLine.RecId)\n            {\n                if (packingSlipTransMap.elements() > 0)\n                {\n                    this.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());\n                }\n                prevPurchLine       = purchLine.data();\n                packingSlipTransMap = new Map(Types::Int64, Types::Real);\n            }\n\n            packingSlipTransMap.insert(vendPackingSlipTrans.RecId, curQty);\n            gItemMap.insert(purchLine.ItemId, qtyToInvoice);\n        }\n\n        if (prevPurchLine.RecId && packingSlipTransMap.elements() > 0)\n        {\n            this.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());\n        }\n\n        if (gCreateParmTable)\n        {\n            gInvoiceNumber = gPurchTable.PurchId;\n\n            VendInvoiceJour vendInvoiceJour;\n            Counter         i;\n\n            select firstonly RecId from vendInvoiceJour\n                where vendInvoiceJour.InvoiceId == gInvoiceNumber;\n\n            while (vendInvoiceJour.RecId)\n            {\n                i++;\n                vendInvoiceJour.clear();\n\n                gInvoiceNumber = strfmt('%1_%2', gPurchTable.PurchId, i);\n\n                select firstonly RecId from vendInvoiceJour\n                    where vendInvoiceJour.InvoiceId == gInvoiceNumber;\n            }\n\n            VendInvoiceInfoTable        vendInvoiceInfoTable;\n\n            ttsbegin;\n            vendInvoiceInfoTable = this.createParmTable();\n\n            this.insertRecordLists();\n            \n            PurchFormLetter_Invoice purchFormLetter = PurchFormLetter_Invoice::newFromSavedInvoice(vendInvoiceInfoTable);\n            purchFormLetter.purchTable(gPurchTable);\n            purchFormLetter.printFormLetter(false);\n            purchFormLetter.proforma(false);\n            purchFormLetter.parmId(vendInvoiceInfoTable.ParmId);\n            purchFormLetter.update(vendInvoiceInfoTable, vendInvoiceInfoTable.Num);\n\n            ttscommit;\n\n            select firstonly RecId from vendInvoiceJour\n                where vendInvoiceJour.InvoiceId == vendInvoiceInfoTable.Num;\n\n            if (vendInvoiceJour)\n            {\n                Info(strFmt(\"Vendor invoice journal %1 is posted.\", vendInvoiceInfoTable.Num));\n            }\n        }\n    }\n\n    public void insertExceptions()\n    {\n        MapEnumerator itemME = gItemMap.getEnumerator();\n\n        while (itemME.moveNext())\n        {\n            ItemId                      itemId  = itemME.currentKey();\n            Qty                         qtyExce = itemME.currentValue(); \n\n            if (!qtyExce)\n            {\n                continue;\n            }\n\n            query                       query   = new Query(queryStr(GNCAutoInvoiceVendConsignedQuery));\n            QueryBuildDataSource        qbds;\n            SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, ';', ',');\n            QueryRun                    queryRun;\n            \n            qbds = query.dataSourceTable(tableNum(CustInvoiceTrans));\n            qbds.addRange(fieldNum(CustInvoiceTrans, ItemId)).value(itemId);\n\n            if (qrvInvoiceIds)\n            {\n                qbds = query.dataSourceTable(tableNum(CustInvoiceJour));\n                qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).value(qrvInvoiceIds);\n            }\n\n            queryRun = new QueryRun(query);\n\n            while (queryRun.next())\n            {\n                CustInvoiceTrans    custInvoiceTrans = queryRun.get(tableNum(CustInvoiceTrans));\n                Qty                 qtyRemain, curQty;\n\n                qtyRemain = custInvoiceTrans.Qty;\n\n                if (qtyExce > qtyRemain)\n                {\n                    curQty      = qtyRemain;\n                    qtyExce     -= qtyRemain;\n                }\n                else\n                {\n                    curQty      = qtyExce;\n                    qtyExce     = 0;\n                }\n\n                GNCAutoInvoiceVendConsignedException::create(gInvoiceDate, \n                    custInvoiceTrans.SalesId, \n                    custInvoiceTrans.InvoiceDate, \n                    custInvoiceTrans.ItemId, \n                    custInvoiceTrans.Qty, \n                    curQty);\n\n                if (!qtyExce)\n                {\n                    break;\n                }\n            }\n        }\n    }\n\n    public void initParameters()\n    {\n        gSystemSequence     = new systemSequence();\n        gCreateParmTable    = false;\n    }\n\n    public TradeLineRefId getTableRefId()\n    {\n        if (!gTableRefIdMap.exists(gPurchId))\n        {\n            gTableRefIdMap.insert(gPurchId, formletterParmData::getNewTableRefId());\n        }\n\n        return gTableRefIdMap.lookup(gPurchId);\n    }\n\n    public void initRecordLists()\n    {\n        gParmLineRecordInsertList       = new RecordInsertList(tableNum(VendInvoiceInfoLine));\n        gParmSubLineRecordInsertList    = new RecordInsertList(tableNum(VendInvoiceInfoSubLine));\n        gMarkupTrans    = new RecordInsertList(tableNum(MarkupTrans));\n    }\n\n    public void insertParmLine(VendInvoiceInfoLine _vendInvoiceInfoLine, PurchLine _purchLine)\n    {\n        gSystemSequence.suspendRecIds(_vendInvoiceInfoLine.TableId);\n        _vendInvoiceInfoLine.RecId  = gSystemSequence.reserveValues(1, _vendInvoiceInfoLine.TableId);\n\n        gParmLineRecordInsertList.add(_vendInvoiceInfoLine);\n    }\n\n    public void createVendInvoiceMatchingLine(PurchLine _purchLine, VendDocumentLineMap _parmLine)\n    {\n        VendInvoiceMatchingLine vendInvoiceMatchingLine;\n\n        if (_parmLine.TableId && _parmLine.RecId && _purchLine)\n        {\n            vendInvoiceMatchingLine.clear();\n            vendInvoiceMatchingLine.initExpectedValues(_purchLine, _parmLine);\n            vendInvoiceMatchingLine.RefTableId = _parmLine.TableId;\n            vendInvoiceMatchingLine.RefRecId = _parmLine.RecId;\n            vendInvoiceMatchingLine.insert();\n        }\n    }\n\n    public void createMarkupTrans(PurchLine _purchLine, VendInvoiceInfoLine _vendInvoiceInfoLine)\n    {\n        MarkupTrans markupTrans, markupTransNew;\n\n        while select markupTrans\n            where markupTrans.TransTableId  == _purchLine.TableId\n                && markupTrans.TransRecId   == _purchLine.RecId\n                && markupTrans.Value        != 0\n        {\n            buf2Buf(markupTrans, markupTransNew);\n            markupTransNew.TransTableId       = _vendInvoiceInfoLine.TableId;\n            markupTransNew.TransRecId         = _vendInvoiceInfoLine.RecId;\n            gMarkupTrans.add(markupTransNew);\n        }\n    }\n\n    public void insertParmSubLine(VendInvoiceInfoSubLine _vendInvoiceInfoSubLine)\n    {\n        if (_vendInvoiceInfoSubLine.ReceiveNow == 0)\n        {\n            return;\n        }\n\n        gParmSubLineRecordInsertList.add(_vendInvoiceInfoSubLine);\n    }\n\n    public void insertRecordLists()\n    {\n        gParmLineRecordInsertList.insertDatabase();\n        gParmSubLineRecordInsertList.insertDatabase();\n        gMarkupTrans.insertDatabase();\n    }\n\n    public void createParmLineAndSubLines(PurchLine _purchLine, container _packedSubLinesMap)\n    {\n        MapEnumerator           me;\n        VendInvoiceInfoLine     vendInvoiceInfoLine;\n        Qty                     newPostingQty;\n        VendPackingSlipTrans    vendPackingSlipTrans;\n        Set                     subLineSet      = new Set(Types::Record);\n\n        me = Map::create(_packedSubLinesMap).getEnumerator();\n\n        while (me.moveNext())\n        {\n            RefRecId        vendPackingSlipTransRecId   = me.currentKey();\n            Qty             qty                         = me.currentValue();\n\n            vendPackingSlipTrans            = VendPackingSlipTrans::findRecId(vendPackingSlipTransRecId);\n\n            vendPackingSlipTrans.Qty        = qty;\n            vendPackingSlipTrans.InventQty  = qty;\n            newPostingQty                   += qty;\n\n            subLineSet.add(vendPackingSlipTrans);\n        }\n        \n        if (newPostingQty == 0)\n        {\n            return;\n        }\n\n        vendInvoiceInfoLine = this.createParmLine(_purchLine, newPostingQty);\n\n        this.createParmSubLines(vendInvoiceInfoLine, subLineSet);\n        \n        gCreateParmTable = true;\n    }\n\n    public VendInvoiceInfoLine createParmLine(PurchLine _purchLine, Qty _receiveNow)\n    {\n        VendInvoiceInfoLine vendInvoiceInfoLine;\n\n        vendInvoiceInfoLine.Ordering        = DocumentStatus::Invoice;\n        vendInvoiceInfoLine.TableRefId      = this.getTableRefId();\n        vendInvoiceInfoLine.DocumentOrigin  = DocumentOrigin::Manual;\n        vendInvoiceInfoLine.initFromPurchLine(_purchLine);\n        vendInvoiceInfoLine.defaultRow(_purchLine, null, _receiveNow, _receiveNow);\n\n        this.insertParmLine(vendInvoiceInfoLine, _purchLine);\n        \n        gCreateParmTable = true;\n\n        return vendInvoiceInfoLine;\n    }\n\n    public void createParmSubLines(VendInvoiceInfoLine _vendInvoiceInfoLine, Set _subLineSet)\n    {\n        VendPackingSlipTrans    vendPackingSlipTrans;\n        VendInvoiceInfoSubLine  vendInvoiceInfoSubLine;\n        SetEnumerator           se = _subLineSet.getEnumerator();\n\n        while (se.moveNext())\n        {\n            vendPackingSlipTrans = se.current();\n\n            vend\n\nInvoiceInfoSubLine.clear();\n            vendInvoiceInfoSubLine.initFromLine(_vendInvoiceInfoLine);\n            vendInvoiceInfoSubLine.initFromVendPackingSlipTrans(vendPackingSlipTrans);\n            this.insertParmSubLine(vendInvoiceInfoSubLine);\n        }\n\n        if (!_vendInvoiceInfoLine.vendInvoiceInfoSubTable())\n        {\n            VendInvoiceInfoSubTable::createFromVendInvoiceInfoLine(_vendInvoiceInfoLine, _vendInvoiceInfoLine.ParmId, gDescription, true);\n        }\n    }\n\n    public VendInvoiceInfoTable createParmTable()\n    {\n        VendInvoiceInfoTable        vendInvoiceInfoTable;\n\n        vendInvoiceInfoTable.clear();\n        vendInvoiceInfoTable.initValue();\n        vendInvoiceInfoTable.defaultRow(gPurchTable);\n        vendInvoiceInfoTable.initFromPurchTable(gPurchTable);\n        vendInvoiceInfoTable.DocumentOrigin         = DocumentOrigin::Manual;\n        vendInvoiceInfoTable.Num                    = gInvoiceNumber;\n        vendInvoiceInfoTable.VendInvoiceSaveStatus  = VendInvoiceSaveStatus::Pending;\n        vendInvoiceInfoTable.Description            = 'Retail POS Sale';\n        vendInvoiceInfoTable.DocumentDate           = gInvoiceDate;\n        vendInvoiceInfoTable.TransDate              = gInvoiceDate;\n        vendInvoiceInfoTable.LastMatchVariance      = LastMatchVarianceOptions::OK;\n        vendInvoiceInfoTable.ParmJobStatus          = ParmJobStatus::Waiting;\n        vendInvoiceInfoTable.Approved               = NoYes::Yes;\n        vendInvoiceInfoTable.Approver               = HcmWorker::userId2Worker(curUserId());\n        vendInvoiceInfoTable.TableRefId             = this.getTableRefId();\n        vendInvoiceInfoTable.Ordering               = DocumentStatus::Invoice;\n        vendInvoiceInfoTable.initInvoiceTotals();\n        vendInvoiceInfoTable.insert();\n        \n        return vendInvoiceInfoTable;\n    }\n\n    public void createParmSubTable(VendInvoiceInfoTable _vendInvoiceInfoTable)\n    {\n        VendInvoiceInfoSubTable::createFromVendInvoiceInfoTable(_vendInvoiceInfoTable, true);\n    }\n}\n```","slug":"xpp-invoice-purchase-order","published":1,"updated":"2025-02-23T12:59:30.833Z","layout":"post","photos":[],"_id":"cm7j2rsci000lqgug1yncbu0g","content":"<blockquote>\n<p>本文记录了 x++ 代码 invoice 采购订单的示例代码</p>\n</blockquote>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here <span class=\"keyword\">is</span> the C<span class=\"meta\"># code you provided with all comments removed:</span></span><br><span class=\"line\"></span><br><span class=\"line\">```csharp</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">GNCAutoInvoiceVendConsignedPOBatch</span> <span class=\"title\">extends</span> <span class=\"title\">RunBaseBatch</span> <span class=\"title\">implements</span> <span class=\"title\">BatchRetryable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SysLookupMultiSelectValues  gInvoiceIds;</span><br><span class=\"line\">    boolean                     gCreateParmTable;</span><br><span class=\"line\">    PurchTable                  gPurchTable;</span><br><span class=\"line\">    boolean                     gMultiPOs;</span><br><span class=\"line\">    PurchId                     gPurchId;</span><br><span class=\"line\">    RecordInsertList            gParmLineRecordInsertList, gParmSubLineRecordInsertList, gMarkupTrans;</span><br><span class=\"line\">    systemSequence              gSystemSequence;</span><br><span class=\"line\">    Num                         gInvoiceNumber;</span><br><span class=\"line\">    TransDate                   gInvoiceDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());</span><br><span class=\"line\">    InvoiceDescriptionLarge     gDescription;</span><br><span class=\"line\">    Map                         gTableRefIdMap      = <span class=\"keyword\">new</span> Map(Types::String, Types::String);</span><br><span class=\"line\">    Map                         gItemMap            = <span class=\"keyword\">new</span> Map(Types::String, Types::Real);</span><br><span class=\"line\">    DialogField     gDlgInvoiceIds;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">define</span>.CurrentVersion(1)</span></span><br><span class=\"line\">    <span class=\"meta\">#localmacro.CurrentList</span></span><br><span class=\"line\">        gInvoiceIds</span><br><span class=\"line\">    <span class=\"meta\">#endmacro</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">canGoBatch</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">canGoBatchJournal</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">dialog</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DialogRunbase       dialog = super();</span><br><span class=\"line\">    </span><br><span class=\"line\">        gDlgInvoiceIds = dialog.addFieldValue(extendedTypeStr(SysLookupMultiSelectValues), gInvoiceIds, <span class=\"string\">&quot;@SYS12128&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> dialog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">dialogPostRun</span>(<span class=\"params\">DialogRunbase _dialog</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        super(_dialog);</span><br><span class=\"line\"></span><br><span class=\"line\">        Query                   query;</span><br><span class=\"line\">        QueryBuildDataSource    qbds;</span><br><span class=\"line\"></span><br><span class=\"line\">        query   = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedLookupQuery));</span><br><span class=\"line\"></span><br><span class=\"line\">        SysLookupMultiSelectCtrl::constructWithQuery(</span><br><span class=\"line\">                    _dialog.dialogForm().formRun(),</span><br><span class=\"line\">                    gDlgInvoiceIds.control(),</span><br><span class=\"line\">                    query,</span><br><span class=\"line\">                    <span class=\"literal\">false</span>,</span><br><span class=\"line\">                    [<span class=\"meta\">tableNum(CustInvoiceJour), fieldNum(CustInvoiceJour, InvoiceId)</span>]</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">getFromDialog</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gInvoiceIds = gDlgInvoiceIds.<span class=\"keyword\">value</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> super();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">pack</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"meta\">#CurrentVersion, #CurrentList];</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> GNCAutoInvoiceVendConsignedPOBatch <span class=\"title\">construct</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> GNCAutoInvoiceVendConsignedPOBatch();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> ClassDescription <span class=\"title\">description</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;@GNC:AutoInvoiceVendorConsignedPurchaseOrder&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">Args _args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GNCAutoInvoiceVendConsignedPOBatch      batch;</span><br><span class=\"line\">    </span><br><span class=\"line\">        batch = GNCAutoInvoiceVendConsignedPOBatch::construct();</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (batch.prompt())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            batch.runOperation();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> boolean <span class=\"title\">canRunInNewSession</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Hookable(false)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> final boolean <span class=\"title\">isRetryable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Qty <span class=\"title\">getFinalInvoiceQty</span>(<span class=\"params\">ItemId _itemId, Qty _qty</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Qty retQty, storeQty;</span><br><span class=\"line\"></span><br><span class=\"line\">        GNCProcessedVendorConsignedInvAdjustments processedVendorConsignedInvAdjustments = GNCProcessedVendorConsignedInvAdjustments::find(_itemId, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (processedVendorConsignedInvAdjustments.RecId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ttsbegin;</span><br><span class=\"line\">            storeQty = processedVendorConsignedInvAdjustments.Qty;</span><br><span class=\"line\">            retQty = _qty - storeQty;</span><br><span class=\"line\">            processedVendorConsignedInvAdjustments.Qty = retQty &lt; <span class=\"number\">0</span> ? abs(retQty) : <span class=\"number\">0</span>;</span><br><span class=\"line\">            processedVendorConsignedInvAdjustments.update();</span><br><span class=\"line\">            ttscommit;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            retQty = _qty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> retQty;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"meta\">#OCCRetryCount</span></span><br><span class=\"line\"></span><br><span class=\"line\">        setPrefix(<span class=\"string\">&quot;@GNC:AutoInvoiceVendorConsignedPurchaseOrder&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        query                       query_Item      = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedItemQuery));</span><br><span class=\"line\">        QueryBuildDataSource        qbds;</span><br><span class=\"line\">        SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, <span class=\"string\">&#x27;;&#x27;</span>, <span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            qbds = query_Item.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryRun                    queryRunItem    = <span class=\"keyword\">new</span> QueryRun(query_Item);</span><br><span class=\"line\">        TransDateTime               earliestDateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (queryRunItem.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            CustInvoiceTrans custInvoiceTrans_Item = queryRunItem.<span class=\"keyword\">get</span>(tableNum(CustInvoiceTrans));</span><br><span class=\"line\"></span><br><span class=\"line\">            Qty finalInvoiceQty = <span class=\"keyword\">this</span>.getfinalInvoiceQty(custInvoiceTrans_Item.ItemId, custInvoiceTrans_Item.Qty);</span><br><span class=\"line\">            PurchLine   purchLine_earliest;</span><br><span class=\"line\">            PurchTable  purchTable_earliest;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">select</span> firstonly <span class=\"title\">minof</span>(<span class=\"params\">CreatedDateTime</span>) <span class=\"keyword\">from</span> purchTable_earliest</span></span><br><span class=\"line\"><span class=\"function\">                <span class=\"keyword\">where</span> purchTable_earliest.PurchaseType</span>              == PurchaseType::Purch</span><br><span class=\"line\">                exists <span class=\"keyword\">join</span> purchLine_earliest</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> purchLine_earliest.PurchId                == purchTable_earliest.PurchId</span><br><span class=\"line\">                        &amp;&amp; !purchLine_earliest.Blocked</span><br><span class=\"line\">                        &amp;&amp; !purchLine_earliest.IsDeleted</span><br><span class=\"line\">                        &amp;&amp; (purchLine_earliest.PurchStatus          == PurchStatus::Backorder</span><br><span class=\"line\">                        || purchLine_earliest.PurchStatus           == PurchStatus::Received)</span><br><span class=\"line\">                        &amp;&amp; purchLine_earliest.ItemId                == custInvoiceTrans_Item.ItemId</span><br><span class=\"line\">                        &amp;&amp; purchLine_earliest.RemainPurchFinancial  &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!earliestDateTime || earliestDateTime &gt; purchTable_earliest.CreatedDateTime)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                earliestDateTime = purchTable_earliest.CreatedDateTime;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!gItemMap.empty())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> gPurchTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> gPurchTable.PurchaseType      == PurchaseType::Purch</span><br><span class=\"line\">                    &amp;&amp; gPurchTable.CreatedDateTime  &gt;= earliestDateTime</span><br><span class=\"line\">                    &amp;&amp; (gPurchTable.PurchStatus     == PurchStatus::Backorder</span><br><span class=\"line\">                    || gPurchTable.PurchStatus      == PurchStatus::Received)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.processSinglePO();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span> (Exception::Deadlock)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    retry;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span> (Exception::UpdateConflict)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (appl.ttsLevel() == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (xSession::currentRetryCount() &gt;= <span class=\"meta\">#RetryNum)</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> Exception::UpdateConflictNotRecovered;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            retry;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> Exception::UpdateConflict;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (appl.ttsLevel() != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        ttsabort;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertExceptions();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Query   query_jour = <span class=\"keyword\">new</span> Query();</span><br><span class=\"line\"></span><br><span class=\"line\">        qbds = query_jour.addDataSource(tableNum(CustInvoiceJour));</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            qbds = query_jour.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryRun    queryRunJour    = <span class=\"keyword\">new</span> QueryRun(query_jour);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (queryRunJour.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                CustInvoiceJour custInvoiceJourUpd = queryRunJour.<span class=\"keyword\">get</span>(tableNum(CustInvoiceJour));</span><br><span class=\"line\"></span><br><span class=\"line\">                custInvoiceJourUpd.selectForUpdate(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                ttsbegin;</span><br><span class=\"line\">                custInvoiceJourUpd.GNCProcessedVendConsignedInvoice = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                custInvoiceJourUpd.update();</span><br><span class=\"line\">                ttscommit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception::Deadlock)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                retry;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception::UpdateConflict)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (appl.ttsLevel() == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (xSession::currentRetryCount() &gt;= <span class=\"meta\">#RetryNum)</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> Exception::UpdateConflictNotRecovered;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        retry;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> Exception::UpdateConflict;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (appl.ttsLevel() != <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ttsabort;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">processSinglePO</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        PurchLine                   purchLine, prevPurchLine;</span><br><span class=\"line\">        VendPackingSlipTrans        vendPackingSlipTrans;</span><br><span class=\"line\">        Map                         packingSlipTransMap = <span class=\"keyword\">new</span> Map(Types::Int64, Types::Real);</span><br><span class=\"line\">        QueryRun                    queryRun;</span><br><span class=\"line\">        CustInvoiceTrans            custInvoiceTrans;</span><br><span class=\"line\">        Qty                         qtyToInvoice;</span><br><span class=\"line\">            </span><br><span class=\"line\">        gPurchId = gPurchTable.PurchId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initParameters();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initRecordLists();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> purchLine</span><br><span class=\"line\">            <span class=\"keyword\">where</span> purchLine.PurchId                             == gPurchTable.PurchId</span><br><span class=\"line\">                &amp;&amp; !purchLine.Blocked</span><br><span class=\"line\">                &amp;&amp; !purchLine.IsDeleted</span><br><span class=\"line\">                &amp;&amp; (purchLine.PurchStatus                       == PurchStatus::Backorder</span><br><span class=\"line\">                || purchLine.PurchStatus                        == PurchStatus::Received)</span><br><span class=\"line\">                &amp;&amp; purchLine.RemainPurchFinancial               &gt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">join</span> vendPackingSlipTrans</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> vendPackingSlipTrans.InventTransId    == purchLine.InventTransId</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Qty         purchRemain = vendPackingSlipTrans.remainPurchFinancial();</span><br><span class=\"line\">            Qty         curQty;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!purchRemain)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!gItemMap.exists(purchLine.ItemId))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            qtyToInvoice = gItemMap.lookup(purchLine.ItemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!qtyToInvoice)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (qtyToInvoice &gt; purchRemain)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                curQty          = purchRemain;</span><br><span class=\"line\">                qtyToInvoice    -= purchRemain;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                curQty          = abs(qtyToInvoice);</span><br><span class=\"line\">                qtyToInvoice    = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (purchLine.RecId != prevPurchLine.RecId)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (packingSlipTransMap.elements() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                prevPurchLine       = purchLine.data();</span><br><span class=\"line\">                packingSlipTransMap = <span class=\"keyword\">new</span> Map(Types::Int64, Types::Real);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            packingSlipTransMap.insert(vendPackingSlipTrans.RecId, curQty);</span><br><span class=\"line\">            gItemMap.insert(purchLine.ItemId, qtyToInvoice);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (prevPurchLine.RecId &amp;&amp; packingSlipTransMap.elements() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (gCreateParmTable)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gInvoiceNumber = gPurchTable.PurchId;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendInvoiceJour vendInvoiceJour;</span><br><span class=\"line\">            Counter         i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == gInvoiceNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (vendInvoiceJour.RecId)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">                vendInvoiceJour.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">                gInvoiceNumber = strfmt(<span class=\"string\">&#x27;%1_%2&#x27;</span>, gPurchTable.PurchId, i);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == gInvoiceNumber;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendInvoiceInfoTable        vendInvoiceInfoTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            ttsbegin;</span><br><span class=\"line\">            vendInvoiceInfoTable = <span class=\"keyword\">this</span>.createParmTable();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertRecordLists();</span><br><span class=\"line\">            </span><br><span class=\"line\">            PurchFormLetter_Invoice purchFormLetter = PurchFormLetter_Invoice::newFromSavedInvoice(vendInvoiceInfoTable);</span><br><span class=\"line\">            purchFormLetter.purchTable(gPurchTable);</span><br><span class=\"line\">            purchFormLetter.printFormLetter(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            purchFormLetter.proforma(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            purchFormLetter.parmId(vendInvoiceInfoTable.ParmId);</span><br><span class=\"line\">            purchFormLetter.update(vendInvoiceInfoTable, vendInvoiceInfoTable.Num);</span><br><span class=\"line\"></span><br><span class=\"line\">            ttscommit;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == vendInvoiceInfoTable.Num;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (vendInvoiceJour)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Info(strFmt(<span class=\"string\">&quot;Vendor invoice journal %1 is posted.&quot;</span>, vendInvoiceInfoTable.Num));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertExceptions</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MapEnumerator itemME = gItemMap.getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (itemME.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ItemId                      itemId  = itemME.currentKey();</span><br><span class=\"line\">            Qty                         qtyExce = itemME.currentValue(); </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!qtyExce)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            query                       query   = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedQuery));</span><br><span class=\"line\">            QueryBuildDataSource        qbds;</span><br><span class=\"line\">            SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, <span class=\"string\">&#x27;;&#x27;</span>, <span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            QueryRun                    queryRun;</span><br><span class=\"line\">            </span><br><span class=\"line\">            qbds = query.dataSourceTable(tableNum(CustInvoiceTrans));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceTrans, ItemId)).<span class=\"keyword\">value</span>(itemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                qbds = query.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">                qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            queryRun = <span class=\"keyword\">new</span> QueryRun(query);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (queryRun.next())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                CustInvoiceTrans    custInvoiceTrans = queryRun.<span class=\"keyword\">get</span>(tableNum(CustInvoiceTrans));</span><br><span class=\"line\">                Qty                 qtyRemain, curQty;</span><br><span class=\"line\"></span><br><span class=\"line\">                qtyRemain = custInvoiceTrans.Qty;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (qtyExce &gt; qtyRemain)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    curQty      = qtyRemain;</span><br><span class=\"line\">                    qtyExce     -= qtyRemain;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    curQty      = qtyExce;</span><br><span class=\"line\">                    qtyExce     = <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                GNCAutoInvoiceVendConsignedException::create(gInvoiceDate, </span><br><span class=\"line\">                    custInvoiceTrans.SalesId, </span><br><span class=\"line\">                    custInvoiceTrans.InvoiceDate, </span><br><span class=\"line\">                    custInvoiceTrans.ItemId, </span><br><span class=\"line\">                    custInvoiceTrans.Qty, </span><br><span class=\"line\">                    curQty);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!qtyExce)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initParameters</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gSystemSequence     = <span class=\"keyword\">new</span> systemSequence();</span><br><span class=\"line\">        gCreateParmTable    = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> TradeLineRefId <span class=\"title\">getTableRefId</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!gTableRefIdMap.exists(gPurchId))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gTableRefIdMap.insert(gPurchId, formletterParmData::getNewTableRefId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> gTableRefIdMap.lookup(gPurchId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initRecordLists</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gParmLineRecordInsertList       = <span class=\"keyword\">new</span> RecordInsertList(tableNum(VendInvoiceInfoLine));</span><br><span class=\"line\">        gParmSubLineRecordInsertList    = <span class=\"keyword\">new</span> RecordInsertList(tableNum(VendInvoiceInfoSubLine));</span><br><span class=\"line\">        gMarkupTrans    = <span class=\"keyword\">new</span> RecordInsertList(tableNum(MarkupTrans));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertParmLine</span>(<span class=\"params\">VendInvoiceInfoLine _vendInvoiceInfoLine, PurchLine _purchLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gSystemSequence.suspendRecIds(_vendInvoiceInfoLine.TableId);</span><br><span class=\"line\">        _vendInvoiceInfoLine.RecId  = gSystemSequence.reserveValues(<span class=\"number\">1</span>, _vendInvoiceInfoLine.TableId);</span><br><span class=\"line\"></span><br><span class=\"line\">        gParmLineRecordInsertList.<span class=\"keyword\">add</span>(_vendInvoiceInfoLine);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createVendInvoiceMatchingLine</span>(<span class=\"params\">PurchLine _purchLine, VendDocumentLineMap _parmLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceMatchingLine vendInvoiceMatchingLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_parmLine.TableId &amp;&amp; _parmLine.RecId &amp;&amp; _purchLine)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vendInvoiceMatchingLine.clear();</span><br><span class=\"line\">            vendInvoiceMatchingLine.initExpectedValues(_purchLine, _parmLine);</span><br><span class=\"line\">            vendInvoiceMatchingLine.RefTableId = _parmLine.TableId;</span><br><span class=\"line\">            vendInvoiceMatchingLine.RefRecId = _parmLine.RecId;</span><br><span class=\"line\">            vendInvoiceMatchingLine.insert();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createMarkupTrans</span>(<span class=\"params\">PurchLine _purchLine, VendInvoiceInfoLine _vendInvoiceInfoLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MarkupTrans markupTrans, markupTransNew;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> markupTrans</span><br><span class=\"line\">            <span class=\"keyword\">where</span> markupTrans.TransTableId  == _purchLine.TableId</span><br><span class=\"line\">                &amp;&amp; markupTrans.TransRecId   == _purchLine.RecId</span><br><span class=\"line\">                &amp;&amp; markupTrans.Value        != <span class=\"number\">0</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            buf2Buf(markupTrans, markupTransNew);</span><br><span class=\"line\">            markupTransNew.TransTableId       = _vendInvoiceInfoLine.TableId;</span><br><span class=\"line\">            markupTransNew.TransRecId         = _vendInvoiceInfoLine.RecId;</span><br><span class=\"line\">            gMarkupTrans.<span class=\"keyword\">add</span>(markupTransNew);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertParmSubLine</span>(<span class=\"params\">VendInvoiceInfoSubLine _vendInvoiceInfoSubLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_vendInvoiceInfoSubLine.ReceiveNow == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        gParmSubLineRecordInsertList.<span class=\"keyword\">add</span>(_vendInvoiceInfoSubLine);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertRecordLists</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gParmLineRecordInsertList.insertDatabase();</span><br><span class=\"line\">        gParmSubLineRecordInsertList.insertDatabase();</span><br><span class=\"line\">        gMarkupTrans.insertDatabase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmLineAndSubLines</span>(<span class=\"params\">PurchLine _purchLine, container _packedSubLinesMap</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MapEnumerator           me;</span><br><span class=\"line\">        VendInvoiceInfoLine     vendInvoiceInfoLine;</span><br><span class=\"line\">        Qty                     newPostingQty;</span><br><span class=\"line\">        VendPackingSlipTrans    vendPackingSlipTrans;</span><br><span class=\"line\">        Set                     subLineSet      = <span class=\"keyword\">new</span> Set(Types::Record);</span><br><span class=\"line\"></span><br><span class=\"line\">        me = Map::create(_packedSubLinesMap).getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (me.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RefRecId        vendPackingSlipTransRecId   = me.currentKey();</span><br><span class=\"line\">            Qty             qty                         = me.currentValue();</span><br><span class=\"line\"></span><br><span class=\"line\">            vendPackingSlipTrans            = VendPackingSlipTrans::findRecId(vendPackingSlipTransRecId);</span><br><span class=\"line\"></span><br><span class=\"line\">            vendPackingSlipTrans.Qty        = qty;</span><br><span class=\"line\">            vendPackingSlipTrans.InventQty  = qty;</span><br><span class=\"line\">            newPostingQty                   += qty;</span><br><span class=\"line\"></span><br><span class=\"line\">            subLineSet.<span class=\"keyword\">add</span>(vendPackingSlipTrans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newPostingQty == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoLine = <span class=\"keyword\">this</span>.createParmLine(_purchLine, newPostingQty);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createParmSubLines(vendInvoiceInfoLine, subLineSet);</span><br><span class=\"line\">        </span><br><span class=\"line\">        gCreateParmTable = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> VendInvoiceInfoLine <span class=\"title\">createParmLine</span>(<span class=\"params\">PurchLine _purchLine, Qty _receiveNow</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoLine vendInvoiceInfoLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoLine.Ordering        = DocumentStatus::Invoice;</span><br><span class=\"line\">        vendInvoiceInfoLine.TableRefId      = <span class=\"keyword\">this</span>.getTableRefId();</span><br><span class=\"line\">        vendInvoiceInfoLine.DocumentOrigin  = DocumentOrigin::Manual;</span><br><span class=\"line\">        vendInvoiceInfoLine.initFromPurchLine(_purchLine);</span><br><span class=\"line\">        vendInvoiceInfoLine.defaultRow(_purchLine, <span class=\"literal\">null</span>, _receiveNow, _receiveNow);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.insertParmLine(vendInvoiceInfoLine, _purchLine);</span><br><span class=\"line\">        </span><br><span class=\"line\">        gCreateParmTable = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> vendInvoiceInfoLine;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmSubLines</span>(<span class=\"params\">VendInvoiceInfoLine _vendInvoiceInfoLine, Set _subLineSet</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendPackingSlipTrans    vendPackingSlipTrans;</span><br><span class=\"line\">        VendInvoiceInfoSubLine  vendInvoiceInfoSubLine;</span><br><span class=\"line\">        SetEnumerator           se = _subLineSet.getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (se.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vendPackingSlipTrans = se.current();</span><br><span class=\"line\"></span><br><span class=\"line\">            vend</span><br><span class=\"line\"></span><br><span class=\"line\">InvoiceInfoSubLine.clear();</span><br><span class=\"line\">            vendInvoiceInfoSubLine.initFromLine(_vendInvoiceInfoLine);</span><br><span class=\"line\">            vendInvoiceInfoSubLine.initFromVendPackingSlipTrans(vendPackingSlipTrans);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertParmSubLine(vendInvoiceInfoSubLine);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!_vendInvoiceInfoLine.vendInvoiceInfoSubTable())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            VendInvoiceInfoSubTable::createFromVendInvoiceInfoLine(_vendInvoiceInfoLine, _vendInvoiceInfoLine.ParmId, gDescription, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> VendInvoiceInfoTable <span class=\"title\">createParmTable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoTable        vendInvoiceInfoTable;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoTable.clear();</span><br><span class=\"line\">        vendInvoiceInfoTable.initValue();</span><br><span class=\"line\">        vendInvoiceInfoTable.defaultRow(gPurchTable);</span><br><span class=\"line\">        vendInvoiceInfoTable.initFromPurchTable(gPurchTable);</span><br><span class=\"line\">        vendInvoiceInfoTable.DocumentOrigin         = DocumentOrigin::Manual;</span><br><span class=\"line\">        vendInvoiceInfoTable.Num                    = gInvoiceNumber;</span><br><span class=\"line\">        vendInvoiceInfoTable.VendInvoiceSaveStatus  = VendInvoiceSaveStatus::Pending;</span><br><span class=\"line\">        vendInvoiceInfoTable.Description            = <span class=\"string\">&#x27;Retail POS Sale&#x27;</span>;</span><br><span class=\"line\">        vendInvoiceInfoTable.DocumentDate           = gInvoiceDate;</span><br><span class=\"line\">        vendInvoiceInfoTable.TransDate              = gInvoiceDate;</span><br><span class=\"line\">        vendInvoiceInfoTable.LastMatchVariance      = LastMatchVarianceOptions::OK;</span><br><span class=\"line\">        vendInvoiceInfoTable.ParmJobStatus          = ParmJobStatus::Waiting;</span><br><span class=\"line\">        vendInvoiceInfoTable.Approved               = NoYes::Yes;</span><br><span class=\"line\">        vendInvoiceInfoTable.Approver               = HcmWorker::userId2Worker(curUserId());</span><br><span class=\"line\">        vendInvoiceInfoTable.TableRefId             = <span class=\"keyword\">this</span>.getTableRefId();</span><br><span class=\"line\">        vendInvoiceInfoTable.Ordering               = DocumentStatus::Invoice;</span><br><span class=\"line\">        vendInvoiceInfoTable.initInvoiceTotals();</span><br><span class=\"line\">        vendInvoiceInfoTable.insert();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> vendInvoiceInfoTable;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmSubTable</span>(<span class=\"params\">VendInvoiceInfoTable _vendInvoiceInfoTable</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoSubTable::createFromVendInvoiceInfoTable(_vendInvoiceInfoTable, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<blockquote>\n<p>本文记录了 x++ 代码 invoice 采购订单的示例代码</p>\n</blockquote>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Here <span class=\"keyword\">is</span> the C<span class=\"meta\"># code you provided with all comments removed:</span></span><br><span class=\"line\"></span><br><span class=\"line\">```csharp</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">GNCAutoInvoiceVendConsignedPOBatch</span> <span class=\"title\">extends</span> <span class=\"title\">RunBaseBatch</span> <span class=\"title\">implements</span> <span class=\"title\">BatchRetryable</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    SysLookupMultiSelectValues  gInvoiceIds;</span><br><span class=\"line\">    boolean                     gCreateParmTable;</span><br><span class=\"line\">    PurchTable                  gPurchTable;</span><br><span class=\"line\">    boolean                     gMultiPOs;</span><br><span class=\"line\">    PurchId                     gPurchId;</span><br><span class=\"line\">    RecordInsertList            gParmLineRecordInsertList, gParmSubLineRecordInsertList, gMarkupTrans;</span><br><span class=\"line\">    systemSequence              gSystemSequence;</span><br><span class=\"line\">    Num                         gInvoiceNumber;</span><br><span class=\"line\">    TransDate                   gInvoiceDate        = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());</span><br><span class=\"line\">    InvoiceDescriptionLarge     gDescription;</span><br><span class=\"line\">    Map                         gTableRefIdMap      = <span class=\"keyword\">new</span> Map(Types::String, Types::String);</span><br><span class=\"line\">    Map                         gItemMap            = <span class=\"keyword\">new</span> Map(Types::String, Types::Real);</span><br><span class=\"line\">    DialogField     gDlgInvoiceIds;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">#<span class=\"keyword\">define</span>.CurrentVersion(1)</span></span><br><span class=\"line\">    <span class=\"meta\">#localmacro.CurrentList</span></span><br><span class=\"line\">        gInvoiceIds</span><br><span class=\"line\">    <span class=\"meta\">#endmacro</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">canGoBatch</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">canGoBatchJournal</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">dialog</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        DialogRunbase       dialog = super();</span><br><span class=\"line\">    </span><br><span class=\"line\">        gDlgInvoiceIds = dialog.addFieldValue(extendedTypeStr(SysLookupMultiSelectValues), gInvoiceIds, <span class=\"string\">&quot;@SYS12128&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> dialog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">dialogPostRun</span>(<span class=\"params\">DialogRunbase _dialog</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        super(_dialog);</span><br><span class=\"line\"></span><br><span class=\"line\">        Query                   query;</span><br><span class=\"line\">        QueryBuildDataSource    qbds;</span><br><span class=\"line\"></span><br><span class=\"line\">        query   = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedLookupQuery));</span><br><span class=\"line\"></span><br><span class=\"line\">        SysLookupMultiSelectCtrl::constructWithQuery(</span><br><span class=\"line\">                    _dialog.dialogForm().formRun(),</span><br><span class=\"line\">                    gDlgInvoiceIds.control(),</span><br><span class=\"line\">                    query,</span><br><span class=\"line\">                    <span class=\"literal\">false</span>,</span><br><span class=\"line\">                    [<span class=\"meta\">tableNum(CustInvoiceJour), fieldNum(CustInvoiceJour, InvoiceId)</span>]</span><br><span class=\"line\">        );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">getFromDialog</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gInvoiceIds = gDlgInvoiceIds.<span class=\"keyword\">value</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> super();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> container <span class=\"title\">pack</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"meta\">#CurrentVersion, #CurrentList];</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> GNCAutoInvoiceVendConsignedPOBatch <span class=\"title\">construct</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> GNCAutoInvoiceVendConsignedPOBatch();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> ClassDescription <span class=\"title\">description</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;@GNC:AutoInvoiceVendorConsignedPurchaseOrder&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\">Args _args</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GNCAutoInvoiceVendConsignedPOBatch      batch;</span><br><span class=\"line\">    </span><br><span class=\"line\">        batch = GNCAutoInvoiceVendConsignedPOBatch::construct();</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (batch.prompt())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            batch.runOperation();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> boolean <span class=\"title\">canRunInNewSession</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">Hookable(false)</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> final boolean <span class=\"title\">isRetryable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Qty <span class=\"title\">getFinalInvoiceQty</span>(<span class=\"params\">ItemId _itemId, Qty _qty</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Qty retQty, storeQty;</span><br><span class=\"line\"></span><br><span class=\"line\">        GNCProcessedVendorConsignedInvAdjustments processedVendorConsignedInvAdjustments = GNCProcessedVendorConsignedInvAdjustments::find(_itemId, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (processedVendorConsignedInvAdjustments.RecId)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ttsbegin;</span><br><span class=\"line\">            storeQty = processedVendorConsignedInvAdjustments.Qty;</span><br><span class=\"line\">            retQty = _qty - storeQty;</span><br><span class=\"line\">            processedVendorConsignedInvAdjustments.Qty = retQty &lt; <span class=\"number\">0</span> ? abs(retQty) : <span class=\"number\">0</span>;</span><br><span class=\"line\">            processedVendorConsignedInvAdjustments.update();</span><br><span class=\"line\">            ttscommit;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            retQty = _qty;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> retQty;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"meta\">#OCCRetryCount</span></span><br><span class=\"line\"></span><br><span class=\"line\">        setPrefix(<span class=\"string\">&quot;@GNC:AutoInvoiceVendorConsignedPurchaseOrder&quot;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        query                       query_Item      = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedItemQuery));</span><br><span class=\"line\">        QueryBuildDataSource        qbds;</span><br><span class=\"line\">        SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, <span class=\"string\">&#x27;;&#x27;</span>, <span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            qbds = query_Item.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryRun                    queryRunItem    = <span class=\"keyword\">new</span> QueryRun(query_Item);</span><br><span class=\"line\">        TransDateTime               earliestDateTime;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (queryRunItem.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            CustInvoiceTrans custInvoiceTrans_Item = queryRunItem.<span class=\"keyword\">get</span>(tableNum(CustInvoiceTrans));</span><br><span class=\"line\"></span><br><span class=\"line\">            Qty finalInvoiceQty = <span class=\"keyword\">this</span>.getfinalInvoiceQty(custInvoiceTrans_Item.ItemId, custInvoiceTrans_Item.Qty);</span><br><span class=\"line\">            PurchLine   purchLine_earliest;</span><br><span class=\"line\">            PurchTable  purchTable_earliest;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">select</span> firstonly <span class=\"title\">minof</span>(<span class=\"params\">CreatedDateTime</span>) <span class=\"keyword\">from</span> purchTable_earliest</span></span><br><span class=\"line\"><span class=\"function\">                <span class=\"keyword\">where</span> purchTable_earliest.PurchaseType</span>              == PurchaseType::Purch</span><br><span class=\"line\">                exists <span class=\"keyword\">join</span> purchLine_earliest</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> purchLine_earliest.PurchId                == purchTable_earliest.PurchId</span><br><span class=\"line\">                        &amp;&amp; !purchLine_earliest.Blocked</span><br><span class=\"line\">                        &amp;&amp; !purchLine_earliest.IsDeleted</span><br><span class=\"line\">                        &amp;&amp; (purchLine_earliest.PurchStatus          == PurchStatus::Backorder</span><br><span class=\"line\">                        || purchLine_earliest.PurchStatus           == PurchStatus::Received)</span><br><span class=\"line\">                        &amp;&amp; purchLine_earliest.ItemId                == custInvoiceTrans_Item.ItemId</span><br><span class=\"line\">                        &amp;&amp; purchLine_earliest.RemainPurchFinancial  &gt; <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!earliestDateTime || earliestDateTime &gt; purchTable_earliest.CreatedDateTime)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                earliestDateTime = purchTable_earliest.CreatedDateTime;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!gItemMap.empty())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> gPurchTable</span><br><span class=\"line\">                <span class=\"keyword\">where</span> gPurchTable.PurchaseType      == PurchaseType::Purch</span><br><span class=\"line\">                    &amp;&amp; gPurchTable.CreatedDateTime  &gt;= earliestDateTime</span><br><span class=\"line\">                    &amp;&amp; (gPurchTable.PurchStatus     == PurchStatus::Backorder</span><br><span class=\"line\">                    || gPurchTable.PurchStatus      == PurchStatus::Received)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.processSinglePO();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span> (Exception::Deadlock)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    retry;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span> (Exception::UpdateConflict)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (appl.ttsLevel() == <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (xSession::currentRetryCount() &gt;= <span class=\"meta\">#RetryNum)</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">throw</span> Exception::UpdateConflictNotRecovered;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span></span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            retry;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> Exception::UpdateConflict;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (appl.ttsLevel() != <span class=\"number\">0</span>)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        ttsabort;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertExceptions();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Query   query_jour = <span class=\"keyword\">new</span> Query();</span><br><span class=\"line\"></span><br><span class=\"line\">        qbds = query_jour.addDataSource(tableNum(CustInvoiceJour));</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            qbds = query_jour.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        QueryRun    queryRunJour    = <span class=\"keyword\">new</span> QueryRun(query_jour);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (queryRunJour.next())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                CustInvoiceJour custInvoiceJourUpd = queryRunJour.<span class=\"keyword\">get</span>(tableNum(CustInvoiceJour));</span><br><span class=\"line\"></span><br><span class=\"line\">                custInvoiceJourUpd.selectForUpdate(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                ttsbegin;</span><br><span class=\"line\">                custInvoiceJourUpd.GNCProcessedVendConsignedInvoice = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                custInvoiceJourUpd.update();</span><br><span class=\"line\">                ttscommit;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception::Deadlock)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                retry;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (Exception::UpdateConflict)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (appl.ttsLevel() == <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (xSession::currentRetryCount() &gt;= <span class=\"meta\">#RetryNum)</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">throw</span> Exception::UpdateConflictNotRecovered;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        retry;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> Exception::UpdateConflict;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (appl.ttsLevel() != <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ttsabort;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">processSinglePO</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        PurchLine                   purchLine, prevPurchLine;</span><br><span class=\"line\">        VendPackingSlipTrans        vendPackingSlipTrans;</span><br><span class=\"line\">        Map                         packingSlipTransMap = <span class=\"keyword\">new</span> Map(Types::Int64, Types::Real);</span><br><span class=\"line\">        QueryRun                    queryRun;</span><br><span class=\"line\">        CustInvoiceTrans            custInvoiceTrans;</span><br><span class=\"line\">        Qty                         qtyToInvoice;</span><br><span class=\"line\">            </span><br><span class=\"line\">        gPurchId = gPurchTable.PurchId;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initParameters();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.initRecordLists();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> purchLine</span><br><span class=\"line\">            <span class=\"keyword\">where</span> purchLine.PurchId                             == gPurchTable.PurchId</span><br><span class=\"line\">                &amp;&amp; !purchLine.Blocked</span><br><span class=\"line\">                &amp;&amp; !purchLine.IsDeleted</span><br><span class=\"line\">                &amp;&amp; (purchLine.PurchStatus                       == PurchStatus::Backorder</span><br><span class=\"line\">                || purchLine.PurchStatus                        == PurchStatus::Received)</span><br><span class=\"line\">                &amp;&amp; purchLine.RemainPurchFinancial               &gt; <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">join</span> vendPackingSlipTrans</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> vendPackingSlipTrans.InventTransId    == purchLine.InventTransId</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Qty         purchRemain = vendPackingSlipTrans.remainPurchFinancial();</span><br><span class=\"line\">            Qty         curQty;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!purchRemain)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!gItemMap.exists(purchLine.ItemId))</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            qtyToInvoice = gItemMap.lookup(purchLine.ItemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!qtyToInvoice)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (qtyToInvoice &gt; purchRemain)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                curQty          = purchRemain;</span><br><span class=\"line\">                qtyToInvoice    -= purchRemain;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                curQty          = abs(qtyToInvoice);</span><br><span class=\"line\">                qtyToInvoice    = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (purchLine.RecId != prevPurchLine.RecId)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (packingSlipTransMap.elements() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                prevPurchLine       = purchLine.data();</span><br><span class=\"line\">                packingSlipTransMap = <span class=\"keyword\">new</span> Map(Types::Int64, Types::Real);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            packingSlipTransMap.insert(vendPackingSlipTrans.RecId, curQty);</span><br><span class=\"line\">            gItemMap.insert(purchLine.ItemId, qtyToInvoice);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (prevPurchLine.RecId &amp;&amp; packingSlipTransMap.elements() &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.createParmLineAndSubLines(prevPurchLine, packingSlipTransMap.pack());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (gCreateParmTable)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gInvoiceNumber = gPurchTable.PurchId;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendInvoiceJour vendInvoiceJour;</span><br><span class=\"line\">            Counter         i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == gInvoiceNumber;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (vendInvoiceJour.RecId)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">                vendInvoiceJour.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">                gInvoiceNumber = strfmt(<span class=\"string\">&#x27;%1_%2&#x27;</span>, gPurchTable.PurchId, i);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                    <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == gInvoiceNumber;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            VendInvoiceInfoTable        vendInvoiceInfoTable;</span><br><span class=\"line\"></span><br><span class=\"line\">            ttsbegin;</span><br><span class=\"line\">            vendInvoiceInfoTable = <span class=\"keyword\">this</span>.createParmTable();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertRecordLists();</span><br><span class=\"line\">            </span><br><span class=\"line\">            PurchFormLetter_Invoice purchFormLetter = PurchFormLetter_Invoice::newFromSavedInvoice(vendInvoiceInfoTable);</span><br><span class=\"line\">            purchFormLetter.purchTable(gPurchTable);</span><br><span class=\"line\">            purchFormLetter.printFormLetter(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            purchFormLetter.proforma(<span class=\"literal\">false</span>);</span><br><span class=\"line\">            purchFormLetter.parmId(vendInvoiceInfoTable.ParmId);</span><br><span class=\"line\">            purchFormLetter.update(vendInvoiceInfoTable, vendInvoiceInfoTable.Num);</span><br><span class=\"line\"></span><br><span class=\"line\">            ttscommit;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">select</span> firstonly RecId <span class=\"keyword\">from</span> vendInvoiceJour</span><br><span class=\"line\">                <span class=\"keyword\">where</span> vendInvoiceJour.InvoiceId == vendInvoiceInfoTable.Num;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (vendInvoiceJour)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Info(strFmt(<span class=\"string\">&quot;Vendor invoice journal %1 is posted.&quot;</span>, vendInvoiceInfoTable.Num));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertExceptions</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MapEnumerator itemME = gItemMap.getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (itemME.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ItemId                      itemId  = itemME.currentKey();</span><br><span class=\"line\">            Qty                         qtyExce = itemME.currentValue(); </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!qtyExce)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            query                       query   = <span class=\"keyword\">new</span> Query(queryStr(GNCAutoInvoiceVendConsignedQuery));</span><br><span class=\"line\">            QueryBuildDataSource        qbds;</span><br><span class=\"line\">            SysLookupMultiSelectValues  qrvInvoiceIds   = strReplace(gInvoiceIds, <span class=\"string\">&#x27;;&#x27;</span>, <span class=\"string\">&#x27;,&#x27;</span>);</span><br><span class=\"line\">            QueryRun                    queryRun;</span><br><span class=\"line\">            </span><br><span class=\"line\">            qbds = query.dataSourceTable(tableNum(CustInvoiceTrans));</span><br><span class=\"line\">            qbds.addRange(fieldNum(CustInvoiceTrans, ItemId)).<span class=\"keyword\">value</span>(itemId);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (qrvInvoiceIds)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                qbds = query.dataSourceTable(tableNum(CustInvoiceJour));</span><br><span class=\"line\">                qbds.addRange(fieldNum(CustInvoiceJour, InvoiceId)).<span class=\"keyword\">value</span>(qrvInvoiceIds);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            queryRun = <span class=\"keyword\">new</span> QueryRun(query);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (queryRun.next())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                CustInvoiceTrans    custInvoiceTrans = queryRun.<span class=\"keyword\">get</span>(tableNum(CustInvoiceTrans));</span><br><span class=\"line\">                Qty                 qtyRemain, curQty;</span><br><span class=\"line\"></span><br><span class=\"line\">                qtyRemain = custInvoiceTrans.Qty;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (qtyExce &gt; qtyRemain)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    curQty      = qtyRemain;</span><br><span class=\"line\">                    qtyExce     -= qtyRemain;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    curQty      = qtyExce;</span><br><span class=\"line\">                    qtyExce     = <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                GNCAutoInvoiceVendConsignedException::create(gInvoiceDate, </span><br><span class=\"line\">                    custInvoiceTrans.SalesId, </span><br><span class=\"line\">                    custInvoiceTrans.InvoiceDate, </span><br><span class=\"line\">                    custInvoiceTrans.ItemId, </span><br><span class=\"line\">                    custInvoiceTrans.Qty, </span><br><span class=\"line\">                    curQty);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!qtyExce)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initParameters</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gSystemSequence     = <span class=\"keyword\">new</span> systemSequence();</span><br><span class=\"line\">        gCreateParmTable    = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> TradeLineRefId <span class=\"title\">getTableRefId</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!gTableRefIdMap.exists(gPurchId))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            gTableRefIdMap.insert(gPurchId, formletterParmData::getNewTableRefId());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> gTableRefIdMap.lookup(gPurchId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">initRecordLists</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gParmLineRecordInsertList       = <span class=\"keyword\">new</span> RecordInsertList(tableNum(VendInvoiceInfoLine));</span><br><span class=\"line\">        gParmSubLineRecordInsertList    = <span class=\"keyword\">new</span> RecordInsertList(tableNum(VendInvoiceInfoSubLine));</span><br><span class=\"line\">        gMarkupTrans    = <span class=\"keyword\">new</span> RecordInsertList(tableNum(MarkupTrans));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertParmLine</span>(<span class=\"params\">VendInvoiceInfoLine _vendInvoiceInfoLine, PurchLine _purchLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gSystemSequence.suspendRecIds(_vendInvoiceInfoLine.TableId);</span><br><span class=\"line\">        _vendInvoiceInfoLine.RecId  = gSystemSequence.reserveValues(<span class=\"number\">1</span>, _vendInvoiceInfoLine.TableId);</span><br><span class=\"line\"></span><br><span class=\"line\">        gParmLineRecordInsertList.<span class=\"keyword\">add</span>(_vendInvoiceInfoLine);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createVendInvoiceMatchingLine</span>(<span class=\"params\">PurchLine _purchLine, VendDocumentLineMap _parmLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceMatchingLine vendInvoiceMatchingLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_parmLine.TableId &amp;&amp; _parmLine.RecId &amp;&amp; _purchLine)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vendInvoiceMatchingLine.clear();</span><br><span class=\"line\">            vendInvoiceMatchingLine.initExpectedValues(_purchLine, _parmLine);</span><br><span class=\"line\">            vendInvoiceMatchingLine.RefTableId = _parmLine.TableId;</span><br><span class=\"line\">            vendInvoiceMatchingLine.RefRecId = _parmLine.RecId;</span><br><span class=\"line\">            vendInvoiceMatchingLine.insert();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createMarkupTrans</span>(<span class=\"params\">PurchLine _purchLine, VendInvoiceInfoLine _vendInvoiceInfoLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MarkupTrans markupTrans, markupTransNew;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">select</span> markupTrans</span><br><span class=\"line\">            <span class=\"keyword\">where</span> markupTrans.TransTableId  == _purchLine.TableId</span><br><span class=\"line\">                &amp;&amp; markupTrans.TransRecId   == _purchLine.RecId</span><br><span class=\"line\">                &amp;&amp; markupTrans.Value        != <span class=\"number\">0</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            buf2Buf(markupTrans, markupTransNew);</span><br><span class=\"line\">            markupTransNew.TransTableId       = _vendInvoiceInfoLine.TableId;</span><br><span class=\"line\">            markupTransNew.TransRecId         = _vendInvoiceInfoLine.RecId;</span><br><span class=\"line\">            gMarkupTrans.<span class=\"keyword\">add</span>(markupTransNew);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertParmSubLine</span>(<span class=\"params\">VendInvoiceInfoSubLine _vendInvoiceInfoSubLine</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (_vendInvoiceInfoSubLine.ReceiveNow == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        gParmSubLineRecordInsertList.<span class=\"keyword\">add</span>(_vendInvoiceInfoSubLine);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insertRecordLists</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        gParmLineRecordInsertList.insertDatabase();</span><br><span class=\"line\">        gParmSubLineRecordInsertList.insertDatabase();</span><br><span class=\"line\">        gMarkupTrans.insertDatabase();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmLineAndSubLines</span>(<span class=\"params\">PurchLine _purchLine, container _packedSubLinesMap</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        MapEnumerator           me;</span><br><span class=\"line\">        VendInvoiceInfoLine     vendInvoiceInfoLine;</span><br><span class=\"line\">        Qty                     newPostingQty;</span><br><span class=\"line\">        VendPackingSlipTrans    vendPackingSlipTrans;</span><br><span class=\"line\">        Set                     subLineSet      = <span class=\"keyword\">new</span> Set(Types::Record);</span><br><span class=\"line\"></span><br><span class=\"line\">        me = Map::create(_packedSubLinesMap).getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (me.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            RefRecId        vendPackingSlipTransRecId   = me.currentKey();</span><br><span class=\"line\">            Qty             qty                         = me.currentValue();</span><br><span class=\"line\"></span><br><span class=\"line\">            vendPackingSlipTrans            = VendPackingSlipTrans::findRecId(vendPackingSlipTransRecId);</span><br><span class=\"line\"></span><br><span class=\"line\">            vendPackingSlipTrans.Qty        = qty;</span><br><span class=\"line\">            vendPackingSlipTrans.InventQty  = qty;</span><br><span class=\"line\">            newPostingQty                   += qty;</span><br><span class=\"line\"></span><br><span class=\"line\">            subLineSet.<span class=\"keyword\">add</span>(vendPackingSlipTrans);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newPostingQty == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoLine = <span class=\"keyword\">this</span>.createParmLine(_purchLine, newPostingQty);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createParmSubLines(vendInvoiceInfoLine, subLineSet);</span><br><span class=\"line\">        </span><br><span class=\"line\">        gCreateParmTable = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> VendInvoiceInfoLine <span class=\"title\">createParmLine</span>(<span class=\"params\">PurchLine _purchLine, Qty _receiveNow</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoLine vendInvoiceInfoLine;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoLine.Ordering        = DocumentStatus::Invoice;</span><br><span class=\"line\">        vendInvoiceInfoLine.TableRefId      = <span class=\"keyword\">this</span>.getTableRefId();</span><br><span class=\"line\">        vendInvoiceInfoLine.DocumentOrigin  = DocumentOrigin::Manual;</span><br><span class=\"line\">        vendInvoiceInfoLine.initFromPurchLine(_purchLine);</span><br><span class=\"line\">        vendInvoiceInfoLine.defaultRow(_purchLine, <span class=\"literal\">null</span>, _receiveNow, _receiveNow);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.insertParmLine(vendInvoiceInfoLine, _purchLine);</span><br><span class=\"line\">        </span><br><span class=\"line\">        gCreateParmTable = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> vendInvoiceInfoLine;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmSubLines</span>(<span class=\"params\">VendInvoiceInfoLine _vendInvoiceInfoLine, Set _subLineSet</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendPackingSlipTrans    vendPackingSlipTrans;</span><br><span class=\"line\">        VendInvoiceInfoSubLine  vendInvoiceInfoSubLine;</span><br><span class=\"line\">        SetEnumerator           se = _subLineSet.getEnumerator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (se.moveNext())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            vendPackingSlipTrans = se.current();</span><br><span class=\"line\"></span><br><span class=\"line\">            vend</span><br><span class=\"line\"></span><br><span class=\"line\">InvoiceInfoSubLine.clear();</span><br><span class=\"line\">            vendInvoiceInfoSubLine.initFromLine(_vendInvoiceInfoLine);</span><br><span class=\"line\">            vendInvoiceInfoSubLine.initFromVendPackingSlipTrans(vendPackingSlipTrans);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.insertParmSubLine(vendInvoiceInfoSubLine);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!_vendInvoiceInfoLine.vendInvoiceInfoSubTable())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            VendInvoiceInfoSubTable::createFromVendInvoiceInfoLine(_vendInvoiceInfoLine, _vendInvoiceInfoLine.ParmId, gDescription, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> VendInvoiceInfoTable <span class=\"title\">createParmTable</span>()</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoTable        vendInvoiceInfoTable;</span><br><span class=\"line\"></span><br><span class=\"line\">        vendInvoiceInfoTable.clear();</span><br><span class=\"line\">        vendInvoiceInfoTable.initValue();</span><br><span class=\"line\">        vendInvoiceInfoTable.defaultRow(gPurchTable);</span><br><span class=\"line\">        vendInvoiceInfoTable.initFromPurchTable(gPurchTable);</span><br><span class=\"line\">        vendInvoiceInfoTable.DocumentOrigin         = DocumentOrigin::Manual;</span><br><span class=\"line\">        vendInvoiceInfoTable.Num                    = gInvoiceNumber;</span><br><span class=\"line\">        vendInvoiceInfoTable.VendInvoiceSaveStatus  = VendInvoiceSaveStatus::Pending;</span><br><span class=\"line\">        vendInvoiceInfoTable.Description            = <span class=\"string\">&#x27;Retail POS Sale&#x27;</span>;</span><br><span class=\"line\">        vendInvoiceInfoTable.DocumentDate           = gInvoiceDate;</span><br><span class=\"line\">        vendInvoiceInfoTable.TransDate              = gInvoiceDate;</span><br><span class=\"line\">        vendInvoiceInfoTable.LastMatchVariance      = LastMatchVarianceOptions::OK;</span><br><span class=\"line\">        vendInvoiceInfoTable.ParmJobStatus          = ParmJobStatus::Waiting;</span><br><span class=\"line\">        vendInvoiceInfoTable.Approved               = NoYes::Yes;</span><br><span class=\"line\">        vendInvoiceInfoTable.Approver               = HcmWorker::userId2Worker(curUserId());</span><br><span class=\"line\">        vendInvoiceInfoTable.TableRefId             = <span class=\"keyword\">this</span>.getTableRefId();</span><br><span class=\"line\">        vendInvoiceInfoTable.Ordering               = DocumentStatus::Invoice;</span><br><span class=\"line\">        vendInvoiceInfoTable.initInvoiceTotals();</span><br><span class=\"line\">        vendInvoiceInfoTable.insert();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> vendInvoiceInfoTable;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createParmSubTable</span>(<span class=\"params\">VendInvoiceInfoTable _vendInvoiceInfoTable</span>)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        VendInvoiceInfoSubTable::createFromVendInvoiceInfoTable(_vendInvoiceInfoTable, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Merge the Ledger Account","comments":1,"date":"2024-12-23T07:56:06.000Z","description":"Merge the Ledger Account","_content":"\n\nThe example code as shown below:\n\n```c#\npublic static LedgerDimensionAccount generateDefaultDimension(container _conName, container _conValue)\n{\n    DimensionAttributeValueSetStorage   valueSetStorage = new DimensionAttributeValueSetStorage();\n    int                                 i;\n    DimensionAttribute                  dimensionAttribute;\n    DimensionAttributeValue             dimensionAttributeValue;\n    container                           conAttr  = _conName;\n    container                           conValue = _conValue;\n    str                                 dimValue;\n\n    for (i = 1; i <= conLen(conAttr); i++)\n    {\n        dimensionAttribute = dimensionAttribute::findByName(conPeek(conAttr,i));\n\n        if (dimensionAttribute.RecId == 0)\n        {\n            continue;\n        }\n\n        dimValue = conPeek(conValue,i);\n\n        if (dimValue != \"\")\n        {\n            // The last parameter is \"true\". A dimensionAttributeValue record will be created if not found.\n            dimensionAttributeValue = dimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, dimValue, false, true);\n\n            // Add the dimensionAttibuteValue to the default dimension\n            valueSetStorage.addItem(dimensionAttributeValue);\n        }\n    }\n    return valueSetStorage.save();\n}\n\npublic static LedgerDimensionAccount replaceDefaultDimensionValues(\n    DimensionDefault    _invoiceDefaultDimension,\n    DimensionDefault    _purchDefaultDimension,\n    container           _conName)\n{\n    DimensionAttributeValueSetStorage invoiceValueSetStorage    = DimensionAttributeValueSetStorage::find(_invoiceDefaultDimension);\n    DimensionAttributeValueSetStorage purchValueSetStorage      = DimensionAttributeValueSetStorage::find(_purchDefaultDimension);\n\n    for (int i = 1; i <= conLen(_conName); i++)\n    {\n        var dimensionAttribute      = DimensionAttribute::findByName(conPeek(_conName, i));\n        var invoiceDimensionValue   = invoiceValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);\n        var purchDimensionValue     = purchValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);\n\n        if (purchDimensionValue && (purchDimensionValue != invoiceDimensionValue))\n        {\n            var newDimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, purchDimensionValue, false, true);\n\n            invoiceValueSetStorage.removeDimensionAttribute(dimensionAttribute.RecId);\n            invoiceValueSetStorage.addItem(newDimensionAttributeValue);\n        }\n    }    \n    return invoiceValueSetStorage.save();\n}\n```","source":"_posts/xpp-merge-ledger-account.md","raw":"---\ntitle: Merge the Ledger Account\ncategories:\n - d365\n - x++\ncomments: true\ndate: 2024-12-23 15:56:06\ntags:\ndescription: Merge the Ledger Account\n---\n\n\nThe example code as shown below:\n\n```c#\npublic static LedgerDimensionAccount generateDefaultDimension(container _conName, container _conValue)\n{\n    DimensionAttributeValueSetStorage   valueSetStorage = new DimensionAttributeValueSetStorage();\n    int                                 i;\n    DimensionAttribute                  dimensionAttribute;\n    DimensionAttributeValue             dimensionAttributeValue;\n    container                           conAttr  = _conName;\n    container                           conValue = _conValue;\n    str                                 dimValue;\n\n    for (i = 1; i <= conLen(conAttr); i++)\n    {\n        dimensionAttribute = dimensionAttribute::findByName(conPeek(conAttr,i));\n\n        if (dimensionAttribute.RecId == 0)\n        {\n            continue;\n        }\n\n        dimValue = conPeek(conValue,i);\n\n        if (dimValue != \"\")\n        {\n            // The last parameter is \"true\". A dimensionAttributeValue record will be created if not found.\n            dimensionAttributeValue = dimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, dimValue, false, true);\n\n            // Add the dimensionAttibuteValue to the default dimension\n            valueSetStorage.addItem(dimensionAttributeValue);\n        }\n    }\n    return valueSetStorage.save();\n}\n\npublic static LedgerDimensionAccount replaceDefaultDimensionValues(\n    DimensionDefault    _invoiceDefaultDimension,\n    DimensionDefault    _purchDefaultDimension,\n    container           _conName)\n{\n    DimensionAttributeValueSetStorage invoiceValueSetStorage    = DimensionAttributeValueSetStorage::find(_invoiceDefaultDimension);\n    DimensionAttributeValueSetStorage purchValueSetStorage      = DimensionAttributeValueSetStorage::find(_purchDefaultDimension);\n\n    for (int i = 1; i <= conLen(_conName); i++)\n    {\n        var dimensionAttribute      = DimensionAttribute::findByName(conPeek(_conName, i));\n        var invoiceDimensionValue   = invoiceValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);\n        var purchDimensionValue     = purchValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);\n\n        if (purchDimensionValue && (purchDimensionValue != invoiceDimensionValue))\n        {\n            var newDimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, purchDimensionValue, false, true);\n\n            invoiceValueSetStorage.removeDimensionAttribute(dimensionAttribute.RecId);\n            invoiceValueSetStorage.addItem(newDimensionAttributeValue);\n        }\n    }    \n    return invoiceValueSetStorage.save();\n}\n```","slug":"xpp-merge-ledger-account","published":1,"updated":"2025-02-23T13:07:53.979Z","layout":"post","photos":[],"_id":"cm7j2rsci000mqgughf5m2d6h","content":"<p>The example code as shown below:</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LedgerDimensionAccount <span class=\"title\">generateDefaultDimension</span>(<span class=\"params\">container _conName, container _conValue</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DimensionAttributeValueSetStorage   valueSetStorage = <span class=\"keyword\">new</span> DimensionAttributeValueSetStorage();</span><br><span class=\"line\">    <span class=\"built_in\">int</span>                                 i;</span><br><span class=\"line\">    DimensionAttribute                  dimensionAttribute;</span><br><span class=\"line\">    DimensionAttributeValue             dimensionAttributeValue;</span><br><span class=\"line\">    container                           conAttr  = _conName;</span><br><span class=\"line\">    container                           conValue = _conValue;</span><br><span class=\"line\">    str                                 dimValue;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= conLen(conAttr); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dimensionAttribute = dimensionAttribute::findByName(conPeek(conAttr,i));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dimensionAttribute.RecId == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        dimValue = conPeek(conValue,i);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dimValue != <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// The last parameter is &quot;true&quot;. A dimensionAttributeValue record will be created if not found.</span></span><br><span class=\"line\">            dimensionAttributeValue = dimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, dimValue, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Add the dimensionAttibuteValue to the default dimension</span></span><br><span class=\"line\">            valueSetStorage.addItem(dimensionAttributeValue);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> valueSetStorage.save();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LedgerDimensionAccount <span class=\"title\">replaceDefaultDimensionValues</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    DimensionDefault    _invoiceDefaultDimension,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    DimensionDefault    _purchDefaultDimension,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    container           _conName</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DimensionAttributeValueSetStorage invoiceValueSetStorage    = DimensionAttributeValueSetStorage::find(_invoiceDefaultDimension);</span><br><span class=\"line\">    DimensionAttributeValueSetStorage purchValueSetStorage      = DimensionAttributeValueSetStorage::find(_purchDefaultDimension);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= conLen(_conName); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dimensionAttribute      = DimensionAttribute::findByName(conPeek(_conName, i));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> invoiceDimensionValue   = invoiceValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> purchDimensionValue     = purchValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (purchDimensionValue &amp;&amp; (purchDimensionValue != invoiceDimensionValue))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> newDimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, purchDimensionValue, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            invoiceValueSetStorage.removeDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\">            invoiceValueSetStorage.addItem(newDimensionAttributeValue);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> invoiceValueSetStorage.save();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>The example code as shown below:</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LedgerDimensionAccount <span class=\"title\">generateDefaultDimension</span>(<span class=\"params\">container _conName, container _conValue</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DimensionAttributeValueSetStorage   valueSetStorage = <span class=\"keyword\">new</span> DimensionAttributeValueSetStorage();</span><br><span class=\"line\">    <span class=\"built_in\">int</span>                                 i;</span><br><span class=\"line\">    DimensionAttribute                  dimensionAttribute;</span><br><span class=\"line\">    DimensionAttributeValue             dimensionAttributeValue;</span><br><span class=\"line\">    container                           conAttr  = _conName;</span><br><span class=\"line\">    container                           conValue = _conValue;</span><br><span class=\"line\">    str                                 dimValue;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">1</span>; i &lt;= conLen(conAttr); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dimensionAttribute = dimensionAttribute::findByName(conPeek(conAttr,i));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dimensionAttribute.RecId == <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        dimValue = conPeek(conValue,i);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dimValue != <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// The last parameter is &quot;true&quot;. A dimensionAttributeValue record will be created if not found.</span></span><br><span class=\"line\">            dimensionAttributeValue = dimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, dimValue, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Add the dimensionAttibuteValue to the default dimension</span></span><br><span class=\"line\">            valueSetStorage.addItem(dimensionAttributeValue);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> valueSetStorage.save();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> LedgerDimensionAccount <span class=\"title\">replaceDefaultDimensionValues</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    DimensionDefault    _invoiceDefaultDimension,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    DimensionDefault    _purchDefaultDimension,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">    container           _conName</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    DimensionAttributeValueSetStorage invoiceValueSetStorage    = DimensionAttributeValueSetStorage::find(_invoiceDefaultDimension);</span><br><span class=\"line\">    DimensionAttributeValueSetStorage purchValueSetStorage      = DimensionAttributeValueSetStorage::find(_purchDefaultDimension);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">1</span>; i &lt;= conLen(_conName); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dimensionAttribute      = DimensionAttribute::findByName(conPeek(_conName, i));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> invoiceDimensionValue   = invoiceValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> purchDimensionValue     = purchValueSetStorage.getDisplayValueByDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (purchDimensionValue &amp;&amp; (purchDimensionValue != invoiceDimensionValue))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> newDimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(dimensionAttribute, purchDimensionValue, <span class=\"literal\">false</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            invoiceValueSetStorage.removeDimensionAttribute(dimensionAttribute.RecId);</span><br><span class=\"line\">            invoiceValueSetStorage.addItem(newDimensionAttributeValue);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> invoiceValueSetStorage.save();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Open in Microsoft Office","comments":1,"date":"2025-01-18T14:15:28.000Z","description":"Open in Microsoft Office","_content":"\n## Operation Step\n\nThe first step is to implement the **OfficeIMenuCustomizer** and **OfficeIGenerateWorkbookCustomExporter**.\n\n{% asset_img \"xpp-open-in-office.png\" \"Class Header\" %}\n\nThe example code is as follows:\n\n{% asset_img \"xpp-open-in-office2.png\" \"Class Header\" %}\n\n{% asset_img \"xpp-open-in-office3.png\" \"Class Header\" %}\n\n## Filter Setting\n\nDo not use the Recid of the primary table as the filter condition. This will inevitably require the Recid of the primary table to be released, but this will cause an insertion problem for the data entity: since RecId is the primary key of the primary table, it will make an insertion error regardless of any field entered, and will not be able to skip validation.\n\nIn this case, you can only use other unique keys instead, but many unique indexes contain multiple fields, so you need to create a computed column in the data entity and then construct a computed column field from the multiple fields of the unique index.","source":"_posts/xpp-open-in-office.md","raw":"---\ntitle: Open in Microsoft Office\ncomments: true\ndate: 2025-01-18 22:15:28\ntags: \ncategories:\n - d365\n - x++\ndescription: Open in Microsoft Office\n---\n\n## Operation Step\n\nThe first step is to implement the **OfficeIMenuCustomizer** and **OfficeIGenerateWorkbookCustomExporter**.\n\n{% asset_img \"xpp-open-in-office.png\" \"Class Header\" %}\n\nThe example code is as follows:\n\n{% asset_img \"xpp-open-in-office2.png\" \"Class Header\" %}\n\n{% asset_img \"xpp-open-in-office3.png\" \"Class Header\" %}\n\n## Filter Setting\n\nDo not use the Recid of the primary table as the filter condition. This will inevitably require the Recid of the primary table to be released, but this will cause an insertion problem for the data entity: since RecId is the primary key of the primary table, it will make an insertion error regardless of any field entered, and will not be able to skip validation.\n\nIn this case, you can only use other unique keys instead, but many unique indexes contain multiple fields, so you need to create a computed column in the data entity and then construct a computed column field from the multiple fields of the unique index.","slug":"xpp-open-in-office","published":1,"updated":"2025-02-23T13:05:10.128Z","layout":"post","photos":[],"_id":"cm7j2rscj000qqgug5zz07mta","content":"<h2 id=\"Operation-Step\"><a href=\"#Operation-Step\" class=\"headerlink\" title=\"Operation Step\"></a>Operation Step</h2><p>The first step is to implement the <strong>OfficeIMenuCustomizer</strong> and <strong>OfficeIGenerateWorkbookCustomExporter</strong>.</p>\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office.png\" class=\"\" title=\"Class Header\">\n\n<p>The example code is as follows:</p>\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office2.png\" class=\"\" title=\"Class Header\">\n\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office3.png\" class=\"\" title=\"Class Header\">\n\n<h2 id=\"Filter-Setting\"><a href=\"#Filter-Setting\" class=\"headerlink\" title=\"Filter Setting\"></a>Filter Setting</h2><p>Do not use the Recid of the primary table as the filter condition. This will inevitably require the Recid of the primary table to be released, but this will cause an insertion problem for the data entity: since RecId is the primary key of the primary table, it will make an insertion error regardless of any field entered, and will not be able to skip validation.</p>\n<p>In this case, you can only use other unique keys instead, but many unique indexes contain multiple fields, so you need to create a computed column in the data entity and then construct a computed column field from the multiple fields of the unique index.</p>\n","excerpt":"","more":"<h2 id=\"Operation-Step\"><a href=\"#Operation-Step\" class=\"headerlink\" title=\"Operation Step\"></a>Operation Step</h2><p>The first step is to implement the <strong>OfficeIMenuCustomizer</strong> and <strong>OfficeIGenerateWorkbookCustomExporter</strong>.</p>\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office.png\" class=\"\" title=\"Class Header\">\n\n<p>The example code is as follows:</p>\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office2.png\" class=\"\" title=\"Class Header\">\n\n<img src=\"/2025/01/18/xpp-open-in-office/xpp-open-in-office3.png\" class=\"\" title=\"Class Header\">\n\n<h2 id=\"Filter-Setting\"><a href=\"#Filter-Setting\" class=\"headerlink\" title=\"Filter Setting\"></a>Filter Setting</h2><p>Do not use the Recid of the primary table as the filter condition. This will inevitably require the Recid of the primary table to be released, but this will cause an insertion problem for the data entity: since RecId is the primary key of the primary table, it will make an insertion error regardless of any field entered, and will not be able to skip validation.</p>\n<p>In this case, you can only use other unique keys instead, but many unique indexes contain multiple fields, so you need to create a computed column in the data entity and then construct a computed column field from the multiple fields of the unique index.</p>\n"}],"PostAsset":[{"_id":"source/_posts/ai-plateform-flask/image.png","post":"cm7j2rsca0005qgug1wfc9gwt","slug":"image.png","modified":1,"renderable":0},{"_id":"source/_posts/commerce-cache/commerce-cache-example.png","post":"cm7j2rscb0006qgugazuob9dr","slug":"commerce-cache-example.png","modified":1,"renderable":0},{"_id":"source/_posts/xpp-api-list/xpp-api-list-recordinsertlist.png","post":"cm7j2rscg000hqgug0kvacxdc","slug":"xpp-api-list-recordinsertlist.png","modified":1,"renderable":0},{"_id":"source/_posts/xpp-debug-configuration/xpp-debug-configuration.png","post":"cm7j2rsch000jqgug33zmc38v","slug":"xpp-debug-configuration.png","modified":1,"renderable":0},{"_id":"source/_posts/mssql-clear-log/mssql-clear-log.png","post":"cm7j2rscf000eqgug5rxi137g","slug":"mssql-clear-log.png","modified":1,"renderable":0},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office.png","post":"cm7j2rscj000qqgug5zz07mta","slug":"xpp-open-in-office.png","modified":1,"renderable":0},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office2.png","post":"cm7j2rscj000qqgug5zz07mta","slug":"xpp-open-in-office2.png","modified":1,"renderable":0},{"_id":"source/_posts/xpp-open-in-office/xpp-open-in-office3.png","post":"cm7j2rscj000qqgug5zz07mta","slug":"xpp-open-in-office3.png","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cm7j2rscc0008qgugbk0ncdeu","category_id":"cm7j2rscg000fqgug95fq6gip","_id":"cm7j2rsci000nqgugb5uk7xtm"},{"post_id":"cm7j2rsci000lqgug1yncbu0g","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rscj000rqgug04kta0j3"},{"post_id":"cm7j2rsci000lqgug1yncbu0g","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rscj000tqgug8re2aeen"},{"post_id":"cm7j2rscc0009qgug7zpe554m","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck000uqgughf5gh239"},{"post_id":"cm7j2rscc0009qgug7zpe554m","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck000wqgughdh16ku1"},{"post_id":"cm7j2rsci000mqgughf5m2d6h","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck000xqgugep5e2sv9"},{"post_id":"cm7j2rsci000mqgughf5m2d6h","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck000zqgugaps01pzs"},{"post_id":"cm7j2rscj000qqgug5zz07mta","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck0010qgug09gdeniz"},{"post_id":"cm7j2rscj000qqgug5zz07mta","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck0012qgugf1csbqh3"},{"post_id":"cm7j2rsca0005qgug1wfc9gwt","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck0013qgug7s3m6uok"},{"post_id":"cm7j2rsca0005qgug1wfc9gwt","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck0015qgug1eo6eb0w"},{"post_id":"cm7j2rscd000bqgug29am3p0h","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck0016qgug52fog56j"},{"post_id":"cm7j2rscd000bqgug29am3p0h","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck0017qgugb2zp1ut4"},{"post_id":"cm7j2rscb0006qgugazuob9dr","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck0018qgug0q979g9n"},{"post_id":"cm7j2rscb0006qgugazuob9dr","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck0019qgugfkmb4be8"},{"post_id":"cm7j2rscf000eqgug5rxi137g","category_id":"cm7j2rsck000yqgugcmfd0x16","_id":"cm7j2rsck001aqgug9i9b2ivc"},{"post_id":"cm7j2rscg000hqgug0kvacxdc","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck001bqgugdcer9wkr"},{"post_id":"cm7j2rscg000hqgug0kvacxdc","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck001cqgug1jr71bzr"},{"post_id":"cm7j2rsch000jqgug33zmc38v","category_id":"cm7j2rscb0007qguga9ii2chz","_id":"cm7j2rsck001dqgug4bijednf"},{"post_id":"cm7j2rsch000jqgug33zmc38v","category_id":"cm7j2rsch000kqgug6l2fh9u1","_id":"cm7j2rsck001eqgughtcv5j6l"}],"PostTag":[{"post_id":"cm7j2rscc0008qgugbk0ncdeu","tag_id":"cm7j2rscd000aqgug6flv4qif","_id":"cm7j2rscg000gqgugbfke6fmw"},{"post_id":"cm7j2rscf000eqgug5rxi137g","tag_id":"cm7j2rsch000iqgug0ln3348h","_id":"cm7j2rscj000pqgughkcd2rqa"}],"Tag":[{"name":"Retail Commerce","_id":"cm7j2rscd000aqgug6flv4qif"},{"name":"X++","_id":"cm7j2rsch000iqgug0ln3348h"}]}}